# coding: utf-8

"""
    Akeneo PIM REST API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.models.products_embedded_items_inner_all_of1 import ProductsEmbeddedItemsInnerAllOf1  # noqa: E501
from openapi_client.rest import ApiException

class TestProductsEmbeddedItemsInnerAllOf1(unittest.TestCase):
    """ProductsEmbeddedItemsInnerAllOf1 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test ProductsEmbeddedItemsInnerAllOf1
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ProductsEmbeddedItemsInnerAllOf1`
        """
        model = openapi_client.models.products_embedded_items_inner_all_of1.ProductsEmbeddedItemsInnerAllOf1()  # noqa: E501
        if include_optional :
            return ProductsEmbeddedItemsInnerAllOf1(
                uuid = '', 
                identifier = '', 
                enabled = True, 
                family = 'null only in the case of a non variant product', 
                categories = [
                    ''
                    ], 
                groups = [
                    ''
                    ], 
                parent = '', 
                values = {
                    'key' : [
                        openapi_client.models.products__embedded_items_inner_all_of_1_values_value_inner.Products__embedded_items_inner_allOf_1_values_value_inner(
                            scope = '', 
                            locale = '', 
                            data = openapi_client.models.data.data(), 
                            linked_data = openapi_client.models.products__embedded_items_inner_all_of_1_values_value_inner_linked_data.Products__embedded_items_inner_allOf_1_values_value_inner_linked_data(
                                attribute = '', 
                                code = '', 
                                labels = openapi_client.models.labels.labels(), ), )
                        ]
                    }, 
                associations = openapi_client.models.products__embedded_items_inner_all_of_1_associations.Products__embedded_items_inner_allOf_1_associations(
                    association_type_code = openapi_client.models.products__embedded_items_inner_all_of_1_associations_association_type_code.Products__embedded_items_inner_allOf_1_associations_associationTypeCode(
                        groups = [
                            ''
                            ], 
                        products = [
                            ''
                            ], 
                        product_models = [
                            ''
                            ], ), ), 
                quantified_associations = openapi_client.models.products__embedded_items_inner_all_of_1_quantified_associations.Products__embedded_items_inner_allOf_1_quantified_associations(
                    quantified_association_type_code = openapi_client.models.products__embedded_items_inner_all_of_1_quantified_associations_quantified_association_type_code.Products__embedded_items_inner_allOf_1_quantified_associations_quantifiedAssociationTypeCode(
                        products = [
                            openapi_client.models.products__embedded_items_inner_all_of_1_quantified_associations_quantified_association_type_code_products_inner.Products__embedded_items_inner_allOf_1_quantified_associations_quantifiedAssociationTypeCode_products_inner(
                                identifier = '', 
                                quantity = 56, )
                            ], 
                        product_models = [
                            openapi_client.models.products__embedded_items_inner_all_of_1_quantified_associations_quantified_association_type_code_product_models_inner.Products__embedded_items_inner_allOf_1_quantified_associations_quantifiedAssociationTypeCode_product_models_inner(
                                code = '', 
                                quantity = 56, )
                            ], ), ), 
                created = '', 
                updated = '', 
                metadata = openapi_client.models.products__embedded_items_inner_all_of_1_metadata.Products__embedded_items_inner_allOf_1_metadata(
                    workflow_status = 'read_only', ), 
                quality_scores = None, 
                completenesses = [
                    openapi_client.models.products__embedded_items_inner_all_of_1_completenesses_inner.Products__embedded_items_inner_allOf_1_completenesses_inner(
                        scope = '', 
                        locale = '', 
                        data = 56, )
                    ]
            )
        else :
            return ProductsEmbeddedItemsInnerAllOf1(
                identifier = '',
        )
        """

    def testProductsEmbeddedItemsInnerAllOf1(self):
        """Test ProductsEmbeddedItemsInnerAllOf1"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
