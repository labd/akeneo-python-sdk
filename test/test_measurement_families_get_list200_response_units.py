# coding: utf-8

"""
    Akeneo PIM REST API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.models.measurement_families_get_list200_response_units import MeasurementFamiliesGetList200ResponseUnits  # noqa: E501
from openapi_client.rest import ApiException

class TestMeasurementFamiliesGetList200ResponseUnits(unittest.TestCase):
    """MeasurementFamiliesGetList200ResponseUnits unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test MeasurementFamiliesGetList200ResponseUnits
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MeasurementFamiliesGetList200ResponseUnits`
        """
        model = openapi_client.models.measurement_families_get_list200_response_units.MeasurementFamiliesGetList200ResponseUnits()  # noqa: E501
        if include_optional :
            return MeasurementFamiliesGetList200ResponseUnits(
                unit_code = openapi_client.models.measurement_families_get_list_200_response_units_unit_code.measurement_families_get_list_200_response_units_unitCode(
                    code = '', 
                    labels = openapi_client.models.measurement_families_get_list_200_response_units_unit_code_labels.measurement_families_get_list_200_response_units_unitCode_labels(
                        locale_code = '', ), 
                    convert_from_standard = [
                        openapi_client.models.measurement_families_get_list_200_response_units_unit_code_convert_from_standard_inner.measurement_families_get_list_200_response_units_unitCode_convert_from_standard_inner(
                            operator = 'mul', 
                            value = '', )
                        ], 
                    symbol = '', )
            )
        else :
            return MeasurementFamiliesGetList200ResponseUnits(
        )
        """

    def testMeasurementFamiliesGetList200ResponseUnits(self):
        """Test MeasurementFamiliesGetList200ResponseUnits"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
