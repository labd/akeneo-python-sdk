{
    "openapi": "3.0.1",
    "info": {
      "title": "Akeneo PIM REST API",
      "version": "1.0.0"
    },
    "servers": [
      {
        "url": "http://demo.akeneo.com/"
      }
    ],
    "paths": {
      "/api/rest/v1/products": {
        "get": {
          "tags": [
            "Product [identifier]"
          ],
          "summary": "Get list of products",
          "description": "This endpoint allows you to get a list of products. Products are paginated and they can be filtered. In the Enterprise Edition, since the 2.0, permissions based on your user groups are applied to the set of products you request.",
          "operationId": "get_products",
          "parameters": [
            {
              "name": "search",
              "in": "query",
              "description": "Filter products, for more details see the <a href=\"/documentation/filter.html\">Filters</a> section",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "scope",
              "in": "query",
              "description": "Filter product values to return scopable attributes for the given channel as well as the non localizable/non scopable attributes, for more details see the <a href=\"/documentation/filter.html#via-channel\">Filter product values via channel</a> section",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "locales",
              "in": "query",
              "description": "Filter product values to return localizable attributes for the given locales as well as the non localizable/non scopable attributes, for more details see the <a href=\"/documentation/filter.html#via-locale\">Filter product values via locale</a> section",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "attributes",
              "in": "query",
              "description": "Filter product values to only return those concerning the given attributes, for more details see the <a href=\"/documentation/filter.html#filter-product-values\">Filter on product values</a> section",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "pagination_type",
              "in": "query",
              "description": "Pagination method type, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
              "schema": {
                "type": "string",
                "default": "page",
                "enum": [
                  "page",
                  "search_after"
                ],
                "x-validation-rules": "One of the following values"
              },
              "x-validation-rules": "One of the following values"
            },
            {
              "name": "page",
              "in": "query",
              "description": "Number of the page to retrieve when using the `page` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html#pagination\">Pagination</a> section",
              "schema": {
                "type": "integer",
                "default": 1
              }
            },
            {
              "name": "search_after",
              "in": "query",
              "description": "Cursor when using the `search_after` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
              "schema": {
                "type": "string",
                "default": "cursor to the first page"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
              "schema": {
                "maximum": 100,
                "minimum": 1,
                "type": "integer",
                "default": 10
              }
            },
            {
              "name": "with_count",
              "in": "query",
              "description": "Return the count of items in the response. Be carefull with that, on a big catalog, it can decrease performance in a significative way",
              "schema": {
                "type": "boolean",
                "default": false
              }
            },
            {
              "name": "with_attribute_options",
              "in": "query",
              "description": "Return labels of attribute options in the response. (Only available since the 5.0 version)",
              "schema": {
                "type": "boolean",
                "default": false,
                "x-from-version": "5.0"
              },
              "x-from-version": "5.0"
            },
            {
              "name": "with_quality_scores",
              "in": "query",
              "description": "Return product quality scores in the response. (Only available since the 5.0 version)",
              "schema": {
                "type": "boolean",
                "default": false,
                "x-from-version": "5.0"
              },
              "x-from-version": "5.0"
            },
            {
              "name": "with_completenesses",
              "in": "query",
              "description": "Return product completenesses in the response. (Only available since the 6.0 version)",
              "schema": {
                "type": "boolean",
                "default": false,
                "x-from-version": "6.0"
              },
              "x-from-version": "6.0"
            }
          ],
          "responses": {
            "200": {
              "description": "Return products paginated",
              "content": {
                "application/json": {
                  "schema": {
                    "title": "Products",
                    "type": "object",
                    "properties": {
                      "_embedded": {
                        "type": "object",
                        "properties": {
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "_links": {
                                      "type": "object",
                                      "properties": {
                                        "self": {
                                          "type": "object",
                                          "properties": {
                                            "href": {
                                              "type": "string",
                                              "description": "URI of the resource"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "required": [
                                    "identifier"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "uuid": {
                                      "type": "string",
                                      "description": "Product UUID",
                                      "x-from-version": "7.0"
                                    },
                                    "identifier": {
                                      "type": "string",
                                      "description": "Product identifier, i.e. the value of the only `pim_catalog_identifier` attribute"
                                    },
                                    "enabled": {
                                      "type": "boolean",
                                      "description": "Whether the product is enabled",
                                      "default": true
                                    },
                                    "family": {
                                      "type": "string",
                                      "description": "<a href='api-reference.html#Family'>Family</a> code from which the product inherits its attributes and attributes requirements.",
                                      "default": "null only in the case of a non variant product",
                                      "x-validation-rules": "It is equal to an existing family code. In the case of variant product, the given family should be the same as the product model family."
                                    },
                                    "categories": {
                                      "type": "array",
                                      "description": "Codes of the <a href='api-reference.html#Category'>categories</a> in which the product is classified",
                                      "items": {
                                        "type": "string"
                                      },
                                      "x-validation-rules": "Each string of the array is equal to an existing category code"
                                    },
                                    "groups": {
                                      "type": "array",
                                      "description": "Codes of the groups to which the product belong",
                                      "items": {
                                        "type": "string"
                                      },
                                      "x-validation-rules": "Each string of the array is equal to an existing group code"
                                    },
                                    "parent": {
                                      "type": "string",
                                      "description": "Code of the parent <a href='api-reference.html#Productmodel'>product model</a> when the product is a variant (only available since the 2.0). This parent can be modified since the 2.3.",
                                      "default": "null",
                                      "x-validation-rules": "It is equal to an existing product model code only if the product is variant otherwise it's equal to null",
                                      "x-from-version": "2.0"
                                    },
                                    "values": {
                                      "type": "object",
                                      "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "scope": {
                                              "type": "string",
                                              "description": "<a href='api-reference.html#Channel'>Channel</a> code of the product value"
                                            },
                                            "locale": {
                                              "type": "string",
                                              "description": "<a href='api-reference.html#Locale'>Locale</a> code of the product value"
                                            },
                                            "data": {
                                              "type": "object",
                                              "properties": {},
                                              "description": "Product value. See <a href='/concepts/products.html#the-data-format'>the `data` format</a> section for more details."
                                            },
                                            "linked_data": {
                                              "type": "object",
                                              "properties": {
                                                "attribute": {
                                                  "type": "string"
                                                },
                                                "code": {
                                                  "type": "string"
                                                },
                                                "labels": {
                                                  "type": "object",
                                                  "properties": {}
                                                }
                                              },
                                              "description": "Object containing labels of attribute options (only available since the 5.0 and when query parameter \"with_attribute_options\" is set to \"true\"). See <a href='/concepts/products.html#the-linked_data-format'>the `linked_data` format</a> section for more details.",
                                              "x-read-only": true,
                                              "x-from-version": "5.0"
                                            }
                                          }
                                        }
                                      },
                                      "description": "Product attributes values, see <a href='/concepts/products.html#focus-on-the-product-values'>Product values</a> section for more details",
                                      "x-validation-rules": "Validation rules detailed in Product values section"
                                    },
                                    "associations": {
                                      "type": "object",
                                      "properties": {
                                        "associationTypeCode": {
                                          "type": "object",
                                          "properties": {
                                            "groups": {
                                              "type": "array",
                                              "description": "Array of groups codes with which the product is in relation",
                                              "items": {
                                                "type": "string"
                                              }
                                            },
                                            "products": {
                                              "type": "array",
                                              "description": "Array of product identifiers with which the product is in relation",
                                              "items": {
                                                "type": "string"
                                              }
                                            },
                                            "product_models": {
                                              "type": "array",
                                              "description": "Array of product model codes with which the product is in relation (only available since the v2.1)",
                                              "items": {
                                                "type": "string"
                                              },
                                              "x-from-version": "2.1"
                                            }
                                          }
                                        }
                                      },
                                      "description": "Several associations related to groups, product models and/or other products, grouped by association types",
                                      "x-validation-rules": "&bull; The `associationTypeCode` is the code of an existing association type. &#10;&bull; Each string in the array of the property `groups` is the code of an existing group. &#10;&bull; Each string in the array of the property `products` is the identifier of an existing product. &#10;&bull; Each string in the array of the property `product_models` is the code of an existing product model."
                                    },
                                    "quantified_associations": {
                                      "type": "object",
                                      "properties": {
                                        "quantifiedAssociationTypeCode": {
                                          "type": "object",
                                          "properties": {
                                            "products": {
                                              "type": "array",
                                              "description": "Array of objects containing product identifiers and quantities with which the product is in relation",
                                              "items": {
                                                "type": "object",
                                                "properties": {
                                                  "identifier": {
                                                    "type": "string"
                                                  },
                                                  "quantity": {
                                                    "type": "integer"
                                                  }
                                                }
                                              }
                                            },
                                            "product_models": {
                                              "type": "array",
                                              "description": "Array of objects containing product model codes and quantities with which the product is in relation",
                                              "items": {
                                                "type": "object",
                                                "properties": {
                                                  "code": {
                                                    "type": "string"
                                                  },
                                                  "quantity": {
                                                    "type": "integer"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "description": "Several quantified associations related to products and/or product models, grouped by quantified association types (only available since the 5.0)",
                                      "x-validation-rules": "&bull; The `quantifiedAssociationTypeCode` is the code of an existing association type which provides quantity information. &#10;&bull; Each object in the array of the property `products` contains the identifier of an existing product and the quantity of it.",
                                      "x-from-version": "5.0"
                                    },
                                    "created": {
                                      "type": "string",
                                      "description": "Date of creation",
                                      "format": "dateTime",
                                      "x-immutable": true,
                                      "x-read-only": true
                                    },
                                    "updated": {
                                      "type": "string",
                                      "description": "Date of the last update",
                                      "format": "dateTime",
                                      "x-read-only": true
                                    },
                                    "metadata": {
                                      "type": "object",
                                      "properties": {
                                        "workflow_status": {
                                          "type": "string",
                                          "description": "Status of the product regarding the user permissions",
                                          "enum": [
                                            "read_only",
                                            "draft_in_progress",
                                            "proposal_waiting_for_approval",
                                            "working_copy"
                                          ]
                                        }
                                      },
                                      "description": "More information around the product (only available since the v2.0 in the Enterprise Edition)",
                                      "x-immutable": true,
                                      "x-read-only": true,
                                      "x-from-version": "2.0"
                                    },
                                    "quality_scores": {
                                      "type": "object",
                                      "properties": {},
                                      "description": "Product quality scores for each channel/locale combination (only available since the 5.0 and when the \"with_quality_scores\" query parameter is set to \"true\")",
                                      "x-immutable": true,
                                      "x-read-only": true,
                                      "x-from-version": "5.0"
                                    },
                                    "completenesses": {
                                      "type": "array",
                                      "description": "Product completenesses for each channel/locale combination (only available since the 7.0 version, and when the \"with_completenesses\" query parameter is set to \"true\")",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "scope": {
                                            "type": "string"
                                          },
                                          "locale": {
                                            "type": "string"
                                          },
                                          "data": {
                                            "type": "integer"
                                          }
                                        }
                                      },
                                      "x-immutable": true,
                                      "x-read-only": true,
                                      "x-from-version": "7.0"
                                    }
                                  },
                                  "example": {
                                    "identifier": "top",
                                    "enabled": true,
                                    "family": "tshirt",
                                    "categories": [
                                      "summer_collection"
                                    ],
                                    "groups": [],
                                    "values": {
                                      "name": [
                                        {
                                          "data": "Top",
                                          "locale": "en_US"
                                        },
                                        {
                                          "data": "Débardeur",
                                          "locale": "fr_FR"
                                        }
                                      ],
                                      "description": [
                                        {
                                          "data": "Summer top",
                                          "locale": "en_US",
                                          "scope": "ecommerce"
                                        },
                                        {
                                          "data": "Top",
                                          "locale": "en_US",
                                          "scope": "tablet"
                                        },
                                        {
                                          "data": "Débardeur pour l'été",
                                          "locale": "fr_FR",
                                          "scope": "ecommerce"
                                        },
                                        {
                                          "data": "Débardeur",
                                          "locale": "fr_FR",
                                          "scope": "tablet"
                                        }
                                      ],
                                      "price": [
                                        {
                                          "data": [
                                            {
                                              "amount": "15.5",
                                              "currency": "EUR"
                                            },
                                            {
                                              "amount": "15",
                                              "currency": "USD"
                                            }
                                          ]
                                        }
                                      ],
                                      "color": [
                                        {
                                          "data": "black",
                                          "linked_data": {
                                            "attribute": "color",
                                            "code": "black",
                                            "labels": {
                                              "en_US": "Black",
                                              "fr_FR": "Noir"
                                            }
                                          }
                                        }
                                      ],
                                      "size": [
                                        {
                                          "data": "m",
                                          "linked_data": {
                                            "attribute": "size",
                                            "code": "m",
                                            "labels": {
                                              "en_US": "M",
                                              "fr_FR": "M"
                                            }
                                          }
                                        }
                                      ],
                                      "collection": [
                                        {
                                          "data": [
                                            "winter_2016"
                                          ],
                                          "linked_data": {
                                            "winter_2016": {
                                              "attribute": "collection",
                                              "code": "winter_2016",
                                              "labels": {
                                                "en_US": "Winter 2016",
                                                "fr_FR": "Hiver 2016"
                                              }
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    "created": "2016-06-23T18:24:44+02:00",
                                    "updated": "2016-06-25T17:56:12+02:00",
                                    "associations": {
                                      "PACK": {
                                        "products": [
                                          "sunglass"
                                        ],
                                        "product_models": [],
                                        "groups": []
                                      }
                                    },
                                    "quantified_associations": {
                                      "PRODUCT_SET": {
                                        "products": [
                                          {
                                            "identifier": "cap",
                                            "quantity": 2
                                          },
                                          {
                                            "identifier": "shoes",
                                            "quantity": 1
                                          }
                                        ],
                                        "product_models": [
                                          {
                                            "identifier": "model-biker-jacket-leather",
                                            "quantity": 2
                                          }
                                        ]
                                      }
                                    },
                                    "quality_scores": [
                                      {
                                        "scope": "ecommerce",
                                        "locale": "en_US",
                                        "data": "A"
                                      },
                                      {
                                        "scope": "ecommerce",
                                        "locale": "fr_FR",
                                        "data": "B"
                                      },
                                      {
                                        "scope": "tablet",
                                        "locale": "en_US",
                                        "data": "D"
                                      },
                                      {
                                        "scope": "tablet",
                                        "locale": "fr_FR",
                                        "data": "E"
                                      }
                                    ],
                                    "completenesses": [
                                      {
                                        "scope": "ecommerce",
                                        "locale": "en_US",
                                        "data": 10
                                      },
                                      {
                                        "scope": "ecommerce",
                                        "locale": "fr_FR",
                                        "data": 20
                                      },
                                      {
                                        "scope": "tablet",
                                        "locale": "en_US",
                                        "data": 30
                                      },
                                      {
                                        "scope": "tablet",
                                        "locale": "fr_FR",
                                        "data": 40
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        }
                      },
                      "_links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the current page of resources"
                              }
                            }
                          },
                          "first": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the first page of resources"
                              }
                            }
                          },
                          "previous": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the previous page of resources"
                              }
                            }
                          },
                          "next": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the next page of resources"
                              }
                            }
                          }
                        }
                      },
                      "current_page": {
                        "type": "integer",
                        "description": "Current page number"
                      }
                    }
                  }
                }
              },
              "x-examples-per-version": [
                {
                  "x-version": "1.7",
                  "x-example": {
                    "_links": {
                      "self": {
                        "href": "https://demo.akeneo.com/api/rest/v1/products?page=3&limit=3"
                      },
                      "first": {
                        "href": "https://demo.akeneo.com/api/rest/v1/products?page=1&limit=3"
                      },
                      "previous": {
                        "href": "https://demo.akeneo.com/api/rest/v1/products?page=2&limit=3"
                      },
                      "next": {
                        "href": "https://demo.akeneo.com/api/rest/v1/products?page=4&limit=3"
                      }
                    },
                    "current_page": 3,
                    "_embedded": {
                      "items": [
                        {
                          "_links": {
                            "self": {
                              "href": "https://demo.akeneo.com/api/rest/v1/product/top"
                            }
                          },
                          "identifier": "top",
                          "family": "tshirt",
                          "groups": [],
                          "categories": [
                            "summer_collection"
                          ],
                          "enabled": true,
                          "values": {
                            "name": [
                              {
                                "data": "Top",
                                "locale": "en_US"
                              },
                              {
                                "data": "Débardeur",
                                "locale": "fr_FR"
                              }
                            ],
                            "description": [
                              {
                                "data": "Summer top",
                                "locale": "en_US",
                                "scope": "ecommerce"
                              },
                              {
                                "data": "Top",
                                "locale": "en_US",
                                "scope": "tablet"
                              },
                              {
                                "data": "Débardeur pour l'été",
                                "locale": "fr_FR",
                                "scope": "ecommerce"
                              },
                              {
                                "data": "Débardeur",
                                "locale": "fr_FR",
                                "scope": "tablet"
                              }
                            ],
                            "price": [
                              {
                                "data": [
                                  {
                                    "amount": "15.5",
                                    "currency": "EUR"
                                  },
                                  {
                                    "amount": "15",
                                    "currency": "USD"
                                  }
                                ]
                              }
                            ],
                            "color": [
                              {
                                "data": "black"
                              }
                            ],
                            "size": [
                              {
                                "data": "m"
                              }
                            ],
                            "collection": [
                              {
                                "data": [
                                  "winter_2016"
                                ]
                              }
                            ]
                          },
                          "created": "2016-06-23T18:24:44+02:00",
                          "updated": "2016-06-25T17:56:12+02:00",
                          "associations": {
                            "PACK": {
                              "products": [
                                "sunglasses"
                              ],
                              "groups": []
                            }
                          },
                          "quantified_associations": {
                            "PRODUCT_SET": {
                              "products": [
                                {
                                  "identifier": "cap",
                                  "quantity": 2
                                },
                                {
                                  "identifier": "shoes",
                                  "quantity": 1
                                }
                              ]
                            }
                          }
                        },
                        {
                          "_links": {
                            "self": {
                              "href": "https://demo.akeneo.com/api/rest/v1/product/cap"
                            }
                          },
                          "identifier": "cap",
                          "family": "caps",
                          "groups": [],
                          "categories": [
                            "summer_collection"
                          ],
                          "enabled": true,
                          "values": {
                            "name": [
                              {
                                "data": "Cap",
                                "locale": "en_US"
                              },
                              {
                                "data": "Casquette",
                                "locale": "fr_FR"
                              }
                            ],
                            "description": [
                              {
                                "data": "Cap unisex",
                                "locale": "en_US",
                                "scope": "ecommerce"
                              },
                              {
                                "data": "Cap unisex",
                                "locale": "en_US",
                                "scope": "tablet"
                              },
                              {
                                "data": "Casquette unisexe",
                                "locale": "fr_FR",
                                "scope": "ecommerce"
                              },
                              {
                                "data": "Casquette unisexe",
                                "locale": "fr_FR",
                                "scope": "tablet"
                              }
                            ],
                            "price": [
                              {
                                "data": [
                                  {
                                    "amount": "20",
                                    "currency": "EUR"
                                  },
                                  {
                                    "amount": "20",
                                    "currency": "USD"
                                  }
                                ]
                              }
                            ],
                            "color": [
                              {
                                "data": "black"
                              }
                            ]
                          },
                          "created": "2016-06-23T18:24:44+02:00",
                          "updated": "2016-06-25T17:56:12+02:00",
                          "associations": {
                            "PACK": {
                              "products": [
                                "sunglasses"
                              ],
                              "groups": []
                            }
                          },
                          "quantified_associations": {}
                        },
                        {
                          "_links": {
                            "self": {
                              "href": "https://demo.akeneo.com/api/rest/v1/product/sweat"
                            }
                          },
                          "identifier": "sweat",
                          "groups": [],
                          "categories": [
                            "winter_collection"
                          ],
                          "enabled": true,
                          "values": {},
                          "created": "2016-06-23T11:24:44+02:00",
                          "updated": "2016-06-23T11:24:44+02:00",
                          "associations": {},
                          "quantified_associations": {}
                        }
                      ]
                    }
                  }
                },
                {
                  "x-version": "2.0",
                  "x-example": {
                    "_links": {
                      "self": {
                        "href": "https://demo.akeneo.com/api/rest/v1/products?page=3&limit=3"
                      },
                      "first": {
                        "href": "https://demo.akeneo.com/api/rest/v1/products?page=1&limit=3"
                      },
                      "previous": {
                        "href": "https://demo.akeneo.com/api/rest/v1/products?page=2&limit=3"
                      },
                      "next": {
                        "href": "https://demo.akeneo.com/api/rest/v1/products?page=4&limit=3"
                      }
                    },
                    "current_page": 3,
                    "_embedded": {
                      "items": [
                        {
                          "_links": {
                            "self": {
                              "href": "https://demo.akeneo.com/api/rest/v1/product/top"
                            }
                          },
                          "identifier": "top",
                          "family": "tshirt",
                          "groups": [],
                          "categories": [
                            "summer_collection"
                          ],
                          "enabled": true,
                          "values": {
                            "name": [
                              {
                                "data": "Top",
                                "locale": "en_US"
                              },
                              {
                                "data": "Débardeur",
                                "locale": "fr_FR"
                              }
                            ],
                            "description": [
                              {
                                "data": "Summer top",
                                "locale": "en_US",
                                "scope": "ecommerce"
                              },
                              {
                                "data": "Top",
                                "locale": "en_US",
                                "scope": "tablet"
                              },
                              {
                                "data": "Débardeur pour l'été",
                                "locale": "fr_FR",
                                "scope": "ecommerce"
                              },
                              {
                                "data": "Débardeur",
                                "locale": "fr_FR",
                                "scope": "tablet"
                              }
                            ],
                            "price": [
                              {
                                "data": [
                                  {
                                    "amount": "15.5",
                                    "currency": "EUR"
                                  },
                                  {
                                    "amount": "15",
                                    "currency": "USD"
                                  }
                                ]
                              }
                            ],
                            "color": [
                              {
                                "data": "black"
                              }
                            ],
                            "size": [
                              {
                                "data": "m"
                              }
                            ],
                            "collection": [
                              {
                                "data": [
                                  "winter_2016"
                                ]
                              }
                            ]
                          },
                          "created": "2016-06-23T18:24:44+02:00",
                          "updated": "2016-06-25T17:56:12+02:00",
                          "associations": {
                            "PACK": {
                              "products": [
                                "sunglasses"
                              ],
                              "groups": []
                            }
                          },
                          "quantified_associations": {
                            "PRODUCT_SET": {
                              "products": [
                                {
                                  "identifier": "cap",
                                  "quantity": 2
                                },
                                {
                                  "identifier": "shoes",
                                  "quantity": 1
                                }
                              ]
                            }
                          }
                        },
                        {
                          "_links": {
                            "self": {
                              "href": "https://demo.akeneo.com/api/rest/v1/product/cap"
                            }
                          },
                          "identifier": "cap",
                          "family": "caps",
                          "groups": [],
                          "categories": [
                            "summer_collection"
                          ],
                          "enabled": true,
                          "values": {
                            "name": [
                              {
                                "data": "Cap",
                                "locale": "en_US"
                              },
                              {
                                "data": "Casquette",
                                "locale": "fr_FR"
                              }
                            ],
                            "description": [
                              {
                                "data": "Cap unisex",
                                "locale": "en_US",
                                "scope": "ecommerce"
                              },
                              {
                                "data": "Cap unisex",
                                "locale": "en_US",
                                "scope": "tablet"
                              },
                              {
                                "data": "Casquette unisexe",
                                "locale": "fr_FR",
                                "scope": "ecommerce"
                              },
                              {
                                "data": "Casquette unisexe",
                                "locale": "fr_FR",
                                "scope": "tablet"
                              }
                            ],
                            "price": [
                              {
                                "data": [
                                  {
                                    "amount": "20",
                                    "currency": "EUR"
                                  },
                                  {
                                    "amount": "20",
                                    "currency": "USD"
                                  }
                                ]
                              }
                            ],
                            "color": [
                              {
                                "data": "black"
                              }
                            ]
                          },
                          "created": "2016-06-23T18:24:44+02:00",
                          "updated": "2016-06-25T17:56:12+02:00",
                          "associations": {
                            "PACK": {
                              "products": [
                                "sunglasses"
                              ],
                              "groups": []
                            }
                          },
                          "quantified_associations": {}
                        },
                        {
                          "_links": {
                            "self": {
                              "href": "https://demo.akeneo.com/api/rest/v1/product/sweat"
                            }
                          },
                          "identifier": "sweat",
                          "groups": [],
                          "categories": [
                            "winter_collection"
                          ],
                          "enabled": true,
                          "values": {},
                          "created": "2016-06-23T11:24:44+02:00",
                          "updated": "2016-06-23T11:24:44+02:00",
                          "associations": {},
                          "quantified_associations": {}
                        }
                      ]
                    }
                  }
                },
                {
                  "x-version": "2.1",
                  "x-example": {
                    "_links": {
                      "self": {
                        "href": "https://demo.akeneo.com/api/rest/v1/products?page=3&limit=3"
                      },
                      "first": {
                        "href": "https://demo.akeneo.com/api/rest/v1/products?page=1&limit=3"
                      },
                      "previous": {
                        "href": "https://demo.akeneo.com/api/rest/v1/products?page=2&limit=3"
                      },
                      "next": {
                        "href": "https://demo.akeneo.com/api/rest/v1/products?page=4&limit=3"
                      }
                    },
                    "current_page": 3,
                    "_embedded": {
                      "items": [
                        {
                          "_links": {
                            "self": {
                              "href": "https://demo.akeneo.com/api/rest/v1/product/top"
                            }
                          },
                          "identifier": "top",
                          "family": "tshirt",
                          "groups": [],
                          "categories": [
                            "summer_collection"
                          ],
                          "enabled": true,
                          "values": {
                            "name": [
                              {
                                "data": "Top",
                                "locale": "en_US"
                              },
                              {
                                "data": "Débardeur",
                                "locale": "fr_FR"
                              }
                            ],
                            "description": [
                              {
                                "data": "Summer top",
                                "locale": "en_US",
                                "scope": "ecommerce"
                              },
                              {
                                "data": "Top",
                                "locale": "en_US",
                                "scope": "tablet"
                              },
                              {
                                "data": "Débardeur pour l'été",
                                "locale": "fr_FR",
                                "scope": "ecommerce"
                              },
                              {
                                "data": "Débardeur",
                                "locale": "fr_FR",
                                "scope": "tablet"
                              }
                            ],
                            "price": [
                              {
                                "data": [
                                  {
                                    "amount": "15.5",
                                    "currency": "EUR"
                                  },
                                  {
                                    "amount": "15",
                                    "currency": "USD"
                                  }
                                ]
                              }
                            ],
                            "color": [
                              {
                                "data": "black"
                              }
                            ],
                            "size": [
                              {
                                "data": "m"
                              }
                            ],
                            "collection": [
                              {
                                "data": [
                                  "winter_2016"
                                ]
                              }
                            ]
                          },
                          "created": "2016-06-23T18:24:44+02:00",
                          "updated": "2016-06-25T17:56:12+02:00",
                          "associations": {
                            "PACK": {
                              "products": [
                                "sunglasses"
                              ],
                              "product_models": [],
                              "groups": []
                            }
                          },
                          "quantified_associations": {
                            "PRODUCT_SET": {
                              "products": [
                                {
                                  "identifier": "cap",
                                  "quantity": 2
                                },
                                {
                                  "identifier": "shoes",
                                  "quantity": 1
                                }
                              ],
                              "product_models": [
                                {
                                  "identifier": "model-biker-jacket-leather",
                                  "quantity": 2
                                }
                              ]
                            }
                          }
                        },
                        {
                          "_links": {
                            "self": {
                              "href": "https://demo.akeneo.com/api/rest/v1/product/cap"
                            }
                          },
                          "identifier": "cap",
                          "family": "caps",
                          "groups": [],
                          "categories": [
                            "summer_collection"
                          ],
                          "enabled": true,
                          "values": {
                            "name": [
                              {
                                "data": "Cap",
                                "locale": "en_US"
                              },
                              {
                                "data": "Casquette",
                                "locale": "fr_FR"
                              }
                            ],
                            "description": [
                              {
                                "data": "Cap unisex",
                                "locale": "en_US",
                                "scope": "ecommerce"
                              },
                              {
                                "data": "Cap unisex",
                                "locale": "en_US",
                                "scope": "tablet"
                              },
                              {
                                "data": "Casquette unisexe",
                                "locale": "fr_FR",
                                "scope": "ecommerce"
                              },
                              {
                                "data": "Casquette unisexe",
                                "locale": "fr_FR",
                                "scope": "tablet"
                              }
                            ],
                            "price": [
                              {
                                "data": [
                                  {
                                    "amount": "20",
                                    "currency": "EUR"
                                  },
                                  {
                                    "amount": "20",
                                    "currency": "USD"
                                  }
                                ]
                              }
                            ],
                            "color": [
                              {
                                "data": "black"
                              }
                            ]
                          },
                          "created": "2016-06-23T18:24:44+02:00",
                          "updated": "2016-06-25T17:56:12+02:00",
                          "associations": {
                            "PACK": {
                              "products": [
                                "sunglasses"
                              ],
                              "product_models": [],
                              "groups": []
                            }
                          },
                          "quantified_associations": {}
                        },
                        {
                          "_links": {
                            "self": {
                              "href": "https://demo.akeneo.com/api/rest/v1/product/sweat"
                            }
                          },
                          "identifier": "sweat",
                          "groups": [],
                          "categories": [
                            "winter_collection"
                          ],
                          "enabled": true,
                          "values": {},
                          "created": "2016-06-23T11:24:44+02:00",
                          "updated": "2016-06-23T11:24:44+02:00",
                          "associations": {},
                          "quantified_associations": {}
                        }
                      ]
                    }
                  }
                },
                {
                  "x-version": "5.0",
                  "x-example": {
                    "_links": {
                      "self": {
                        "href": "https://demo.akeneo.com/api/rest/v1/products?page=3&limit=3&with_quality_scores=true&with_attribute_options=true"
                      },
                      "first": {
                        "href": "https://demo.akeneo.com/api/rest/v1/products?page=1&limit=3&with_quality_scores=true&with_attribute_options=true"
                      },
                      "previous": {
                        "href": "https://demo.akeneo.com/api/rest/v1/products?page=2&limit=3&with_quality_scores=true&with_attribute_options=true"
                      },
                      "next": {
                        "href": "https://demo.akeneo.com/api/rest/v1/products?page=4&limit=3&with_quality_scores=true&with_attribute_options=true"
                      }
                    },
                    "current_page": 3,
                    "_embedded": {
                      "items": [
                        {
                          "_links": {
                            "self": {
                              "href": "https://demo.akeneo.com/api/rest/v1/product/top"
                            }
                          },
                          "identifier": "top",
                          "family": "tshirt",
                          "groups": [],
                          "categories": [
                            "summer_collection"
                          ],
                          "enabled": true,
                          "values": {
                            "name": [
                              {
                                "data": "Top",
                                "locale": "en_US"
                              },
                              {
                                "data": "Débardeur",
                                "locale": "fr_FR"
                              }
                            ],
                            "description": [
                              {
                                "data": "Summer top",
                                "locale": "en_US",
                                "scope": "ecommerce"
                              },
                              {
                                "data": "Top",
                                "locale": "en_US",
                                "scope": "tablet"
                              },
                              {
                                "data": "Débardeur pour l'été",
                                "locale": "fr_FR",
                                "scope": "ecommerce"
                              },
                              {
                                "data": "Débardeur",
                                "locale": "fr_FR",
                                "scope": "tablet"
                              }
                            ],
                            "price": [
                              {
                                "data": [
                                  {
                                    "amount": "15.5",
                                    "currency": "EUR"
                                  },
                                  {
                                    "amount": "15",
                                    "currency": "USD"
                                  }
                                ]
                              }
                            ],
                            "color": [
                              {
                                "data": "black",
                                "linked_data": {
                                  "attribute": "color",
                                  "code": "black",
                                  "labels": {
                                    "en_US": "Black",
                                    "fr_FR": "Noir"
                                  }
                                }
                              }
                            ],
                            "size": [
                              {
                                "data": "m",
                                "linked_data": {
                                  "attribute": "size",
                                  "code": "m",
                                  "labels": {
                                    "en_US": "M",
                                    "fr_FR": "M"
                                  }
                                }
                              }
                            ],
                            "collection": [
                              {
                                "data": [
                                  "winter_2016"
                                ],
                                "linked_data": {
                                  "winter_2016": {
                                    "attribute": "collection",
                                    "code": "winter_2016",
                                    "labels": {
                                      "en_US": "Winter 2016",
                                      "fr_FR": "Hiver 2016"
                                    }
                                  }
                                }
                              }
                            ]
                          },
                          "created": "2016-06-23T18:24:44+02:00",
                          "updated": "2016-06-25T17:56:12+02:00",
                          "associations": {
                            "PACK": {
                              "products": [
                                "sunglasses"
                              ],
                              "product_models": [],
                              "groups": []
                            }
                          },
                          "quantified_associations": {
                            "PRODUCT_SET": {
                              "products": [
                                {
                                  "identifier": "cap",
                                  "quantity": 2
                                },
                                {
                                  "identifier": "shoes",
                                  "quantity": 1
                                }
                              ],
                              "product_models": [
                                {
                                  "identifier": "model-biker-jacket-leather",
                                  "quantity": 2
                                }
                              ]
                            }
                          },
                          "quality_scores": [
                            {
                              "scope": "ecommerce",
                              "locale": "en_US",
                              "data": "A"
                            },
                            {
                              "scope": "ecommerce",
                              "locale": "fr_FR",
                              "data": "B"
                            },
                            {
                              "scope": "tablet",
                              "locale": "en_US",
                              "data": "D"
                            },
                            {
                              "scope": "tablet",
                              "locale": "fr_FR",
                              "data": "E"
                            }
                          ]
                        },
                        {
                          "_links": {
                            "self": {
                              "href": "https://demo.akeneo.com/api/rest/v1/product/cap"
                            }
                          },
                          "identifier": "cap",
                          "family": "caps",
                          "groups": [],
                          "categories": [
                            "summer_collection"
                          ],
                          "enabled": true,
                          "values": {
                            "name": [
                              {
                                "data": "Cap",
                                "locale": "en_US"
                              },
                              {
                                "data": "Casquette",
                                "locale": "fr_FR"
                              }
                            ],
                            "description": [
                              {
                                "data": "Cap unisex",
                                "locale": "en_US",
                                "scope": "ecommerce"
                              },
                              {
                                "data": "Cap unisex",
                                "locale": "en_US",
                                "scope": "tablet"
                              },
                              {
                                "data": "Casquette unisexe",
                                "locale": "fr_FR",
                                "scope": "ecommerce"
                              },
                              {
                                "data": "Casquette unisexe",
                                "locale": "fr_FR",
                                "scope": "tablet"
                              }
                            ],
                            "price": [
                              {
                                "data": [
                                  {
                                    "amount": "20",
                                    "currency": "EUR"
                                  },
                                  {
                                    "amount": "20",
                                    "currency": "USD"
                                  }
                                ]
                              }
                            ],
                            "color": [
                              {
                                "data": "black",
                                "linked_data": {
                                  "attribute": "color",
                                  "code": "black",
                                  "labels": {
                                    "en_US": "Black",
                                    "fr_FR": "Noir"
                                  }
                                }
                              }
                            ]
                          },
                          "created": "2016-06-23T18:24:44+02:00",
                          "updated": "2016-06-25T17:56:12+02:00",
                          "associations": {
                            "PACK": {
                              "products": [
                                "sunglasses"
                              ],
                              "product_models": [],
                              "groups": []
                            }
                          },
                          "quantified_associations": {},
                          "quality_scores": [
                            {
                              "scope": "ecommerce",
                              "locale": "en_US",
                              "data": "A"
                            },
                            {
                              "scope": "ecommerce",
                              "locale": "fr_FR",
                              "data": "B"
                            },
                            {
                              "scope": "tablet",
                              "locale": "en_US",
                              "data": "D"
                            },
                            {
                              "scope": "tablet",
                              "locale": "fr_FR",
                              "data": "E"
                            }
                          ]
                        },
                        {
                          "_links": {
                            "self": {
                              "href": "https://demo.akeneo.com/api/rest/v1/product/sweat"
                            }
                          },
                          "identifier": "sweat",
                          "groups": [],
                          "categories": [
                            "winter_collection"
                          ],
                          "enabled": true,
                          "values": {},
                          "created": "2016-06-23T11:24:44+02:00",
                          "updated": "2016-06-23T11:24:44+02:00",
                          "associations": {},
                          "quantified_associations": {},
                          "quality_scores": {}
                        }
                      ]
                    }
                  }
                },
                {
                  "x-version": "SaaS",
                  "x-example": {
                    "_links": {
                      "self": {
                        "href": "https://demo.akeneo.com/api/rest/v1/products?page=3&limit=3&with_quality_scores=true&with_completenesses=true&with_attribute_options=true"
                      },
                      "first": {
                        "href": "https://demo.akeneo.com/api/rest/v1/products?page=1&limit=3&with_quality_scores=true&with_completenesses=true&with_attribute_options=true"
                      },
                      "previous": {
                        "href": "https://demo.akeneo.com/api/rest/v1/products?page=2&limit=3&with_quality_scores=true&with_completenesses=true&with_attribute_options=true"
                      },
                      "next": {
                        "href": "https://demo.akeneo.com/api/rest/v1/products?page=4&limit=3&with_quality_scores=true&with_completenesses=true&with_attribute_options=true"
                      }
                    },
                    "current_page": 3,
                    "_embedded": {
                      "items": [
                        {
                          "_links": {
                            "self": {
                              "href": "https://demo.akeneo.com/api/rest/v1/product/top"
                            }
                          },
                          "uuid": "aaf518b2-f91e-40f1-a53a-78ce5e81a6f9",
                          "identifier": "top",
                          "family": "tshirt",
                          "groups": [],
                          "categories": [
                            "summer_collection"
                          ],
                          "enabled": true,
                          "values": {
                            "name": [
                              {
                                "data": "Top",
                                "locale": "en_US"
                              },
                              {
                                "data": "Débardeur",
                                "locale": "fr_FR"
                              }
                            ],
                            "description": [
                              {
                                "data": "Summer top",
                                "locale": "en_US",
                                "scope": "ecommerce"
                              },
                              {
                                "data": "Top",
                                "locale": "en_US",
                                "scope": "tablet"
                              },
                              {
                                "data": "Débardeur pour l'été",
                                "locale": "fr_FR",
                                "scope": "ecommerce"
                              },
                              {
                                "data": "Débardeur",
                                "locale": "fr_FR",
                                "scope": "tablet"
                              }
                            ],
                            "price": [
                              {
                                "data": [
                                  {
                                    "amount": "15.5",
                                    "currency": "EUR"
                                  },
                                  {
                                    "amount": "15",
                                    "currency": "USD"
                                  }
                                ]
                              }
                            ],
                            "color": [
                              {
                                "data": "black",
                                "linked_data": {
                                  "attribute": "color",
                                  "code": "black",
                                  "labels": {
                                    "en_US": "Black",
                                    "fr_FR": "Noir"
                                  }
                                }
                              }
                            ],
                            "size": [
                              {
                                "data": "m",
                                "linked_data": {
                                  "attribute": "size",
                                  "code": "m",
                                  "labels": {
                                    "en_US": "M",
                                    "fr_FR": "M"
                                  }
                                }
                              }
                            ],
                            "collection": [
                              {
                                "data": [
                                  "winter_2016"
                                ],
                                "linked_data": {
                                  "winter_2016": {
                                    "attribute": "collection",
                                    "code": "winter_2016",
                                    "labels": {
                                      "en_US": "Winter 2016",
                                      "fr_FR": "Hiver 2016"
                                    }
                                  }
                                }
                              }
                            ]
                          },
                          "created": "2016-06-23T18:24:44+02:00",
                          "updated": "2016-06-25T17:56:12+02:00",
                          "associations": {
                            "PACK": {
                              "products": [
                                "sunglasses"
                              ],
                              "product_models": [],
                              "groups": []
                            }
                          },
                          "quantified_associations": {
                            "PRODUCT_SET": {
                              "products": [
                                {
                                  "identifier": "cap",
                                  "quantity": 2
                                },
                                {
                                  "identifier": "shoes",
                                  "quantity": 1
                                }
                              ],
                              "product_models": [
                                {
                                  "identifier": "model-biker-jacket-leather",
                                  "quantity": 2
                                }
                              ]
                            }
                          },
                          "quality_scores": [
                            {
                              "scope": "ecommerce",
                              "locale": "en_US",
                              "data": "A"
                            },
                            {
                              "scope": "ecommerce",
                              "locale": "fr_FR",
                              "data": "B"
                            },
                            {
                              "scope": "tablet",
                              "locale": "en_US",
                              "data": "D"
                            },
                            {
                              "scope": "tablet",
                              "locale": "fr_FR",
                              "data": "E"
                            }
                          ],
                          "completenesses": [
                            {
                              "scope": "ecommerce",
                              "locale": "en_US",
                              "data": 20
                            },
                            {
                              "scope": "ecommerce",
                              "locale": "fr_FR",
                              "data": 30
                            },
                            {
                              "scope": "tablet",
                              "locale": "en_US",
                              "data": 55
                            },
                            {
                              "scope": "tablet",
                              "locale": "fr_FR",
                              "data": 70
                            }
                          ]
                        },
                        {
                          "_links": {
                            "self": {
                              "href": "https://demo.akeneo.com/api/rest/v1/product/cap"
                            }
                          },
                          "uuid": "aec6780b-c813-4bd7-8e24-1a8574471576",
                          "identifier": "cap",
                          "family": "caps",
                          "groups": [],
                          "categories": [
                            "summer_collection"
                          ],
                          "enabled": true,
                          "values": {
                            "name": [
                              {
                                "data": "Cap",
                                "locale": "en_US"
                              },
                              {
                                "data": "Casquette",
                                "locale": "fr_FR"
                              }
                            ],
                            "description": [
                              {
                                "data": "Cap unisex",
                                "locale": "en_US",
                                "scope": "ecommerce"
                              },
                              {
                                "data": "Cap unisex",
                                "locale": "en_US",
                                "scope": "tablet"
                              },
                              {
                                "data": "Casquette unisexe",
                                "locale": "fr_FR",
                                "scope": "ecommerce"
                              },
                              {
                                "data": "Casquette unisexe",
                                "locale": "fr_FR",
                                "scope": "tablet"
                              }
                            ],
                            "price": [
                              {
                                "data": [
                                  {
                                    "amount": "20",
                                    "currency": "EUR"
                                  },
                                  {
                                    "amount": "20",
                                    "currency": "USD"
                                  }
                                ]
                              }
                            ],
                            "color": [
                              {
                                "data": "black",
                                "linked_data": {
                                  "attribute": "color",
                                  "code": "black",
                                  "labels": {
                                    "en_US": "Black",
                                    "fr_FR": "Noir"
                                  }
                                }
                              }
                            ]
                          },
                          "created": "2016-06-23T18:24:44+02:00",
                          "updated": "2016-06-25T17:56:12+02:00",
                          "associations": {
                            "PACK": {
                              "products": [
                                "sunglasses"
                              ],
                              "product_models": [],
                              "groups": []
                            }
                          },
                          "quantified_associations": {},
                          "quality_scores": [
                            {
                              "scope": "ecommerce",
                              "locale": "en_US",
                              "data": "A"
                            },
                            {
                              "scope": "ecommerce",
                              "locale": "fr_FR",
                              "data": "B"
                            },
                            {
                              "scope": "tablet",
                              "locale": "en_US",
                              "data": "D"
                            },
                            {
                              "scope": "tablet",
                              "locale": "fr_FR",
                              "data": "E"
                            }
                          ],
                          "completenesses": [
                            {
                              "scope": "ecommerce",
                              "locale": "en_US",
                              "data": 20
                            },
                            {
                              "scope": "ecommerce",
                              "locale": "fr_FR",
                              "data": 30
                            },
                            {
                              "scope": "tablet",
                              "locale": "en_US",
                              "data": 55
                            },
                            {
                              "scope": "tablet",
                              "locale": "fr_FR",
                              "data": 70
                            }
                          ]
                        },
                        {
                          "_links": {
                            "self": {
                              "href": "https://demo.akeneo.com/api/rest/v1/product/sweat"
                            }
                          },
                          "uuid": "93f14b03-5ed3-4f23-87c6-ae3806041b6a",
                          "identifier": "sweat",
                          "groups": [],
                          "categories": [
                            "winter_collection"
                          ],
                          "enabled": true,
                          "values": {},
                          "created": "2016-06-23T11:24:44+02:00",
                          "updated": "2016-06-23T11:24:44+02:00",
                          "associations": {},
                          "quantified_associations": {},
                          "quality_scores": {},
                          "completenesses": []
                        }
                      ]
                    }
                  }
                }
              ]
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "406": {
              "description": "Not Acceptable",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 406
                },
                "message": {
                  "example": "`xxx’ in `Accept` header is not valid. Only `application/json` is allowed."
                }
              },
              "x-details": "The `Accept` header is not `application/json` but it should"
            },
            "422": {
              "description": "Unprocessable entity",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 422
                },
                "message": {
                  "example": "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
                },
                "_links": {
                  "example": {
                    "documentation": {
                      "href": "http://api.akeneo.com/api-reference.html"
                    }
                  }
                }
              },
              "x-details": "The validation of the entity given in the body of the request failed"
            }
          },
          "x-versions": [
            "1.7",
            "2.x",
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ]
        },
        "post": {
          "tags": [
            "Product [identifier]"
          ],
          "summary": "Create a new product",
          "description": "This endpoint allows you to create a new product. In the Enterprise Edition, since the v2.0, permissions based on your user groups are applied to the product you try to create.",
          "operationId": "post_products",
          "requestBody": {
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "identifier"
                  ],
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "description": "Product UUID",
                      "x-from-version": "7.0"
                    },
                    "identifier": {
                      "type": "string",
                      "description": "Product identifier, i.e. the value of the only `pim_catalog_identifier` attribute"
                    },
                    "enabled": {
                      "type": "boolean",
                      "description": "Whether the product is enabled",
                      "default": true
                    },
                    "family": {
                      "type": "string",
                      "description": "<a href='api-reference.html#Family'>Family</a> code from which the product inherits its attributes and attributes requirements.",
                      "default": "null only in the case of a non variant product",
                      "x-validation-rules": "It is equal to an existing family code. In the case of variant product, the given family should be the same as the product model family."
                    },
                    "categories": {
                      "type": "array",
                      "description": "Codes of the <a href='api-reference.html#Category'>categories</a> in which the product is classified",
                      "items": {
                        "type": "string"
                      },
                      "x-validation-rules": "Each string of the array is equal to an existing category code"
                    },
                    "groups": {
                      "type": "array",
                      "description": "Codes of the groups to which the product belong",
                      "items": {
                        "type": "string"
                      },
                      "x-validation-rules": "Each string of the array is equal to an existing group code"
                    },
                    "parent": {
                      "type": "string",
                      "description": "Code of the parent <a href='api-reference.html#Productmodel'>product model</a> when the product is a variant (only available since the 2.0). This parent can be modified since the 2.3.",
                      "default": "null",
                      "x-validation-rules": "It is equal to an existing product model code only if the product is variant otherwise it's equal to null",
                      "x-from-version": "2.0"
                    },
                    "values": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "scope": {
                              "type": "string",
                              "description": "<a href='api-reference.html#Channel'>Channel</a> code of the product value"
                            },
                            "locale": {
                              "type": "string",
                              "description": "<a href='api-reference.html#Locale'>Locale</a> code of the product value"
                            },
                            "data": {
                              "type": "object",
                              "properties": {},
                              "description": "Product value. See <a href='/concepts/products.html#the-data-format'>the `data` format</a> section for more details."
                            },
                            "linked_data": {
                              "type": "object",
                              "properties": {
                                "attribute": {
                                  "type": "string"
                                },
                                "code": {
                                  "type": "string"
                                },
                                "labels": {
                                  "type": "object",
                                  "properties": {}
                                }
                              },
                              "description": "Object containing labels of attribute options (only available since the 5.0 and when query parameter \"with_attribute_options\" is set to \"true\"). See <a href='/concepts/products.html#the-linked_data-format'>the `linked_data` format</a> section for more details.",
                              "x-read-only": true,
                              "x-from-version": "5.0"
                            }
                          }
                        }
                      },
                      "description": "Product attributes values, see <a href='/concepts/products.html#focus-on-the-product-values'>Product values</a> section for more details",
                      "x-validation-rules": "Validation rules detailed in Product values section"
                    },
                    "associations": {
                      "type": "object",
                      "properties": {
                        "associationTypeCode": {
                          "type": "object",
                          "properties": {
                            "groups": {
                              "type": "array",
                              "description": "Array of groups codes with which the product is in relation",
                              "items": {
                                "type": "string"
                              }
                            },
                            "products": {
                              "type": "array",
                              "description": "Array of product identifiers with which the product is in relation",
                              "items": {
                                "type": "string"
                              }
                            },
                            "product_models": {
                              "type": "array",
                              "description": "Array of product model codes with which the product is in relation (only available since the v2.1)",
                              "items": {
                                "type": "string"
                              },
                              "x-from-version": "2.1"
                            }
                          }
                        }
                      },
                      "description": "Several associations related to groups, product models and/or other products, grouped by association types",
                      "x-validation-rules": "&bull; The `associationTypeCode` is the code of an existing association type. &#10;&bull; Each string in the array of the property `groups` is the code of an existing group. &#10;&bull; Each string in the array of the property `products` is the identifier of an existing product. &#10;&bull; Each string in the array of the property `product_models` is the code of an existing product model."
                    },
                    "quantified_associations": {
                      "type": "object",
                      "properties": {
                        "quantifiedAssociationTypeCode": {
                          "type": "object",
                          "properties": {
                            "products": {
                              "type": "array",
                              "description": "Array of objects containing product identifiers and quantities with which the product is in relation",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "identifier": {
                                    "type": "string"
                                  },
                                  "quantity": {
                                    "type": "integer"
                                  }
                                }
                              }
                            },
                            "product_models": {
                              "type": "array",
                              "description": "Array of objects containing product model codes and quantities with which the product is in relation",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "code": {
                                    "type": "string"
                                  },
                                  "quantity": {
                                    "type": "integer"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "description": "Several quantified associations related to products and/or product models, grouped by quantified association types (only available since the 5.0)",
                      "x-validation-rules": "&bull; The `quantifiedAssociationTypeCode` is the code of an existing association type which provides quantity information. &#10;&bull; Each object in the array of the property `products` contains the identifier of an existing product and the quantity of it.",
                      "x-from-version": "5.0"
                    },
                    "created": {
                      "type": "string",
                      "description": "Date of creation",
                      "format": "dateTime",
                      "x-immutable": true,
                      "x-read-only": true
                    },
                    "updated": {
                      "type": "string",
                      "description": "Date of the last update",
                      "format": "dateTime",
                      "x-read-only": true
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "workflow_status": {
                          "type": "string",
                          "description": "Status of the product regarding the user permissions",
                          "enum": [
                            "read_only",
                            "draft_in_progress",
                            "proposal_waiting_for_approval",
                            "working_copy"
                          ]
                        }
                      },
                      "description": "More information around the product (only available since the v2.0 in the Enterprise Edition)",
                      "x-immutable": true,
                      "x-read-only": true,
                      "x-from-version": "2.0"
                    },
                    "quality_scores": {
                      "type": "object",
                      "properties": {},
                      "description": "Product quality scores for each channel/locale combination (only available since the 5.0 and when the \"with_quality_scores\" query parameter is set to \"true\")",
                      "x-immutable": true,
                      "x-read-only": true,
                      "x-from-version": "5.0"
                    },
                    "completenesses": {
                      "type": "array",
                      "description": "Product completenesses for each channel/locale combination (only available since the 7.0 version, and when the \"with_completenesses\" query parameter is set to \"true\")",
                      "items": {
                        "type": "object",
                        "properties": {
                          "scope": {
                            "type": "string"
                          },
                          "locale": {
                            "type": "string"
                          },
                          "data": {
                            "type": "integer"
                          }
                        }
                      },
                      "x-immutable": true,
                      "x-read-only": true,
                      "x-from-version": "7.0"
                    }
                  },
                  "example": {
                    "identifier": "top",
                    "enabled": true,
                    "family": "tshirt",
                    "categories": [
                      "summer_collection"
                    ],
                    "groups": [],
                    "values": {
                      "name": [
                        {
                          "data": "Top",
                          "locale": "en_US"
                        },
                        {
                          "data": "Débardeur",
                          "locale": "fr_FR"
                        }
                      ],
                      "description": [
                        {
                          "data": "Summer top",
                          "locale": "en_US",
                          "scope": "ecommerce"
                        },
                        {
                          "data": "Top",
                          "locale": "en_US",
                          "scope": "tablet"
                        },
                        {
                          "data": "Débardeur pour l'été",
                          "locale": "fr_FR",
                          "scope": "ecommerce"
                        },
                        {
                          "data": "Débardeur",
                          "locale": "fr_FR",
                          "scope": "tablet"
                        }
                      ],
                      "price": [
                        {
                          "data": [
                            {
                              "amount": "15.5",
                              "currency": "EUR"
                            },
                            {
                              "amount": "15",
                              "currency": "USD"
                            }
                          ]
                        }
                      ],
                      "color": [
                        {
                          "data": "black",
                          "linked_data": {
                            "attribute": "color",
                            "code": "black",
                            "labels": {
                              "en_US": "Black",
                              "fr_FR": "Noir"
                            }
                          }
                        }
                      ],
                      "size": [
                        {
                          "data": "m",
                          "linked_data": {
                            "attribute": "size",
                            "code": "m",
                            "labels": {
                              "en_US": "M",
                              "fr_FR": "M"
                            }
                          }
                        }
                      ],
                      "collection": [
                        {
                          "data": [
                            "winter_2016"
                          ],
                          "linked_data": {
                            "winter_2016": {
                              "attribute": "collection",
                              "code": "winter_2016",
                              "labels": {
                                "en_US": "Winter 2016",
                                "fr_FR": "Hiver 2016"
                              }
                            }
                          }
                        }
                      ]
                    },
                    "created": "2016-06-23T18:24:44+02:00",
                    "updated": "2016-06-25T17:56:12+02:00",
                    "associations": {
                      "PACK": {
                        "products": [
                          "sunglass"
                        ],
                        "product_models": [],
                        "groups": []
                      }
                    },
                    "quantified_associations": {
                      "PRODUCT_SET": {
                        "products": [
                          {
                            "identifier": "cap",
                            "quantity": 2
                          },
                          {
                            "identifier": "shoes",
                            "quantity": 1
                          }
                        ],
                        "product_models": [
                          {
                            "identifier": "model-biker-jacket-leather",
                            "quantity": 2
                          }
                        ]
                      }
                    },
                    "quality_scores": [
                      {
                        "scope": "ecommerce",
                        "locale": "en_US",
                        "data": "A"
                      },
                      {
                        "scope": "ecommerce",
                        "locale": "fr_FR",
                        "data": "B"
                      },
                      {
                        "scope": "tablet",
                        "locale": "en_US",
                        "data": "D"
                      },
                      {
                        "scope": "tablet",
                        "locale": "fr_FR",
                        "data": "E"
                      }
                    ],
                    "completenesses": [
                      {
                        "scope": "ecommerce",
                        "locale": "en_US",
                        "data": 10
                      },
                      {
                        "scope": "ecommerce",
                        "locale": "fr_FR",
                        "data": 20
                      },
                      {
                        "scope": "tablet",
                        "locale": "en_US",
                        "data": 30
                      },
                      {
                        "scope": "tablet",
                        "locale": "fr_FR",
                        "data": 40
                      }
                    ]
                  }
                }
              }
            },
            "required": false
          },
          "responses": {
            "201": {
              "description": "Created",
              "headers": {
                "Location": {
                  "description": "URI of the created resource",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {},
              "x-details": "Means that the creation was successful"
            },
            "400": {
              "description": "Bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 400
                },
                "message": {
                  "example": "Invalid JSON message received"
                }
              },
              "x-details": "Can be caused by a malformed JSON request"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "415": {
              "description": "Unsupported Media type",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 415
                },
                "message": {
                  "example": "`xxx’ in `Content-Type’ header is not valid.  Only `application/json’ is allowed."
                }
              },
              "x-details": "The `Content-Type` header has to be `application/json`"
            },
            "422": {
              "description": "Unprocessable entity",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 422
                },
                "message": {
                  "example": "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
                },
                "_links": {
                  "example": {
                    "documentation": {
                      "href": "http://api.akeneo.com/api-reference.html"
                    }
                  }
                }
              },
              "x-details": "The validation of the entity given in the body of the request failed"
            }
          },
          "x-versions": [
            "1.7",
            "2.x",
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-codegen-request-body-name": "body"
        },
        "patch": {
          "tags": [
            "Product [identifier]"
          ],
          "summary": "Update/create several products",
          "description": "This endpoint allows you to update and/or create several products at once. Learn more about <a href=\"/documentation/update.html#update-behavior\">Update behavior</a>. Note that if no product exists for the given identifier, it creates it. In the Enterprise Edition, since the v2.0, permissions based on your user groups are applied to the products you try to update. It may result in the creation of drafts if you only have edit rights through the product's categories.",
          "operationId": "patch_products",
          "requestBody": {
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "identifier"
                  ],
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "description": "Product UUID",
                      "x-from-version": "7.0"
                    },
                    "identifier": {
                      "type": "string",
                      "description": "Product identifier, i.e. the value of the only `pim_catalog_identifier` attribute"
                    },
                    "enabled": {
                      "type": "boolean",
                      "description": "Whether the product is enabled",
                      "default": true
                    },
                    "family": {
                      "type": "string",
                      "description": "<a href='api-reference.html#Family'>Family</a> code from which the product inherits its attributes and attributes requirements.",
                      "default": "null only in the case of a non variant product",
                      "x-validation-rules": "It is equal to an existing family code. In the case of variant product, the given family should be the same as the product model family."
                    },
                    "categories": {
                      "type": "array",
                      "description": "Codes of the <a href='api-reference.html#Category'>categories</a> in which the product is classified",
                      "items": {
                        "type": "string"
                      },
                      "x-validation-rules": "Each string of the array is equal to an existing category code"
                    },
                    "groups": {
                      "type": "array",
                      "description": "Codes of the groups to which the product belong",
                      "items": {
                        "type": "string"
                      },
                      "x-validation-rules": "Each string of the array is equal to an existing group code"
                    },
                    "parent": {
                      "type": "string",
                      "description": "Code of the parent <a href='api-reference.html#Productmodel'>product model</a> when the product is a variant (only available since the 2.0). This parent can be modified since the 2.3.",
                      "default": "null",
                      "x-validation-rules": "It is equal to an existing product model code only if the product is variant otherwise it's equal to null",
                      "x-from-version": "2.0"
                    },
                    "values": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "scope": {
                              "type": "string",
                              "description": "<a href='api-reference.html#Channel'>Channel</a> code of the product value"
                            },
                            "locale": {
                              "type": "string",
                              "description": "<a href='api-reference.html#Locale'>Locale</a> code of the product value"
                            },
                            "data": {
                              "type": "object",
                              "properties": {},
                              "description": "Product value. See <a href='/concepts/products.html#the-data-format'>the `data` format</a> section for more details."
                            },
                            "linked_data": {
                              "type": "object",
                              "properties": {
                                "attribute": {
                                  "type": "string"
                                },
                                "code": {
                                  "type": "string"
                                },
                                "labels": {
                                  "type": "object",
                                  "properties": {}
                                }
                              },
                              "description": "Object containing labels of attribute options (only available since the 5.0 and when query parameter \"with_attribute_options\" is set to \"true\"). See <a href='/concepts/products.html#the-linked_data-format'>the `linked_data` format</a> section for more details.",
                              "x-read-only": true,
                              "x-from-version": "5.0"
                            }
                          }
                        }
                      },
                      "description": "Product attributes values, see <a href='/concepts/products.html#focus-on-the-product-values'>Product values</a> section for more details",
                      "x-validation-rules": "Validation rules detailed in Product values section"
                    },
                    "associations": {
                      "type": "object",
                      "properties": {
                        "associationTypeCode": {
                          "type": "object",
                          "properties": {
                            "groups": {
                              "type": "array",
                              "description": "Array of groups codes with which the product is in relation",
                              "items": {
                                "type": "string"
                              }
                            },
                            "products": {
                              "type": "array",
                              "description": "Array of product identifiers with which the product is in relation",
                              "items": {
                                "type": "string"
                              }
                            },
                            "product_models": {
                              "type": "array",
                              "description": "Array of product model codes with which the product is in relation (only available since the v2.1)",
                              "items": {
                                "type": "string"
                              },
                              "x-from-version": "2.1"
                            }
                          }
                        }
                      },
                      "description": "Several associations related to groups, product models and/or other products, grouped by association types",
                      "x-validation-rules": "&bull; The `associationTypeCode` is the code of an existing association type. &#10;&bull; Each string in the array of the property `groups` is the code of an existing group. &#10;&bull; Each string in the array of the property `products` is the identifier of an existing product. &#10;&bull; Each string in the array of the property `product_models` is the code of an existing product model."
                    },
                    "quantified_associations": {
                      "type": "object",
                      "properties": {
                        "quantifiedAssociationTypeCode": {
                          "type": "object",
                          "properties": {
                            "products": {
                              "type": "array",
                              "description": "Array of objects containing product identifiers and quantities with which the product is in relation",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "identifier": {
                                    "type": "string"
                                  },
                                  "quantity": {
                                    "type": "integer"
                                  }
                                }
                              }
                            },
                            "product_models": {
                              "type": "array",
                              "description": "Array of objects containing product model codes and quantities with which the product is in relation",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "code": {
                                    "type": "string"
                                  },
                                  "quantity": {
                                    "type": "integer"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "description": "Several quantified associations related to products and/or product models, grouped by quantified association types (only available since the 5.0)",
                      "x-validation-rules": "&bull; The `quantifiedAssociationTypeCode` is the code of an existing association type which provides quantity information. &#10;&bull; Each object in the array of the property `products` contains the identifier of an existing product and the quantity of it.",
                      "x-from-version": "5.0"
                    },
                    "created": {
                      "type": "string",
                      "description": "Date of creation",
                      "format": "dateTime",
                      "x-immutable": true,
                      "x-read-only": true
                    },
                    "updated": {
                      "type": "string",
                      "description": "Date of the last update",
                      "format": "dateTime",
                      "x-read-only": true
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "workflow_status": {
                          "type": "string",
                          "description": "Status of the product regarding the user permissions",
                          "enum": [
                            "read_only",
                            "draft_in_progress",
                            "proposal_waiting_for_approval",
                            "working_copy"
                          ]
                        }
                      },
                      "description": "More information around the product (only available since the v2.0 in the Enterprise Edition)",
                      "x-immutable": true,
                      "x-read-only": true,
                      "x-from-version": "2.0"
                    },
                    "quality_scores": {
                      "type": "object",
                      "properties": {},
                      "description": "Product quality scores for each channel/locale combination (only available since the 5.0 and when the \"with_quality_scores\" query parameter is set to \"true\")",
                      "x-immutable": true,
                      "x-read-only": true,
                      "x-from-version": "5.0"
                    },
                    "completenesses": {
                      "type": "array",
                      "description": "Product completenesses for each channel/locale combination (only available since the 7.0 version, and when the \"with_completenesses\" query parameter is set to \"true\")",
                      "items": {
                        "type": "object",
                        "properties": {
                          "scope": {
                            "type": "string"
                          },
                          "locale": {
                            "type": "string"
                          },
                          "data": {
                            "type": "integer"
                          }
                        }
                      },
                      "x-immutable": true,
                      "x-read-only": true,
                      "x-from-version": "7.0"
                    }
                  },
                  "example": {
                    "identifier": "top",
                    "enabled": true,
                    "family": "tshirt",
                    "categories": [
                      "summer_collection"
                    ],
                    "groups": [],
                    "values": {
                      "name": [
                        {
                          "data": "Top",
                          "locale": "en_US"
                        },
                        {
                          "data": "Débardeur",
                          "locale": "fr_FR"
                        }
                      ],
                      "description": [
                        {
                          "data": "Summer top",
                          "locale": "en_US",
                          "scope": "ecommerce"
                        },
                        {
                          "data": "Top",
                          "locale": "en_US",
                          "scope": "tablet"
                        },
                        {
                          "data": "Débardeur pour l'été",
                          "locale": "fr_FR",
                          "scope": "ecommerce"
                        },
                        {
                          "data": "Débardeur",
                          "locale": "fr_FR",
                          "scope": "tablet"
                        }
                      ],
                      "price": [
                        {
                          "data": [
                            {
                              "amount": "15.5",
                              "currency": "EUR"
                            },
                            {
                              "amount": "15",
                              "currency": "USD"
                            }
                          ]
                        }
                      ],
                      "color": [
                        {
                          "data": "black",
                          "linked_data": {
                            "attribute": "color",
                            "code": "black",
                            "labels": {
                              "en_US": "Black",
                              "fr_FR": "Noir"
                            }
                          }
                        }
                      ],
                      "size": [
                        {
                          "data": "m",
                          "linked_data": {
                            "attribute": "size",
                            "code": "m",
                            "labels": {
                              "en_US": "M",
                              "fr_FR": "M"
                            }
                          }
                        }
                      ],
                      "collection": [
                        {
                          "data": [
                            "winter_2016"
                          ],
                          "linked_data": {
                            "winter_2016": {
                              "attribute": "collection",
                              "code": "winter_2016",
                              "labels": {
                                "en_US": "Winter 2016",
                                "fr_FR": "Hiver 2016"
                              }
                            }
                          }
                        }
                      ]
                    },
                    "created": "2016-06-23T18:24:44+02:00",
                    "updated": "2016-06-25T17:56:12+02:00",
                    "associations": {
                      "PACK": {
                        "products": [
                          "sunglass"
                        ],
                        "product_models": [],
                        "groups": []
                      }
                    },
                    "quantified_associations": {
                      "PRODUCT_SET": {
                        "products": [
                          {
                            "identifier": "cap",
                            "quantity": 2
                          },
                          {
                            "identifier": "shoes",
                            "quantity": 1
                          }
                        ],
                        "product_models": [
                          {
                            "identifier": "model-biker-jacket-leather",
                            "quantity": 2
                          }
                        ]
                      }
                    },
                    "quality_scores": [
                      {
                        "scope": "ecommerce",
                        "locale": "en_US",
                        "data": "A"
                      },
                      {
                        "scope": "ecommerce",
                        "locale": "fr_FR",
                        "data": "B"
                      },
                      {
                        "scope": "tablet",
                        "locale": "en_US",
                        "data": "D"
                      },
                      {
                        "scope": "tablet",
                        "locale": "fr_FR",
                        "data": "E"
                      }
                    ],
                    "completenesses": [
                      {
                        "scope": "ecommerce",
                        "locale": "en_US",
                        "data": 10
                      },
                      {
                        "scope": "ecommerce",
                        "locale": "fr_FR",
                        "data": 20
                      },
                      {
                        "scope": "tablet",
                        "locale": "en_US",
                        "data": 30
                      },
                      {
                        "scope": "tablet",
                        "locale": "fr_FR",
                        "data": 40
                      }
                    ]
                  },
                  "x-examples": {
                    "x-example-1": "{\"identifier\":\"cap\",\"values\":{\"description\":[{\"scope\":\"ecommerce\",\"locale\":\"en_US\",\"data\":\"My amazing cap\"}]}}",
                    "x-example-2": "{\"identifier\":\"mug\",\"group\":[\"promotion\"]}",
                    "x-example-3": "{\"identifier\":\"tshirt\",\"family\":\"clothes\"}"
                  }
                }
              }
            },
            "required": false
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "line": {
                        "type": "integer",
                        "description": "Line number"
                      },
                      "identifier": {
                        "type": "string",
                        "description": "Resource identifier, only filled when the resource is a product"
                      },
                      "code": {
                        "type": "string",
                        "description": "Resource code, only filled when the resource is not a product"
                      },
                      "status_code": {
                        "type": "integer",
                        "description": "HTTP status code, see <a href=\"/documentation/responses.html#client-errors\">Client errors</a> to understand the meaning of each code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "x-example-1": {
                  "example": "{\"line\":1,\"identifier\":\"cap\",\"status_code\":204}"
                },
                "x-example-2": {
                  "example": "{\"line\":2,\"identifier\":\"mug\",\"status_code\":422,\"message\":\"Property \"group\" does not exist.\"}"
                },
                "x-example-3": {
                  "example": "{\"line\":3,\"identifier\":\"tshirt\",\"status_code\":201}"
                }
              },
              "x-details": "Returns a plain text response whose lines are JSON containing the status of each update or creation",
              "x-no-entity": true
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "413": {
              "description": "Request Entity Too Large",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 413
                },
                "message": {
                  "example": "Too many resources to process, 100 is the maximum allowed."
                }
              },
              "x-details": "There are too many resources to process (max 100) or the line of JSON is too long (max 1 000 000 characters)"
            },
            "415": {
              "description": "Unsupported Media type",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 415
                },
                "message": {
                  "example": "`xxx’ in `Content-Type’ header is not valid.  Only `application/vnd.akeneo.collection+json’ is allowed."
                }
              },
              "x-details": "The `Content-Type` header has to be `application/vnd.akeneo.collection+json`"
            }
          },
          "x-versions": [
            "1.7",
            "2.x",
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-body-by-line": "Contains several lines, each line is a product in JSON standard format",
          "x-codegen-request-body-name": "body"
        }
      },
      "/api/rest/v1/products/{code}": {
        "get": {
          "tags": [
            "Product [identifier]"
          ],
          "summary": "Get a product",
          "description": "This endpoint allows you to get the information about a given product. In the Entreprise Edition, since the v2.0, permissions based on your user groups are applied to the product you request.",
          "operationId": "get_products__code_",
          "parameters": [
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "with_attribute_options",
              "in": "query",
              "description": "Return labels of attribute options in the response. (Only available since the 5.0 version)",
              "schema": {
                "type": "boolean",
                "default": false,
                "x-from-version": "5.0"
              },
              "x-from-version": "5.0"
            },
            {
              "name": "with_quality_scores",
              "in": "query",
              "description": "Return product quality scores in the response. (Only available since the 5.0 version)",
              "schema": {
                "type": "boolean",
                "default": false,
                "x-from-version": "5.0"
              },
              "x-from-version": "5.0"
            },
            {
              "name": "with_completenesses",
              "in": "query",
              "description": "Return product completenesses in the response. (Only available since the 6.0 version)",
              "schema": {
                "type": "boolean",
                "default": false,
                "x-from-version": "6.0"
              },
              "x-from-version": "6.0"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "required": [
                      "identifier"
                    ],
                    "type": "object",
                    "properties": {
                      "uuid": {
                        "type": "string",
                        "description": "Product UUID",
                        "x-from-version": "7.0"
                      },
                      "identifier": {
                        "type": "string",
                        "description": "Product identifier, i.e. the value of the only `pim_catalog_identifier` attribute"
                      },
                      "enabled": {
                        "type": "boolean",
                        "description": "Whether the product is enabled",
                        "default": true
                      },
                      "family": {
                        "type": "string",
                        "description": "<a href='api-reference.html#Family'>Family</a> code from which the product inherits its attributes and attributes requirements.",
                        "default": "null only in the case of a non variant product",
                        "x-validation-rules": "It is equal to an existing family code. In the case of variant product, the given family should be the same as the product model family."
                      },
                      "categories": {
                        "type": "array",
                        "description": "Codes of the <a href='api-reference.html#Category'>categories</a> in which the product is classified",
                        "items": {
                          "type": "string"
                        },
                        "x-validation-rules": "Each string of the array is equal to an existing category code"
                      },
                      "groups": {
                        "type": "array",
                        "description": "Codes of the groups to which the product belong",
                        "items": {
                          "type": "string"
                        },
                        "x-validation-rules": "Each string of the array is equal to an existing group code"
                      },
                      "parent": {
                        "type": "string",
                        "description": "Code of the parent <a href='api-reference.html#Productmodel'>product model</a> when the product is a variant (only available since the 2.0). This parent can be modified since the 2.3.",
                        "default": "null",
                        "x-validation-rules": "It is equal to an existing product model code only if the product is variant otherwise it's equal to null",
                        "x-from-version": "2.0"
                      },
                      "values": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "scope": {
                                "type": "string",
                                "description": "<a href='api-reference.html#Channel'>Channel</a> code of the product value"
                              },
                              "locale": {
                                "type": "string",
                                "description": "<a href='api-reference.html#Locale'>Locale</a> code of the product value"
                              },
                              "data": {
                                "type": "object",
                                "properties": {},
                                "description": "Product value. See <a href='/concepts/products.html#the-data-format'>the `data` format</a> section for more details."
                              },
                              "linked_data": {
                                "type": "object",
                                "properties": {
                                  "attribute": {
                                    "type": "string"
                                  },
                                  "code": {
                                    "type": "string"
                                  },
                                  "labels": {
                                    "type": "object",
                                    "properties": {}
                                  }
                                },
                                "description": "Object containing labels of attribute options (only available since the 5.0 and when query parameter \"with_attribute_options\" is set to \"true\"). See <a href='/concepts/products.html#the-linked_data-format'>the `linked_data` format</a> section for more details.",
                                "x-read-only": true,
                                "x-from-version": "5.0"
                              }
                            }
                          }
                        },
                        "description": "Product attributes values, see <a href='/concepts/products.html#focus-on-the-product-values'>Product values</a> section for more details",
                        "x-validation-rules": "Validation rules detailed in Product values section"
                      },
                      "associations": {
                        "type": "object",
                        "properties": {
                          "associationTypeCode": {
                            "type": "object",
                            "properties": {
                              "groups": {
                                "type": "array",
                                "description": "Array of groups codes with which the product is in relation",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "products": {
                                "type": "array",
                                "description": "Array of product identifiers with which the product is in relation",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "product_models": {
                                "type": "array",
                                "description": "Array of product model codes with which the product is in relation (only available since the v2.1)",
                                "items": {
                                  "type": "string"
                                },
                                "x-from-version": "2.1"
                              }
                            }
                          }
                        },
                        "description": "Several associations related to groups, product models and/or other products, grouped by association types",
                        "x-validation-rules": "&bull; The `associationTypeCode` is the code of an existing association type. &#10;&bull; Each string in the array of the property `groups` is the code of an existing group. &#10;&bull; Each string in the array of the property `products` is the identifier of an existing product. &#10;&bull; Each string in the array of the property `product_models` is the code of an existing product model."
                      },
                      "quantified_associations": {
                        "type": "object",
                        "properties": {
                          "quantifiedAssociationTypeCode": {
                            "type": "object",
                            "properties": {
                              "products": {
                                "type": "array",
                                "description": "Array of objects containing product identifiers and quantities with which the product is in relation",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "identifier": {
                                      "type": "string"
                                    },
                                    "quantity": {
                                      "type": "integer"
                                    }
                                  }
                                }
                              },
                              "product_models": {
                                "type": "array",
                                "description": "Array of objects containing product model codes and quantities with which the product is in relation",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "string"
                                    },
                                    "quantity": {
                                      "type": "integer"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "description": "Several quantified associations related to products and/or product models, grouped by quantified association types (only available since the 5.0)",
                        "x-validation-rules": "&bull; The `quantifiedAssociationTypeCode` is the code of an existing association type which provides quantity information. &#10;&bull; Each object in the array of the property `products` contains the identifier of an existing product and the quantity of it.",
                        "x-from-version": "5.0"
                      },
                      "created": {
                        "type": "string",
                        "description": "Date of creation",
                        "format": "dateTime",
                        "x-immutable": true,
                        "x-read-only": true
                      },
                      "updated": {
                        "type": "string",
                        "description": "Date of the last update",
                        "format": "dateTime",
                        "x-read-only": true
                      },
                      "metadata": {
                        "type": "object",
                        "properties": {
                          "workflow_status": {
                            "type": "string",
                            "description": "Status of the product regarding the user permissions",
                            "enum": [
                              "read_only",
                              "draft_in_progress",
                              "proposal_waiting_for_approval",
                              "working_copy"
                            ]
                          }
                        },
                        "description": "More information around the product (only available since the v2.0 in the Enterprise Edition)",
                        "x-immutable": true,
                        "x-read-only": true,
                        "x-from-version": "2.0"
                      },
                      "quality_scores": {
                        "type": "object",
                        "properties": {},
                        "description": "Product quality scores for each channel/locale combination (only available since the 5.0 and when the \"with_quality_scores\" query parameter is set to \"true\")",
                        "x-immutable": true,
                        "x-read-only": true,
                        "x-from-version": "5.0"
                      },
                      "completenesses": {
                        "type": "array",
                        "description": "Product completenesses for each channel/locale combination (only available since the 7.0 version, and when the \"with_completenesses\" query parameter is set to \"true\")",
                        "items": {
                          "type": "object",
                          "properties": {
                            "scope": {
                              "type": "string"
                            },
                            "locale": {
                              "type": "string"
                            },
                            "data": {
                              "type": "integer"
                            }
                          }
                        },
                        "x-immutable": true,
                        "x-read-only": true,
                        "x-from-version": "7.0"
                      }
                    },
                    "example": {
                      "identifier": "top",
                      "enabled": true,
                      "family": "tshirt",
                      "categories": [
                        "summer_collection"
                      ],
                      "groups": [],
                      "values": {
                        "name": [
                          {
                            "data": "Top",
                            "locale": "en_US"
                          },
                          {
                            "data": "Débardeur",
                            "locale": "fr_FR"
                          }
                        ],
                        "description": [
                          {
                            "data": "Summer top",
                            "locale": "en_US",
                            "scope": "ecommerce"
                          },
                          {
                            "data": "Top",
                            "locale": "en_US",
                            "scope": "tablet"
                          },
                          {
                            "data": "Débardeur pour l'été",
                            "locale": "fr_FR",
                            "scope": "ecommerce"
                          },
                          {
                            "data": "Débardeur",
                            "locale": "fr_FR",
                            "scope": "tablet"
                          }
                        ],
                        "price": [
                          {
                            "data": [
                              {
                                "amount": "15.5",
                                "currency": "EUR"
                              },
                              {
                                "amount": "15",
                                "currency": "USD"
                              }
                            ]
                          }
                        ],
                        "color": [
                          {
                            "data": "black",
                            "linked_data": {
                              "attribute": "color",
                              "code": "black",
                              "labels": {
                                "en_US": "Black",
                                "fr_FR": "Noir"
                              }
                            }
                          }
                        ],
                        "size": [
                          {
                            "data": "m",
                            "linked_data": {
                              "attribute": "size",
                              "code": "m",
                              "labels": {
                                "en_US": "M",
                                "fr_FR": "M"
                              }
                            }
                          }
                        ],
                        "collection": [
                          {
                            "data": [
                              "winter_2016"
                            ],
                            "linked_data": {
                              "winter_2016": {
                                "attribute": "collection",
                                "code": "winter_2016",
                                "labels": {
                                  "en_US": "Winter 2016",
                                  "fr_FR": "Hiver 2016"
                                }
                              }
                            }
                          }
                        ]
                      },
                      "created": "2016-06-23T18:24:44+02:00",
                      "updated": "2016-06-25T17:56:12+02:00",
                      "associations": {
                        "PACK": {
                          "products": [
                            "sunglass"
                          ],
                          "product_models": [],
                          "groups": []
                        }
                      },
                      "quantified_associations": {
                        "PRODUCT_SET": {
                          "products": [
                            {
                              "identifier": "cap",
                              "quantity": 2
                            },
                            {
                              "identifier": "shoes",
                              "quantity": 1
                            }
                          ],
                          "product_models": [
                            {
                              "identifier": "model-biker-jacket-leather",
                              "quantity": 2
                            }
                          ]
                        }
                      },
                      "quality_scores": [
                        {
                          "scope": "ecommerce",
                          "locale": "en_US",
                          "data": "A"
                        },
                        {
                          "scope": "ecommerce",
                          "locale": "fr_FR",
                          "data": "B"
                        },
                        {
                          "scope": "tablet",
                          "locale": "en_US",
                          "data": "D"
                        },
                        {
                          "scope": "tablet",
                          "locale": "fr_FR",
                          "data": "E"
                        }
                      ],
                      "completenesses": [
                        {
                          "scope": "ecommerce",
                          "locale": "en_US",
                          "data": 10
                        },
                        {
                          "scope": "ecommerce",
                          "locale": "fr_FR",
                          "data": 20
                        },
                        {
                          "scope": "tablet",
                          "locale": "en_US",
                          "data": 30
                        },
                        {
                          "scope": "tablet",
                          "locale": "fr_FR",
                          "data": 40
                        }
                      ]
                    }
                  }
                }
              },
              "x-details": "Returns the content of the product in JSON standard format"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "404": {
              "description": "Resource not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 404
                },
                "message": {
                  "example": "Resource `my_resource_code` does not exist."
                }
              },
              "x-details": "The resource code given in the URI does not correspond to any existing PIM resource"
            },
            "406": {
              "description": "Not Acceptable",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 406
                },
                "message": {
                  "example": "`xxx’ in `Accept` header is not valid. Only `application/json` is allowed."
                }
              },
              "x-details": "The `Accept` header is not `application/json` but it should"
            }
          },
          "x-versions": [
            "1.7",
            "2.x",
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ]
        },
        "delete": {
          "tags": [
            "Product [identifier]"
          ],
          "summary": "Delete a product",
          "description": "This endpoint allows you to delete a given product. In the Enterprise Edition, since the 2.0, permissions based on your user groups are applied to the product you try to delete.",
          "operationId": "delete_products__code_",
          "parameters": [
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No content to return",
              "content": {},
              "x-details": "Means that the deletion was successful"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "404": {
              "description": "Resource not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 404
                },
                "message": {
                  "example": "Resource `my_resource_code` does not exist."
                }
              },
              "x-details": "The resource code given in the URI does not correspond to any existing PIM resource"
            }
          },
          "x-versions": [
            "1.7",
            "2.x",
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ]
        },
        "patch": {
          "tags": [
            "Product [identifier]"
          ],
          "summary": "Update/create a product",
          "description": "This endpoint allows you to update a given product. Learn more about <a href=\"/documentation/update.html#update-behavior\">Update behavior</a>. Note that if no product exists for the given identifier, it creates it. In the Entreprise Edition, since the v2.0, permissions based on your user groups are applied to the product you try to update. It may result in the creation of a draft if you only have edit rights through the product's categories.",
          "operationId": "patch_products__code_",
          "parameters": [
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "identifier"
                  ],
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "description": "Product UUID",
                      "x-from-version": "7.0"
                    },
                    "identifier": {
                      "type": "string",
                      "description": "Product identifier, i.e. the value of the only `pim_catalog_identifier` attribute"
                    },
                    "enabled": {
                      "type": "boolean",
                      "description": "Whether the product is enabled",
                      "default": true
                    },
                    "family": {
                      "type": "string",
                      "description": "<a href='api-reference.html#Family'>Family</a> code from which the product inherits its attributes and attributes requirements.",
                      "default": "null only in the case of a non variant product",
                      "x-validation-rules": "It is equal to an existing family code. In the case of variant product, the given family should be the same as the product model family."
                    },
                    "categories": {
                      "type": "array",
                      "description": "Codes of the <a href='api-reference.html#Category'>categories</a> in which the product is classified",
                      "items": {
                        "type": "string"
                      },
                      "x-validation-rules": "Each string of the array is equal to an existing category code"
                    },
                    "groups": {
                      "type": "array",
                      "description": "Codes of the groups to which the product belong",
                      "items": {
                        "type": "string"
                      },
                      "x-validation-rules": "Each string of the array is equal to an existing group code"
                    },
                    "parent": {
                      "type": "string",
                      "description": "Code of the parent <a href='api-reference.html#Productmodel'>product model</a> when the product is a variant (only available since the 2.0). This parent can be modified since the 2.3.",
                      "default": "null",
                      "x-validation-rules": "It is equal to an existing product model code only if the product is variant otherwise it's equal to null",
                      "x-from-version": "2.0"
                    },
                    "values": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "scope": {
                              "type": "string",
                              "description": "<a href='api-reference.html#Channel'>Channel</a> code of the product value"
                            },
                            "locale": {
                              "type": "string",
                              "description": "<a href='api-reference.html#Locale'>Locale</a> code of the product value"
                            },
                            "data": {
                              "type": "object",
                              "properties": {},
                              "description": "Product value. See <a href='/concepts/products.html#the-data-format'>the `data` format</a> section for more details."
                            },
                            "linked_data": {
                              "type": "object",
                              "properties": {
                                "attribute": {
                                  "type": "string"
                                },
                                "code": {
                                  "type": "string"
                                },
                                "labels": {
                                  "type": "object",
                                  "properties": {}
                                }
                              },
                              "description": "Object containing labels of attribute options (only available since the 5.0 and when query parameter \"with_attribute_options\" is set to \"true\"). See <a href='/concepts/products.html#the-linked_data-format'>the `linked_data` format</a> section for more details.",
                              "x-read-only": true,
                              "x-from-version": "5.0"
                            }
                          }
                        }
                      },
                      "description": "Product attributes values, see <a href='/concepts/products.html#focus-on-the-product-values'>Product values</a> section for more details",
                      "x-validation-rules": "Validation rules detailed in Product values section"
                    },
                    "associations": {
                      "type": "object",
                      "properties": {
                        "associationTypeCode": {
                          "type": "object",
                          "properties": {
                            "groups": {
                              "type": "array",
                              "description": "Array of groups codes with which the product is in relation",
                              "items": {
                                "type": "string"
                              }
                            },
                            "products": {
                              "type": "array",
                              "description": "Array of product identifiers with which the product is in relation",
                              "items": {
                                "type": "string"
                              }
                            },
                            "product_models": {
                              "type": "array",
                              "description": "Array of product model codes with which the product is in relation (only available since the v2.1)",
                              "items": {
                                "type": "string"
                              },
                              "x-from-version": "2.1"
                            }
                          }
                        }
                      },
                      "description": "Several associations related to groups, product models and/or other products, grouped by association types",
                      "x-validation-rules": "&bull; The `associationTypeCode` is the code of an existing association type. &#10;&bull; Each string in the array of the property `groups` is the code of an existing group. &#10;&bull; Each string in the array of the property `products` is the identifier of an existing product. &#10;&bull; Each string in the array of the property `product_models` is the code of an existing product model."
                    },
                    "quantified_associations": {
                      "type": "object",
                      "properties": {
                        "quantifiedAssociationTypeCode": {
                          "type": "object",
                          "properties": {
                            "products": {
                              "type": "array",
                              "description": "Array of objects containing product identifiers and quantities with which the product is in relation",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "identifier": {
                                    "type": "string"
                                  },
                                  "quantity": {
                                    "type": "integer"
                                  }
                                }
                              }
                            },
                            "product_models": {
                              "type": "array",
                              "description": "Array of objects containing product model codes and quantities with which the product is in relation",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "code": {
                                    "type": "string"
                                  },
                                  "quantity": {
                                    "type": "integer"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "description": "Several quantified associations related to products and/or product models, grouped by quantified association types (only available since the 5.0)",
                      "x-validation-rules": "&bull; The `quantifiedAssociationTypeCode` is the code of an existing association type which provides quantity information. &#10;&bull; Each object in the array of the property `products` contains the identifier of an existing product and the quantity of it.",
                      "x-from-version": "5.0"
                    },
                    "created": {
                      "type": "string",
                      "description": "Date of creation",
                      "format": "dateTime",
                      "x-immutable": true,
                      "x-read-only": true
                    },
                    "updated": {
                      "type": "string",
                      "description": "Date of the last update",
                      "format": "dateTime",
                      "x-read-only": true
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "workflow_status": {
                          "type": "string",
                          "description": "Status of the product regarding the user permissions",
                          "enum": [
                            "read_only",
                            "draft_in_progress",
                            "proposal_waiting_for_approval",
                            "working_copy"
                          ]
                        }
                      },
                      "description": "More information around the product (only available since the v2.0 in the Enterprise Edition)",
                      "x-immutable": true,
                      "x-read-only": true,
                      "x-from-version": "2.0"
                    },
                    "quality_scores": {
                      "type": "object",
                      "properties": {},
                      "description": "Product quality scores for each channel/locale combination (only available since the 5.0 and when the \"with_quality_scores\" query parameter is set to \"true\")",
                      "x-immutable": true,
                      "x-read-only": true,
                      "x-from-version": "5.0"
                    },
                    "completenesses": {
                      "type": "array",
                      "description": "Product completenesses for each channel/locale combination (only available since the 7.0 version, and when the \"with_completenesses\" query parameter is set to \"true\")",
                      "items": {
                        "type": "object",
                        "properties": {
                          "scope": {
                            "type": "string"
                          },
                          "locale": {
                            "type": "string"
                          },
                          "data": {
                            "type": "integer"
                          }
                        }
                      },
                      "x-immutable": true,
                      "x-read-only": true,
                      "x-from-version": "7.0"
                    }
                  },
                  "example": {
                    "identifier": "top",
                    "enabled": true,
                    "family": "tshirt",
                    "categories": [
                      "summer_collection"
                    ],
                    "groups": [],
                    "values": {
                      "name": [
                        {
                          "data": "Top",
                          "locale": "en_US"
                        },
                        {
                          "data": "Débardeur",
                          "locale": "fr_FR"
                        }
                      ],
                      "description": [
                        {
                          "data": "Summer top",
                          "locale": "en_US",
                          "scope": "ecommerce"
                        },
                        {
                          "data": "Top",
                          "locale": "en_US",
                          "scope": "tablet"
                        },
                        {
                          "data": "Débardeur pour l'été",
                          "locale": "fr_FR",
                          "scope": "ecommerce"
                        },
                        {
                          "data": "Débardeur",
                          "locale": "fr_FR",
                          "scope": "tablet"
                        }
                      ],
                      "price": [
                        {
                          "data": [
                            {
                              "amount": "15.5",
                              "currency": "EUR"
                            },
                            {
                              "amount": "15",
                              "currency": "USD"
                            }
                          ]
                        }
                      ],
                      "color": [
                        {
                          "data": "black",
                          "linked_data": {
                            "attribute": "color",
                            "code": "black",
                            "labels": {
                              "en_US": "Black",
                              "fr_FR": "Noir"
                            }
                          }
                        }
                      ],
                      "size": [
                        {
                          "data": "m",
                          "linked_data": {
                            "attribute": "size",
                            "code": "m",
                            "labels": {
                              "en_US": "M",
                              "fr_FR": "M"
                            }
                          }
                        }
                      ],
                      "collection": [
                        {
                          "data": [
                            "winter_2016"
                          ],
                          "linked_data": {
                            "winter_2016": {
                              "attribute": "collection",
                              "code": "winter_2016",
                              "labels": {
                                "en_US": "Winter 2016",
                                "fr_FR": "Hiver 2016"
                              }
                            }
                          }
                        }
                      ]
                    },
                    "created": "2016-06-23T18:24:44+02:00",
                    "updated": "2016-06-25T17:56:12+02:00",
                    "associations": {
                      "PACK": {
                        "products": [
                          "sunglass"
                        ],
                        "product_models": [],
                        "groups": []
                      }
                    },
                    "quantified_associations": {
                      "PRODUCT_SET": {
                        "products": [
                          {
                            "identifier": "cap",
                            "quantity": 2
                          },
                          {
                            "identifier": "shoes",
                            "quantity": 1
                          }
                        ],
                        "product_models": [
                          {
                            "identifier": "model-biker-jacket-leather",
                            "quantity": 2
                          }
                        ]
                      }
                    },
                    "quality_scores": [
                      {
                        "scope": "ecommerce",
                        "locale": "en_US",
                        "data": "A"
                      },
                      {
                        "scope": "ecommerce",
                        "locale": "fr_FR",
                        "data": "B"
                      },
                      {
                        "scope": "tablet",
                        "locale": "en_US",
                        "data": "D"
                      },
                      {
                        "scope": "tablet",
                        "locale": "fr_FR",
                        "data": "E"
                      }
                    ],
                    "completenesses": [
                      {
                        "scope": "ecommerce",
                        "locale": "en_US",
                        "data": 10
                      },
                      {
                        "scope": "ecommerce",
                        "locale": "fr_FR",
                        "data": 20
                      },
                      {
                        "scope": "tablet",
                        "locale": "en_US",
                        "data": 30
                      },
                      {
                        "scope": "tablet",
                        "locale": "fr_FR",
                        "data": 40
                      }
                    ]
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "Created",
              "headers": {
                "Location": {
                  "description": "URI of the created resource",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {},
              "x-details": "Means that the creation was successful"
            },
            "204": {
              "description": "No content to return",
              "headers": {
                "Location": {
                  "description": "URI of the updated resource",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {},
              "x-details": "Means that the update was successful"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "415": {
              "description": "Unsupported Media type",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 415
                },
                "message": {
                  "example": "`xxx’ in `Content-Type’ header is not valid.  Only `application/json’ is allowed."
                }
              },
              "x-details": "The `Content-Type` header has to be `application/json`"
            },
            "422": {
              "description": "Unprocessable entity",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 422
                },
                "message": {
                  "example": "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
                },
                "_links": {
                  "example": {
                    "documentation": {
                      "href": "http://api.akeneo.com/api-reference.html"
                    }
                  }
                }
              },
              "x-details": "The validation of the entity given in the body of the request failed"
            }
          },
          "x-versions": [
            "1.7",
            "2.x",
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-codegen-request-body-name": "body"
        }
      },
      "/api/rest/v1/products/{code}/proposal": {
        "post": {
          "tags": [
            "Product [identifier]"
          ],
          "summary": "Submit a draft for approval",
          "description": "This endpoint allows you to submit a draft for approval.",
          "operationId": "post_proposal",
          "parameters": [
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Submitted",
              "headers": {
                "Location": {
                  "description": "URI of the created resource",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {},
              "x-details": "Means that the draft submission was successful"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "415": {
              "description": "Unsupported Media type",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 415
                },
                "message": {
                  "example": "`xxx’ in `Content-Type’ header is not valid.  Only `application/json’ is allowed."
                }
              },
              "x-details": "The `Content-Type` header has to be `application/json`"
            },
            "422": {
              "description": "Unprocessable entity",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 422
                },
                "message": {
                  "example": "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
                },
                "_links": {
                  "example": {
                    "documentation": {
                      "href": "http://api.akeneo.com/api-reference.html"
                    }
                  }
                }
              },
              "x-details": "The validation of the entity given in the body of the request failed"
            }
          },
          "x-versions": [
            "2.x",
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-ee": true
        }
      },
      "/api/rest/v1/products/{code}/draft": {
        "get": {
          "tags": [
            "Product [identifier]"
          ],
          "summary": "Get a draft",
          "description": "This endpoint allows you to get the information about a given draft.",
          "operationId": "get_draft__code_",
          "parameters": [
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "required": [
                      "identifier"
                    ],
                    "type": "object",
                    "properties": {
                      "uuid": {
                        "type": "string",
                        "description": "Product UUID",
                        "x-from-version": "7.0"
                      },
                      "identifier": {
                        "type": "string",
                        "description": "Product identifier, i.e. the value of the only `pim_catalog_identifier` attribute"
                      },
                      "enabled": {
                        "type": "boolean",
                        "description": "Whether the product is enabled",
                        "default": true
                      },
                      "family": {
                        "type": "string",
                        "description": "<a href='api-reference.html#Family'>Family</a> code from which the product inherits its attributes and attributes requirements.",
                        "default": "null only in the case of a non variant product",
                        "x-validation-rules": "It is equal to an existing family code. In the case of variant product, the given family should be the same as the product model family."
                      },
                      "categories": {
                        "type": "array",
                        "description": "Codes of the <a href='api-reference.html#Category'>categories</a> in which the product is classified",
                        "items": {
                          "type": "string"
                        },
                        "x-validation-rules": "Each string of the array is equal to an existing category code"
                      },
                      "groups": {
                        "type": "array",
                        "description": "Codes of the groups to which the product belong",
                        "items": {
                          "type": "string"
                        },
                        "x-validation-rules": "Each string of the array is equal to an existing group code"
                      },
                      "parent": {
                        "type": "string",
                        "description": "Code of the parent <a href='api-reference.html#Productmodel'>product model</a> when the product is a variant (only available since the 2.0). This parent can be modified since the 2.3.",
                        "default": "null",
                        "x-validation-rules": "It is equal to an existing product model code only if the product is variant otherwise it's equal to null",
                        "x-from-version": "2.0"
                      },
                      "values": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "scope": {
                                "type": "string",
                                "description": "<a href='api-reference.html#Channel'>Channel</a> code of the product value"
                              },
                              "locale": {
                                "type": "string",
                                "description": "<a href='api-reference.html#Locale'>Locale</a> code of the product value"
                              },
                              "data": {
                                "type": "object",
                                "properties": {},
                                "description": "Product value. See <a href='/concepts/products.html#the-data-format'>the `data` format</a> section for more details."
                              },
                              "linked_data": {
                                "type": "object",
                                "properties": {
                                  "attribute": {
                                    "type": "string"
                                  },
                                  "code": {
                                    "type": "string"
                                  },
                                  "labels": {
                                    "type": "object",
                                    "properties": {}
                                  }
                                },
                                "description": "Object containing labels of attribute options (only available since the 5.0 and when query parameter \"with_attribute_options\" is set to \"true\"). See <a href='/concepts/products.html#the-linked_data-format'>the `linked_data` format</a> section for more details.",
                                "x-read-only": true,
                                "x-from-version": "5.0"
                              }
                            }
                          }
                        },
                        "description": "Product attributes values, see <a href='/concepts/products.html#focus-on-the-product-values'>Product values</a> section for more details",
                        "x-validation-rules": "Validation rules detailed in Product values section"
                      },
                      "associations": {
                        "type": "object",
                        "properties": {
                          "associationTypeCode": {
                            "type": "object",
                            "properties": {
                              "groups": {
                                "type": "array",
                                "description": "Array of groups codes with which the product is in relation",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "products": {
                                "type": "array",
                                "description": "Array of product identifiers with which the product is in relation",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "product_models": {
                                "type": "array",
                                "description": "Array of product model codes with which the product is in relation (only available since the v2.1)",
                                "items": {
                                  "type": "string"
                                },
                                "x-from-version": "2.1"
                              }
                            }
                          }
                        },
                        "description": "Several associations related to groups, product models and/or other products, grouped by association types",
                        "x-validation-rules": "&bull; The `associationTypeCode` is the code of an existing association type. &#10;&bull; Each string in the array of the property `groups` is the code of an existing group. &#10;&bull; Each string in the array of the property `products` is the identifier of an existing product. &#10;&bull; Each string in the array of the property `product_models` is the code of an existing product model."
                      },
                      "quantified_associations": {
                        "type": "object",
                        "properties": {
                          "quantifiedAssociationTypeCode": {
                            "type": "object",
                            "properties": {
                              "products": {
                                "type": "array",
                                "description": "Array of objects containing product identifiers and quantities with which the product is in relation",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "identifier": {
                                      "type": "string"
                                    },
                                    "quantity": {
                                      "type": "integer"
                                    }
                                  }
                                }
                              },
                              "product_models": {
                                "type": "array",
                                "description": "Array of objects containing product model codes and quantities with which the product is in relation",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "string"
                                    },
                                    "quantity": {
                                      "type": "integer"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "description": "Several quantified associations related to products and/or product models, grouped by quantified association types (only available since the 5.0)",
                        "x-validation-rules": "&bull; The `quantifiedAssociationTypeCode` is the code of an existing association type which provides quantity information. &#10;&bull; Each object in the array of the property `products` contains the identifier of an existing product and the quantity of it.",
                        "x-from-version": "5.0"
                      },
                      "created": {
                        "type": "string",
                        "description": "Date of creation",
                        "format": "dateTime",
                        "x-immutable": true,
                        "x-read-only": true
                      },
                      "updated": {
                        "type": "string",
                        "description": "Date of the last update",
                        "format": "dateTime",
                        "x-read-only": true
                      },
                      "metadata": {
                        "type": "object",
                        "properties": {
                          "workflow_status": {
                            "type": "string",
                            "description": "Status of the product regarding the user permissions",
                            "enum": [
                              "read_only",
                              "draft_in_progress",
                              "proposal_waiting_for_approval",
                              "working_copy"
                            ]
                          }
                        },
                        "description": "More information around the product (only available since the v2.0 in the Enterprise Edition)",
                        "x-immutable": true,
                        "x-read-only": true,
                        "x-from-version": "2.0"
                      },
                      "quality_scores": {
                        "type": "object",
                        "properties": {},
                        "description": "Product quality scores for each channel/locale combination (only available since the 5.0 and when the \"with_quality_scores\" query parameter is set to \"true\")",
                        "x-immutable": true,
                        "x-read-only": true,
                        "x-from-version": "5.0"
                      },
                      "completenesses": {
                        "type": "array",
                        "description": "Product completenesses for each channel/locale combination (only available since the 7.0 version, and when the \"with_completenesses\" query parameter is set to \"true\")",
                        "items": {
                          "type": "object",
                          "properties": {
                            "scope": {
                              "type": "string"
                            },
                            "locale": {
                              "type": "string"
                            },
                            "data": {
                              "type": "integer"
                            }
                          }
                        },
                        "x-immutable": true,
                        "x-read-only": true,
                        "x-from-version": "7.0"
                      }
                    },
                    "example": {
                      "identifier": "top",
                      "enabled": true,
                      "family": "tshirt",
                      "categories": [
                        "summer_collection"
                      ],
                      "groups": [],
                      "values": {
                        "name": [
                          {
                            "data": "Top",
                            "locale": "en_US"
                          },
                          {
                            "data": "Débardeur",
                            "locale": "fr_FR"
                          }
                        ],
                        "description": [
                          {
                            "data": "Summer top",
                            "locale": "en_US",
                            "scope": "ecommerce"
                          },
                          {
                            "data": "Top",
                            "locale": "en_US",
                            "scope": "tablet"
                          },
                          {
                            "data": "Débardeur pour l'été",
                            "locale": "fr_FR",
                            "scope": "ecommerce"
                          },
                          {
                            "data": "Débardeur",
                            "locale": "fr_FR",
                            "scope": "tablet"
                          }
                        ],
                        "price": [
                          {
                            "data": [
                              {
                                "amount": "15.5",
                                "currency": "EUR"
                              },
                              {
                                "amount": "15",
                                "currency": "USD"
                              }
                            ]
                          }
                        ],
                        "color": [
                          {
                            "data": "black",
                            "linked_data": {
                              "attribute": "color",
                              "code": "black",
                              "labels": {
                                "en_US": "Black",
                                "fr_FR": "Noir"
                              }
                            }
                          }
                        ],
                        "size": [
                          {
                            "data": "m",
                            "linked_data": {
                              "attribute": "size",
                              "code": "m",
                              "labels": {
                                "en_US": "M",
                                "fr_FR": "M"
                              }
                            }
                          }
                        ],
                        "collection": [
                          {
                            "data": [
                              "winter_2016"
                            ],
                            "linked_data": {
                              "winter_2016": {
                                "attribute": "collection",
                                "code": "winter_2016",
                                "labels": {
                                  "en_US": "Winter 2016",
                                  "fr_FR": "Hiver 2016"
                                }
                              }
                            }
                          }
                        ]
                      },
                      "created": "2016-06-23T18:24:44+02:00",
                      "updated": "2016-06-25T17:56:12+02:00",
                      "associations": {
                        "PACK": {
                          "products": [
                            "sunglass"
                          ],
                          "product_models": [],
                          "groups": []
                        }
                      },
                      "quantified_associations": {
                        "PRODUCT_SET": {
                          "products": [
                            {
                              "identifier": "cap",
                              "quantity": 2
                            },
                            {
                              "identifier": "shoes",
                              "quantity": 1
                            }
                          ],
                          "product_models": [
                            {
                              "identifier": "model-biker-jacket-leather",
                              "quantity": 2
                            }
                          ]
                        }
                      },
                      "quality_scores": [
                        {
                          "scope": "ecommerce",
                          "locale": "en_US",
                          "data": "A"
                        },
                        {
                          "scope": "ecommerce",
                          "locale": "fr_FR",
                          "data": "B"
                        },
                        {
                          "scope": "tablet",
                          "locale": "en_US",
                          "data": "D"
                        },
                        {
                          "scope": "tablet",
                          "locale": "fr_FR",
                          "data": "E"
                        }
                      ],
                      "completenesses": [
                        {
                          "scope": "ecommerce",
                          "locale": "en_US",
                          "data": 10
                        },
                        {
                          "scope": "ecommerce",
                          "locale": "fr_FR",
                          "data": 20
                        },
                        {
                          "scope": "tablet",
                          "locale": "en_US",
                          "data": 30
                        },
                        {
                          "scope": "tablet",
                          "locale": "fr_FR",
                          "data": 40
                        }
                      ]
                    }
                  }
                }
              },
              "x-details": "Returns the content of the draft in JSON standard format"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "404": {
              "description": "Resource not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 404
                },
                "message": {
                  "example": "Resource `my_resource_code` does not exist."
                }
              },
              "x-details": "The resource code given in the URI does not correspond to any existing PIM resource"
            },
            "406": {
              "description": "Not Acceptable",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 406
                },
                "message": {
                  "example": "`xxx’ in `Accept` header is not valid. Only `application/json` is allowed."
                }
              },
              "x-details": "The `Accept` header is not `application/json` but it should"
            }
          },
          "x-versions": [
            "2.x",
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-ee": true
        }
      },
      "/api/rest/v1/products-uuid": {
        "get": {
          "tags": [
            "Product [uuid]"
          ],
          "summary": "Get list of products",
          "description": "This endpoint allows you to get a list of products. Products are paginated and they can be filtered. In the Enterprise Edition, permissions based on your user groups are applied to the set of products you request.",
          "operationId": "get_products_uuid",
          "parameters": [
            {
              "name": "search",
              "in": "query",
              "description": "Filter products, for more details see the <a href=\"/documentation/filter.html\">Filters</a> section",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "scope",
              "in": "query",
              "description": "Filter product values to return scopable attributes for the given channel as well as the non localizable/non scopable attributes, for more details see the <a href=\"/documentation/filter.html#via-channel\">Filter product values via channel</a> section",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "locales",
              "in": "query",
              "description": "Filter product values to return localizable attributes for the given locales as well as the non localizable/non scopable attributes, for more details see the <a href=\"/documentation/filter.html#via-locale\">Filter product values via locale</a> section",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "attributes",
              "in": "query",
              "description": "Filter product values to only return those concerning the given attributes, for more details see the <a href=\"/documentation/filter.html#filter-product-values\">Filter on product values</a> section",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "pagination_type",
              "in": "query",
              "description": "Pagination method type, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
              "schema": {
                "type": "string",
                "default": "page",
                "enum": [
                  "page",
                  "search_after"
                ],
                "x-validation-rules": "One of the following values"
              },
              "x-validation-rules": "One of the following values"
            },
            {
              "name": "page",
              "in": "query",
              "description": "Number of the page to retrieve when using the `page` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html#pagination\">Pagination</a> section",
              "schema": {
                "type": "integer",
                "default": 1
              }
            },
            {
              "name": "search_after",
              "in": "query",
              "description": "Cursor when using the `search_after` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
              "schema": {
                "type": "string",
                "default": "cursor to the first page"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
              "schema": {
                "maximum": 100,
                "minimum": 1,
                "type": "integer",
                "default": 10
              }
            },
            {
              "name": "with_count",
              "in": "query",
              "description": "Return the count of items in the response. Be carefull with that, on a big catalog, it can decrease performance in a significative way",
              "schema": {
                "type": "boolean",
                "default": false
              }
            },
            {
              "name": "with_attribute_options",
              "in": "query",
              "description": "Return labels of attribute options in the response. (Only available since the 5.0 version)",
              "schema": {
                "type": "boolean",
                "default": false,
                "x-from-version": "5.0"
              },
              "x-from-version": "5.0"
            },
            {
              "name": "with_quality_scores",
              "in": "query",
              "description": "Return product quality scores in the response. (Only available since the 5.0 version)",
              "schema": {
                "type": "boolean",
                "default": false,
                "x-from-version": "5.0"
              },
              "x-from-version": "5.0"
            },
            {
              "name": "with_completenesses",
              "in": "query",
              "description": "Return product completenesses in the response. (Only available since the 6.0 version)",
              "schema": {
                "type": "boolean",
                "default": false,
                "x-from-version": "6.0"
              },
              "x-from-version": "6.0"
            }
          ],
          "responses": {
            "200": {
              "description": "Return products paginated",
              "content": {
                "application/json": {
                  "schema": {
                    "title": "Products",
                    "type": "object",
                    "properties": {
                      "_embedded": {
                        "type": "object",
                        "properties": {
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "_links": {
                                      "type": "object",
                                      "properties": {
                                        "self": {
                                          "type": "object",
                                          "properties": {
                                            "href": {
                                              "type": "string",
                                              "description": "URI of the resource"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "uuid": {
                                      "type": "string",
                                      "description": "Product uuid"
                                    },
                                    "enabled": {
                                      "type": "boolean",
                                      "description": "Whether the product is enabled",
                                      "default": true
                                    },
                                    "family": {
                                      "type": "string",
                                      "description": "<a href='api-reference.html#Family'>Family</a> code from which the product inherits its attributes and attributes requirements.",
                                      "default": "null only in the case of a non variant product",
                                      "x-validation-rules": "It is equal to an existing family code. In the case of variant product, the given family should be the same as the product model family."
                                    },
                                    "categories": {
                                      "type": "array",
                                      "description": "Codes of the <a href='api-reference.html#Category'>categories</a> in which the product is classified",
                                      "items": {
                                        "type": "string"
                                      },
                                      "x-validation-rules": "Each string of the array is equal to an existing category code"
                                    },
                                    "groups": {
                                      "type": "array",
                                      "description": "Codes of the groups to which the product belong",
                                      "items": {
                                        "type": "string"
                                      },
                                      "x-validation-rules": "Each string of the array is equal to an existing group code"
                                    },
                                    "parent": {
                                      "type": "string",
                                      "description": "Code of the parent <a href='api-reference.html#Productmodel'>product model</a> when the product is a variant (only available since the 2.0). This parent can be modified since the 2.3.",
                                      "default": "null",
                                      "x-validation-rules": "It is equal to an existing product model code only if the product is variant otherwise it's equal to null",
                                      "x-from-version": "2.0"
                                    },
                                    "values": {
                                      "type": "object",
                                      "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "scope": {
                                              "type": "string",
                                              "description": "<a href='api-reference.html#Channel'>Channel</a> code of the product value"
                                            },
                                            "locale": {
                                              "type": "string",
                                              "description": "<a href='api-reference.html#Locale'>Locale</a> code of the product value"
                                            },
                                            "data": {
                                              "type": "object",
                                              "properties": {},
                                              "description": "Product value. See <a href='/concepts/products.html#the-data-format'>the `data` format</a> section for more details."
                                            },
                                            "linked_data": {
                                              "type": "object",
                                              "properties": {
                                                "attribute": {
                                                  "type": "string"
                                                },
                                                "code": {
                                                  "type": "string"
                                                },
                                                "labels": {
                                                  "type": "object",
                                                  "properties": {}
                                                }
                                              },
                                              "description": "Object containing labels of attribute options (only available since the 5.0 and when query parameter \"with_attribute_options\" is set to \"true\"). See <a href='/concepts/products.html#the-linked_data-format'>the `linked_data` format</a> section for more details.",
                                              "x-read-only": true,
                                              "x-from-version": "5.0"
                                            }
                                          }
                                        }
                                      },
                                      "description": "Product attributes values, see <a href='/concepts/products.html#focus-on-the-product-values'>Product values</a> section for more details",
                                      "x-validation-rules": "Validation rules detailed in Product values section"
                                    },
                                    "associations": {
                                      "type": "object",
                                      "properties": {
                                        "associationTypeCode": {
                                          "type": "object",
                                          "properties": {
                                            "groups": {
                                              "type": "array",
                                              "description": "Array of groups codes with which the product is in relation",
                                              "items": {
                                                "type": "string"
                                              }
                                            },
                                            "products": {
                                              "type": "array",
                                              "description": "Array of product uuids with which the product is in relation",
                                              "items": {
                                                "type": "string"
                                              }
                                            },
                                            "product_models": {
                                              "type": "array",
                                              "description": "Array of product model codes with which the product is in relation (only available since the v2.1)",
                                              "items": {
                                                "type": "string"
                                              },
                                              "x-from-version": "2.1"
                                            }
                                          }
                                        }
                                      },
                                      "description": "Several associations related to groups, product models and/or other products, grouped by association types",
                                      "x-validation-rules": "&bull; The `associationTypeCode` is the code of an existing association type. &#10;&bull; Each string in the array of the property `groups` is the code of an existing group. &#10;&bull; Each string in the array of the property `products` is the uuid of an existing product. &#10;&bull; Each string in the array of the property `product_models` is the code of an existing product model."
                                    },
                                    "quantified_associations": {
                                      "type": "object",
                                      "properties": {
                                        "quantifiedAssociationTypeCode": {
                                          "type": "object",
                                          "properties": {
                                            "products": {
                                              "type": "array",
                                              "description": "Array of objects containing product uuids and quantities with which the product is in relation",
                                              "items": {
                                                "type": "object",
                                                "properties": {
                                                  "uuid": {
                                                    "type": "string"
                                                  },
                                                  "quantity": {
                                                    "type": "integer"
                                                  }
                                                }
                                              }
                                            },
                                            "product_models": {
                                              "type": "array",
                                              "description": "Array of objects containing product model codes and quantities with which the product is in relation",
                                              "items": {
                                                "type": "object",
                                                "properties": {
                                                  "code": {
                                                    "type": "string"
                                                  },
                                                  "quantity": {
                                                    "type": "integer"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "description": "Several quantified associations related to products and/or product models, grouped by quantified association types (only available since the 5.0)",
                                      "x-validation-rules": "&bull; The `quantifiedAssociationTypeCode` is the code of an existing association type which provides quantity information. &#10;&bull; Each object in the array of the property `products` contains the uuid of an existing product and the quantity of it.",
                                      "x-from-version": "5.0"
                                    },
                                    "created": {
                                      "type": "string",
                                      "description": "Date of creation",
                                      "format": "dateTime",
                                      "x-immutable": true,
                                      "x-read-only": true
                                    },
                                    "updated": {
                                      "type": "string",
                                      "description": "Date of the last update",
                                      "format": "dateTime",
                                      "x-read-only": true
                                    },
                                    "metadata": {
                                      "type": "object",
                                      "properties": {
                                        "workflow_status": {
                                          "type": "string",
                                          "description": "Status of the product regarding the user permissions",
                                          "enum": [
                                            "read_only",
                                            "draft_in_progress",
                                            "proposal_waiting_for_approval",
                                            "working_copy"
                                          ]
                                        }
                                      },
                                      "description": "More information around the product (only available since the v2.0 in the Enterprise Edition)",
                                      "x-immutable": true,
                                      "x-read-only": true,
                                      "x-from-version": "2.0"
                                    },
                                    "quality_scores": {
                                      "type": "object",
                                      "properties": {},
                                      "description": "Product quality scores for each channel/locale combination (only available since the 5.0 and when the \"with_quality_scores\" query parameter is set to \"true\")",
                                      "x-immutable": true,
                                      "x-read-only": true,
                                      "x-from-version": "5.0"
                                    },
                                    "completenesses": {
                                      "type": "array",
                                      "description": "Product completenesses for each channel/locale combination (only available since the 7.0 version, and when the \"with_completenesses\" query parameter is set to \"true\")",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "scope": {
                                            "type": "string"
                                          },
                                          "locale": {
                                            "type": "string"
                                          },
                                          "data": {
                                            "type": "integer"
                                          }
                                        }
                                      },
                                      "x-immutable": true,
                                      "x-read-only": true,
                                      "x-from-version": "7.0"
                                    }
                                  },
                                  "example": {
                                    "uuid": "25566245-55c3-42ce-86d9-8610ac459fa8",
                                    "enabled": true,
                                    "family": "tshirt",
                                    "categories": [
                                      "summer_collection"
                                    ],
                                    "groups": [],
                                    "values": {
                                      "sku": [
                                        {
                                          "data": "top"
                                        }
                                      ],
                                      "name": [
                                        {
                                          "data": "Top",
                                          "locale": "en_US"
                                        },
                                        {
                                          "data": "Débardeur",
                                          "locale": "fr_FR"
                                        }
                                      ],
                                      "description": [
                                        {
                                          "data": "Summer top",
                                          "locale": "en_US",
                                          "scope": "ecommerce"
                                        },
                                        {
                                          "data": "Top",
                                          "locale": "en_US",
                                          "scope": "tablet"
                                        },
                                        {
                                          "data": "Débardeur pour l'été",
                                          "locale": "fr_FR",
                                          "scope": "ecommerce"
                                        },
                                        {
                                          "data": "Débardeur",
                                          "locale": "fr_FR",
                                          "scope": "tablet"
                                        }
                                      ],
                                      "price": [
                                        {
                                          "data": [
                                            {
                                              "amount": "15.5",
                                              "currency": "EUR"
                                            },
                                            {
                                              "amount": "15",
                                              "currency": "USD"
                                            }
                                          ]
                                        }
                                      ],
                                      "color": [
                                        {
                                          "data": "black",
                                          "linked_data": {
                                            "attribute": "color",
                                            "code": "black",
                                            "labels": {
                                              "en_US": "Black",
                                              "fr_FR": "Noir"
                                            }
                                          }
                                        }
                                      ],
                                      "size": [
                                        {
                                          "data": "m",
                                          "linked_data": {
                                            "attribute": "size",
                                            "code": "m",
                                            "labels": {
                                              "en_US": "M",
                                              "fr_FR": "M"
                                            }
                                          }
                                        }
                                      ],
                                      "collection": [
                                        {
                                          "data": [
                                            "winter_2016"
                                          ],
                                          "linked_data": {
                                            "winter_2016": {
                                              "attribute": "collection",
                                              "code": "winter_2016",
                                              "labels": {
                                                "en_US": "Winter 2016",
                                                "fr_FR": "Hiver 2016"
                                              }
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    "created": "2016-06-23T18:24:44+02:00",
                                    "updated": "2016-06-25T17:56:12+02:00",
                                    "associations": {
                                      "PACK": {
                                        "products": [
                                          "d055527c-0698-4967-8f16-8a5f23f4e5cf"
                                        ],
                                        "product_models": [],
                                        "groups": []
                                      }
                                    },
                                    "quantified_associations": {
                                      "PRODUCT_SET": {
                                        "products": [
                                          {
                                            "uuid": "fc24e6c3-933c-4a93-8a81-e5c703d134d5",
                                            "quantity": 2
                                          },
                                          {
                                            "uuid": "a9b69002-a0b1-4ead-85c2-f8dbf59c6cfc",
                                            "quantity": 1
                                          }
                                        ],
                                        "product_models": [
                                          {
                                            "identifier": "model-biker-jacket-leather",
                                            "quantity": 2
                                          }
                                        ]
                                      }
                                    },
                                    "quality_scores": [
                                      {
                                        "scope": "ecommerce",
                                        "locale": "en_US",
                                        "data": "A"
                                      },
                                      {
                                        "scope": "ecommerce",
                                        "locale": "fr_FR",
                                        "data": "B"
                                      },
                                      {
                                        "scope": "tablet",
                                        "locale": "en_US",
                                        "data": "D"
                                      },
                                      {
                                        "scope": "tablet",
                                        "locale": "fr_FR",
                                        "data": "E"
                                      }
                                    ],
                                    "completenesses": [
                                      {
                                        "scope": "ecommerce",
                                        "locale": "en_US",
                                        "data": 10
                                      },
                                      {
                                        "scope": "ecommerce",
                                        "locale": "fr_FR",
                                        "data": 20
                                      },
                                      {
                                        "scope": "tablet",
                                        "locale": "en_US",
                                        "data": 30
                                      },
                                      {
                                        "scope": "tablet",
                                        "locale": "fr_FR",
                                        "data": 40
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        }
                      },
                      "_links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the current page of resources"
                              }
                            }
                          },
                          "first": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the first page of resources"
                              }
                            }
                          },
                          "previous": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the previous page of resources"
                              }
                            }
                          },
                          "next": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the next page of resources"
                              }
                            }
                          }
                        }
                      },
                      "current_page": {
                        "type": "integer",
                        "description": "Current page number"
                      }
                    }
                  }
                }
              },
              "x-examples-per-version": [
                {
                  "x-version": "SaaS",
                  "x-example": {
                    "_links": {
                      "self": {
                        "href": "https://demo.akeneo.com/api/rest/v1/products-uuid?page=3&limit=3&with_quality_scores=true&with_completenesses=true&with_attribute_options=true"
                      },
                      "first": {
                        "href": "https://demo.akeneo.com/api/rest/v1/products-uuid?page=1&limit=3&with_quality_scores=true&with_completenesses=true&with_attribute_options=true"
                      },
                      "previous": {
                        "href": "https://demo.akeneo.com/api/rest/v1/products-uuid?page=2&limit=3&with_quality_scores=true&with_completenesses=true&with_attribute_options=true"
                      },
                      "next": {
                        "href": "https://demo.akeneo.com/api/rest/v1/products-uuid?page=4&limit=3&with_quality_scores=true&with_completenesses=true&with_attribute_options=true"
                      }
                    },
                    "current_page": 3,
                    "_embedded": {
                      "items": [
                        {
                          "_links": {
                            "self": {
                              "href": "https://demo.akeneo.com/api/rest/v1/product-uuid/25566245-55c3-42ce-86d9-8610ac459fa8"
                            }
                          },
                          "uuid": "25566245-55c3-42ce-86d9-8610ac459fa8",
                          "family": "tshirt",
                          "groups": [],
                          "categories": [
                            "summer_collection"
                          ],
                          "enabled": true,
                          "values": {
                            "sku": [
                              {
                                "data": "top"
                              }
                            ],
                            "name": [
                              {
                                "data": "Top",
                                "locale": "en_US"
                              },
                              {
                                "data": "Débardeur",
                                "locale": "fr_FR"
                              }
                            ],
                            "description": [
                              {
                                "data": "Summer top",
                                "locale": "en_US",
                                "scope": "ecommerce"
                              },
                              {
                                "data": "Top",
                                "locale": "en_US",
                                "scope": "tablet"
                              },
                              {
                                "data": "Débardeur pour l'été",
                                "locale": "fr_FR",
                                "scope": "ecommerce"
                              },
                              {
                                "data": "Débardeur",
                                "locale": "fr_FR",
                                "scope": "tablet"
                              }
                            ],
                            "price": [
                              {
                                "data": [
                                  {
                                    "amount": "15.5",
                                    "currency": "EUR"
                                  },
                                  {
                                    "amount": "15",
                                    "currency": "USD"
                                  }
                                ]
                              }
                            ],
                            "color": [
                              {
                                "data": "black",
                                "linked_data": {
                                  "attribute": "color",
                                  "code": "black",
                                  "labels": {
                                    "en_US": "Black",
                                    "fr_FR": "Noir"
                                  }
                                }
                              }
                            ],
                            "size": [
                              {
                                "data": "m",
                                "linked_data": {
                                  "attribute": "size",
                                  "code": "m",
                                  "labels": {
                                    "en_US": "M",
                                    "fr_FR": "M"
                                  }
                                }
                              }
                            ],
                            "collection": [
                              {
                                "data": [
                                  "winter_2016"
                                ],
                                "linked_data": {
                                  "winter_2016": {
                                    "attribute": "collection",
                                    "code": "winter_2016",
                                    "labels": {
                                      "en_US": "Winter 2016",
                                      "fr_FR": "Hiver 2016"
                                    }
                                  }
                                }
                              }
                            ]
                          },
                          "created": "2016-06-23T18:24:44+02:00",
                          "updated": "2016-06-25T17:56:12+02:00",
                          "associations": {
                            "PACK": {
                              "products": [
                                "d055527c-0698-4967-8f16-8a5f23f4e5cf"
                              ],
                              "product_models": [],
                              "groups": []
                            }
                          },
                          "quantified_associations": {
                            "PRODUCT_SET": {
                              "products": [
                                {
                                  "uuid": "fc24e6c3-933c-4a93-8a81-e5c703d134d5",
                                  "quantity": 2
                                },
                                {
                                  "uuid": "a9b69002-a0b1-4ead-85c2-f8dbf59c6cfc",
                                  "quantity": 1
                                }
                              ],
                              "product_models": [
                                {
                                  "identifier": "model-biker-jacket-leather",
                                  "quantity": 2
                                }
                              ]
                            }
                          },
                          "quality_scores": [
                            {
                              "scope": "ecommerce",
                              "locale": "en_US",
                              "data": "A"
                            },
                            {
                              "scope": "ecommerce",
                              "locale": "fr_FR",
                              "data": "B"
                            },
                            {
                              "scope": "tablet",
                              "locale": "en_US",
                              "data": "D"
                            },
                            {
                              "scope": "tablet",
                              "locale": "fr_FR",
                              "data": "E"
                            }
                          ],
                          "completenesses": [
                            {
                              "scope": "ecommerce",
                              "locale": "en_US",
                              "data": 20
                            },
                            {
                              "scope": "ecommerce",
                              "locale": "fr_FR",
                              "data": 30
                            },
                            {
                              "scope": "tablet",
                              "locale": "en_US",
                              "data": 55
                            },
                            {
                              "scope": "tablet",
                              "locale": "fr_FR",
                              "data": 70
                            }
                          ]
                        },
                        {
                          "_links": {
                            "self": {
                              "href": "https://demo.akeneo.com/api/rest/v1/product/fc24e6c3-933c-4a93-8a81-e5c703d134d5"
                            }
                          },
                          "uuid": "fc24e6c3-933c-4a93-8a81-e5c703d134d5",
                          "family": "caps",
                          "groups": [],
                          "categories": [
                            "summer_collection"
                          ],
                          "enabled": true,
                          "values": {
                            "sku": [
                              {
                                "data": "cap"
                              }
                            ],
                            "name": [
                              {
                                "data": "Cap",
                                "locale": "en_US"
                              },
                              {
                                "data": "Casquette",
                                "locale": "fr_FR"
                              }
                            ],
                            "description": [
                              {
                                "data": "Cap unisex",
                                "locale": "en_US",
                                "scope": "ecommerce"
                              },
                              {
                                "data": "Cap unisex",
                                "locale": "en_US",
                                "scope": "tablet"
                              },
                              {
                                "data": "Casquette unisexe",
                                "locale": "fr_FR",
                                "scope": "ecommerce"
                              },
                              {
                                "data": "Casquette unisexe",
                                "locale": "fr_FR",
                                "scope": "tablet"
                              }
                            ],
                            "price": [
                              {
                                "data": [
                                  {
                                    "amount": "20",
                                    "currency": "EUR"
                                  },
                                  {
                                    "amount": "20",
                                    "currency": "USD"
                                  }
                                ]
                              }
                            ],
                            "color": [
                              {
                                "data": "black",
                                "linked_data": {
                                  "attribute": "color",
                                  "code": "black",
                                  "labels": {
                                    "en_US": "Black",
                                    "fr_FR": "Noir"
                                  }
                                }
                              }
                            ]
                          },
                          "created": "2016-06-23T18:24:44+02:00",
                          "updated": "2016-06-25T17:56:12+02:00",
                          "associations": {
                            "PACK": {
                              "products": [
                                "d055527c-0698-4967-8f16-8a5f23f4e5cf"
                              ],
                              "product_models": [],
                              "groups": []
                            }
                          },
                          "quantified_associations": {},
                          "quality_scores": [
                            {
                              "scope": "ecommerce",
                              "locale": "en_US",
                              "data": "A"
                            },
                            {
                              "scope": "ecommerce",
                              "locale": "fr_FR",
                              "data": "B"
                            },
                            {
                              "scope": "tablet",
                              "locale": "en_US",
                              "data": "D"
                            },
                            {
                              "scope": "tablet",
                              "locale": "fr_FR",
                              "data": "E"
                            }
                          ],
                          "completenesses": [
                            {
                              "scope": "ecommerce",
                              "locale": "en_US",
                              "data": 20
                            },
                            {
                              "scope": "ecommerce",
                              "locale": "fr_FR",
                              "data": 30
                            },
                            {
                              "scope": "tablet",
                              "locale": "en_US",
                              "data": 55
                            },
                            {
                              "scope": "tablet",
                              "locale": "fr_FR",
                              "data": 70
                            }
                          ]
                        },
                        {
                          "_links": {
                            "self": {
                              "href": "https://demo.akeneo.com/api/rest/v1/product-uuid/fa0b115e-46ec-4527-beab-7207452f1b47"
                            }
                          },
                          "uuid": "fa0b115e-46ec-4527-beab-7207452f1b47",
                          "groups": [],
                          "categories": [
                            "winter_collection"
                          ],
                          "enabled": true,
                          "values": {
                            "sku": [
                              {
                                "data": "sweat"
                              }
                            ]
                          },
                          "created": "2016-06-23T11:24:44+02:00",
                          "updated": "2016-06-23T11:24:44+02:00",
                          "associations": {},
                          "quantified_associations": {},
                          "quality_scores": {},
                          "completenesses": []
                        }
                      ]
                    }
                  }
                }
              ]
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "406": {
              "description": "Not Acceptable",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 406
                },
                "message": {
                  "example": "`xxx’ in `Accept` header is not valid. Only `application/json` is allowed."
                }
              },
              "x-details": "The `Accept` header is not `application/json` but it should"
            },
            "422": {
              "description": "Unprocessable entity",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 422
                },
                "message": {
                  "example": "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
                },
                "_links": {
                  "example": {
                    "documentation": {
                      "href": "http://api.akeneo.com/api-reference.html"
                    }
                  }
                }
              },
              "x-details": "The validation of the entity given in the body of the request failed"
            }
          },
          "x-versions": [
            "7.0",
            "SaaS"
          ]
        },
        "post": {
          "tags": [
            "Product [uuid]"
          ],
          "summary": "Create a new product",
          "description": "This endpoint allows you to create a new product. In the Enterprise Edition, permissions based on your user groups are applied to the product you try to create. If no uuid is provided, the PIM will generate one for you.",
          "operationId": "post_products_uuid",
          "requestBody": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "description": "Product uuid"
                    },
                    "enabled": {
                      "type": "boolean",
                      "description": "Whether the product is enabled",
                      "default": true
                    },
                    "family": {
                      "type": "string",
                      "description": "<a href='api-reference.html#Family'>Family</a> code from which the product inherits its attributes and attributes requirements.",
                      "default": "null only in the case of a non variant product",
                      "x-validation-rules": "It is equal to an existing family code. In the case of variant product, the given family should be the same as the product model family."
                    },
                    "categories": {
                      "type": "array",
                      "description": "Codes of the <a href='api-reference.html#Category'>categories</a> in which the product is classified",
                      "items": {
                        "type": "string"
                      },
                      "x-validation-rules": "Each string of the array is equal to an existing category code"
                    },
                    "groups": {
                      "type": "array",
                      "description": "Codes of the groups to which the product belong",
                      "items": {
                        "type": "string"
                      },
                      "x-validation-rules": "Each string of the array is equal to an existing group code"
                    },
                    "parent": {
                      "type": "string",
                      "description": "Code of the parent <a href='api-reference.html#Productmodel'>product model</a> when the product is a variant (only available since the 2.0). This parent can be modified since the 2.3.",
                      "default": "null",
                      "x-validation-rules": "It is equal to an existing product model code only if the product is variant otherwise it's equal to null",
                      "x-from-version": "2.0"
                    },
                    "values": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "scope": {
                              "type": "string",
                              "description": "<a href='api-reference.html#Channel'>Channel</a> code of the product value"
                            },
                            "locale": {
                              "type": "string",
                              "description": "<a href='api-reference.html#Locale'>Locale</a> code of the product value"
                            },
                            "data": {
                              "type": "object",
                              "properties": {},
                              "description": "Product value. See <a href='/concepts/products.html#the-data-format'>the `data` format</a> section for more details."
                            },
                            "linked_data": {
                              "type": "object",
                              "properties": {
                                "attribute": {
                                  "type": "string"
                                },
                                "code": {
                                  "type": "string"
                                },
                                "labels": {
                                  "type": "object",
                                  "properties": {}
                                }
                              },
                              "description": "Object containing labels of attribute options (only available since the 5.0 and when query parameter \"with_attribute_options\" is set to \"true\"). See <a href='/concepts/products.html#the-linked_data-format'>the `linked_data` format</a> section for more details.",
                              "x-read-only": true,
                              "x-from-version": "5.0"
                            }
                          }
                        }
                      },
                      "description": "Product attributes values, see <a href='/concepts/products.html#focus-on-the-product-values'>Product values</a> section for more details",
                      "x-validation-rules": "Validation rules detailed in Product values section"
                    },
                    "associations": {
                      "type": "object",
                      "properties": {
                        "associationTypeCode": {
                          "type": "object",
                          "properties": {
                            "groups": {
                              "type": "array",
                              "description": "Array of groups codes with which the product is in relation",
                              "items": {
                                "type": "string"
                              }
                            },
                            "products": {
                              "type": "array",
                              "description": "Array of product uuids with which the product is in relation",
                              "items": {
                                "type": "string"
                              }
                            },
                            "product_models": {
                              "type": "array",
                              "description": "Array of product model codes with which the product is in relation (only available since the v2.1)",
                              "items": {
                                "type": "string"
                              },
                              "x-from-version": "2.1"
                            }
                          }
                        }
                      },
                      "description": "Several associations related to groups, product models and/or other products, grouped by association types",
                      "x-validation-rules": "&bull; The `associationTypeCode` is the code of an existing association type. &#10;&bull; Each string in the array of the property `groups` is the code of an existing group. &#10;&bull; Each string in the array of the property `products` is the uuid of an existing product. &#10;&bull; Each string in the array of the property `product_models` is the code of an existing product model."
                    },
                    "quantified_associations": {
                      "type": "object",
                      "properties": {
                        "quantifiedAssociationTypeCode": {
                          "type": "object",
                          "properties": {
                            "products": {
                              "type": "array",
                              "description": "Array of objects containing product uuids and quantities with which the product is in relation",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "uuid": {
                                    "type": "string"
                                  },
                                  "quantity": {
                                    "type": "integer"
                                  }
                                }
                              }
                            },
                            "product_models": {
                              "type": "array",
                              "description": "Array of objects containing product model codes and quantities with which the product is in relation",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "code": {
                                    "type": "string"
                                  },
                                  "quantity": {
                                    "type": "integer"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "description": "Several quantified associations related to products and/or product models, grouped by quantified association types (only available since the 5.0)",
                      "x-validation-rules": "&bull; The `quantifiedAssociationTypeCode` is the code of an existing association type which provides quantity information. &#10;&bull; Each object in the array of the property `products` contains the uuid of an existing product and the quantity of it.",
                      "x-from-version": "5.0"
                    },
                    "created": {
                      "type": "string",
                      "description": "Date of creation",
                      "format": "dateTime",
                      "x-immutable": true,
                      "x-read-only": true
                    },
                    "updated": {
                      "type": "string",
                      "description": "Date of the last update",
                      "format": "dateTime",
                      "x-read-only": true
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "workflow_status": {
                          "type": "string",
                          "description": "Status of the product regarding the user permissions",
                          "enum": [
                            "read_only",
                            "draft_in_progress",
                            "proposal_waiting_for_approval",
                            "working_copy"
                          ]
                        }
                      },
                      "description": "More information around the product (only available since the v2.0 in the Enterprise Edition)",
                      "x-immutable": true,
                      "x-read-only": true,
                      "x-from-version": "2.0"
                    },
                    "quality_scores": {
                      "type": "object",
                      "properties": {},
                      "description": "Product quality scores for each channel/locale combination (only available since the 5.0 and when the \"with_quality_scores\" query parameter is set to \"true\")",
                      "x-immutable": true,
                      "x-read-only": true,
                      "x-from-version": "5.0"
                    },
                    "completenesses": {
                      "type": "array",
                      "description": "Product completenesses for each channel/locale combination (only available since the 7.0 version, and when the \"with_completenesses\" query parameter is set to \"true\")",
                      "items": {
                        "type": "object",
                        "properties": {
                          "scope": {
                            "type": "string"
                          },
                          "locale": {
                            "type": "string"
                          },
                          "data": {
                            "type": "integer"
                          }
                        }
                      },
                      "x-immutable": true,
                      "x-read-only": true,
                      "x-from-version": "7.0"
                    }
                  },
                  "example": {
                    "uuid": "25566245-55c3-42ce-86d9-8610ac459fa8",
                    "enabled": true,
                    "family": "tshirt",
                    "categories": [
                      "summer_collection"
                    ],
                    "groups": [],
                    "values": {
                      "sku": [
                        {
                          "data": "top"
                        }
                      ],
                      "name": [
                        {
                          "data": "Top",
                          "locale": "en_US"
                        },
                        {
                          "data": "Débardeur",
                          "locale": "fr_FR"
                        }
                      ],
                      "description": [
                        {
                          "data": "Summer top",
                          "locale": "en_US",
                          "scope": "ecommerce"
                        },
                        {
                          "data": "Top",
                          "locale": "en_US",
                          "scope": "tablet"
                        },
                        {
                          "data": "Débardeur pour l'été",
                          "locale": "fr_FR",
                          "scope": "ecommerce"
                        },
                        {
                          "data": "Débardeur",
                          "locale": "fr_FR",
                          "scope": "tablet"
                        }
                      ],
                      "price": [
                        {
                          "data": [
                            {
                              "amount": "15.5",
                              "currency": "EUR"
                            },
                            {
                              "amount": "15",
                              "currency": "USD"
                            }
                          ]
                        }
                      ],
                      "color": [
                        {
                          "data": "black",
                          "linked_data": {
                            "attribute": "color",
                            "code": "black",
                            "labels": {
                              "en_US": "Black",
                              "fr_FR": "Noir"
                            }
                          }
                        }
                      ],
                      "size": [
                        {
                          "data": "m",
                          "linked_data": {
                            "attribute": "size",
                            "code": "m",
                            "labels": {
                              "en_US": "M",
                              "fr_FR": "M"
                            }
                          }
                        }
                      ],
                      "collection": [
                        {
                          "data": [
                            "winter_2016"
                          ],
                          "linked_data": {
                            "winter_2016": {
                              "attribute": "collection",
                              "code": "winter_2016",
                              "labels": {
                                "en_US": "Winter 2016",
                                "fr_FR": "Hiver 2016"
                              }
                            }
                          }
                        }
                      ]
                    },
                    "created": "2016-06-23T18:24:44+02:00",
                    "updated": "2016-06-25T17:56:12+02:00",
                    "associations": {
                      "PACK": {
                        "products": [
                          "d055527c-0698-4967-8f16-8a5f23f4e5cf"
                        ],
                        "product_models": [],
                        "groups": []
                      }
                    },
                    "quantified_associations": {
                      "PRODUCT_SET": {
                        "products": [
                          {
                            "uuid": "fc24e6c3-933c-4a93-8a81-e5c703d134d5",
                            "quantity": 2
                          },
                          {
                            "uuid": "a9b69002-a0b1-4ead-85c2-f8dbf59c6cfc",
                            "quantity": 1
                          }
                        ],
                        "product_models": [
                          {
                            "identifier": "model-biker-jacket-leather",
                            "quantity": 2
                          }
                        ]
                      }
                    },
                    "quality_scores": [
                      {
                        "scope": "ecommerce",
                        "locale": "en_US",
                        "data": "A"
                      },
                      {
                        "scope": "ecommerce",
                        "locale": "fr_FR",
                        "data": "B"
                      },
                      {
                        "scope": "tablet",
                        "locale": "en_US",
                        "data": "D"
                      },
                      {
                        "scope": "tablet",
                        "locale": "fr_FR",
                        "data": "E"
                      }
                    ],
                    "completenesses": [
                      {
                        "scope": "ecommerce",
                        "locale": "en_US",
                        "data": 10
                      },
                      {
                        "scope": "ecommerce",
                        "locale": "fr_FR",
                        "data": 20
                      },
                      {
                        "scope": "tablet",
                        "locale": "en_US",
                        "data": 30
                      },
                      {
                        "scope": "tablet",
                        "locale": "fr_FR",
                        "data": 40
                      }
                    ]
                  }
                }
              }
            },
            "required": false
          },
          "responses": {
            "201": {
              "description": "Created",
              "headers": {
                "Location": {
                  "description": "URI of the created resource",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {},
              "x-details": "Means that the creation was successful"
            },
            "400": {
              "description": "Bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 400
                },
                "message": {
                  "example": "Invalid JSON message received"
                }
              },
              "x-details": "Can be caused by a malformed JSON request"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "415": {
              "description": "Unsupported Media type",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 415
                },
                "message": {
                  "example": "`xxx’ in `Content-Type’ header is not valid.  Only `application/json’ is allowed."
                }
              },
              "x-details": "The `Content-Type` header has to be `application/json`"
            },
            "422": {
              "description": "Unprocessable entity",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 422
                },
                "message": {
                  "example": "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
                },
                "_links": {
                  "example": {
                    "documentation": {
                      "href": "http://api.akeneo.com/api-reference.html"
                    }
                  }
                }
              },
              "x-details": "The validation of the entity given in the body of the request failed"
            }
          },
          "x-versions": [
            "7.0",
            "SaaS"
          ],
          "x-codegen-request-body-name": "body"
        },
        "patch": {
          "tags": [
            "Product [uuid]"
          ],
          "summary": "Update/create several products",
          "description": "This endpoint allows you to update and/or create several products at once. Learn more about <a href=\"/documentation/update.html#update-behavior\">Update behavior</a>. Note that if no product exists for the given uuid, it creates it. In the Enterprise Edition, permissions based on your user groups are applied to the products you try to update. It may result in the creation of drafts if you only have edit rights through the product's categories.",
          "operationId": "patch_products_uuid",
          "requestBody": {
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "uuid"
                  ],
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "description": "Product uuid"
                    },
                    "enabled": {
                      "type": "boolean",
                      "description": "Whether the product is enabled",
                      "default": true
                    },
                    "family": {
                      "type": "string",
                      "description": "<a href='api-reference.html#Family'>Family</a> code from which the product inherits its attributes and attributes requirements.",
                      "default": "null only in the case of a non variant product",
                      "x-validation-rules": "It is equal to an existing family code. In the case of variant product, the given family should be the same as the product model family."
                    },
                    "categories": {
                      "type": "array",
                      "description": "Codes of the <a href='api-reference.html#Category'>categories</a> in which the product is classified",
                      "items": {
                        "type": "string"
                      },
                      "x-validation-rules": "Each string of the array is equal to an existing category code"
                    },
                    "groups": {
                      "type": "array",
                      "description": "Codes of the groups to which the product belong",
                      "items": {
                        "type": "string"
                      },
                      "x-validation-rules": "Each string of the array is equal to an existing group code"
                    },
                    "parent": {
                      "type": "string",
                      "description": "Code of the parent <a href='api-reference.html#Productmodel'>product model</a> when the product is a variant (only available since the 2.0). This parent can be modified since the 2.3.",
                      "default": "null",
                      "x-validation-rules": "It is equal to an existing product model code only if the product is variant otherwise it's equal to null",
                      "x-from-version": "2.0"
                    },
                    "values": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "scope": {
                              "type": "string",
                              "description": "<a href='api-reference.html#Channel'>Channel</a> code of the product value"
                            },
                            "locale": {
                              "type": "string",
                              "description": "<a href='api-reference.html#Locale'>Locale</a> code of the product value"
                            },
                            "data": {
                              "type": "object",
                              "properties": {},
                              "description": "Product value. See <a href='/concepts/products.html#the-data-format'>the `data` format</a> section for more details."
                            },
                            "linked_data": {
                              "type": "object",
                              "properties": {
                                "attribute": {
                                  "type": "string"
                                },
                                "code": {
                                  "type": "string"
                                },
                                "labels": {
                                  "type": "object",
                                  "properties": {}
                                }
                              },
                              "description": "Object containing labels of attribute options (only available since the 5.0 and when query parameter \"with_attribute_options\" is set to \"true\"). See <a href='/concepts/products.html#the-linked_data-format'>the `linked_data` format</a> section for more details.",
                              "x-read-only": true,
                              "x-from-version": "5.0"
                            }
                          }
                        }
                      },
                      "description": "Product attributes values, see <a href='/concepts/products.html#focus-on-the-product-values'>Product values</a> section for more details",
                      "x-validation-rules": "Validation rules detailed in Product values section"
                    },
                    "associations": {
                      "type": "object",
                      "properties": {
                        "associationTypeCode": {
                          "type": "object",
                          "properties": {
                            "groups": {
                              "type": "array",
                              "description": "Array of groups codes with which the product is in relation",
                              "items": {
                                "type": "string"
                              }
                            },
                            "products": {
                              "type": "array",
                              "description": "Array of product uuids with which the product is in relation",
                              "items": {
                                "type": "string"
                              }
                            },
                            "product_models": {
                              "type": "array",
                              "description": "Array of product model codes with which the product is in relation (only available since the v2.1)",
                              "items": {
                                "type": "string"
                              },
                              "x-from-version": "2.1"
                            }
                          }
                        }
                      },
                      "description": "Several associations related to groups, product models and/or other products, grouped by association types",
                      "x-validation-rules": "&bull; The `associationTypeCode` is the code of an existing association type. &#10;&bull; Each string in the array of the property `groups` is the code of an existing group. &#10;&bull; Each string in the array of the property `products` is the uuid of an existing product. &#10;&bull; Each string in the array of the property `product_models` is the code of an existing product model."
                    },
                    "quantified_associations": {
                      "type": "object",
                      "properties": {
                        "quantifiedAssociationTypeCode": {
                          "type": "object",
                          "properties": {
                            "products": {
                              "type": "array",
                              "description": "Array of objects containing product uuids and quantities with which the product is in relation",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "uuid": {
                                    "type": "string"
                                  },
                                  "quantity": {
                                    "type": "integer"
                                  }
                                }
                              }
                            },
                            "product_models": {
                              "type": "array",
                              "description": "Array of objects containing product model codes and quantities with which the product is in relation",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "code": {
                                    "type": "string"
                                  },
                                  "quantity": {
                                    "type": "integer"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "description": "Several quantified associations related to products and/or product models, grouped by quantified association types (only available since the 5.0)",
                      "x-validation-rules": "&bull; The `quantifiedAssociationTypeCode` is the code of an existing association type which provides quantity information. &#10;&bull; Each object in the array of the property `products` contains the uuid of an existing product and the quantity of it.",
                      "x-from-version": "5.0"
                    },
                    "created": {
                      "type": "string",
                      "description": "Date of creation",
                      "format": "dateTime",
                      "x-immutable": true,
                      "x-read-only": true
                    },
                    "updated": {
                      "type": "string",
                      "description": "Date of the last update",
                      "format": "dateTime",
                      "x-read-only": true
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "workflow_status": {
                          "type": "string",
                          "description": "Status of the product regarding the user permissions",
                          "enum": [
                            "read_only",
                            "draft_in_progress",
                            "proposal_waiting_for_approval",
                            "working_copy"
                          ]
                        }
                      },
                      "description": "More information around the product (only available since the v2.0 in the Enterprise Edition)",
                      "x-immutable": true,
                      "x-read-only": true,
                      "x-from-version": "2.0"
                    },
                    "quality_scores": {
                      "type": "object",
                      "properties": {},
                      "description": "Product quality scores for each channel/locale combination (only available since the 5.0 and when the \"with_quality_scores\" query parameter is set to \"true\")",
                      "x-immutable": true,
                      "x-read-only": true,
                      "x-from-version": "5.0"
                    },
                    "completenesses": {
                      "type": "array",
                      "description": "Product completenesses for each channel/locale combination (only available since the 7.0 version, and when the \"with_completenesses\" query parameter is set to \"true\")",
                      "items": {
                        "type": "object",
                        "properties": {
                          "scope": {
                            "type": "string"
                          },
                          "locale": {
                            "type": "string"
                          },
                          "data": {
                            "type": "integer"
                          }
                        }
                      },
                      "x-immutable": true,
                      "x-read-only": true,
                      "x-from-version": "7.0"
                    }
                  },
                  "example": {
                    "uuid": "25566245-55c3-42ce-86d9-8610ac459fa8",
                    "enabled": true,
                    "family": "tshirt",
                    "categories": [
                      "summer_collection"
                    ],
                    "groups": [],
                    "values": {
                      "sku": [
                        {
                          "data": "top"
                        }
                      ],
                      "name": [
                        {
                          "data": "Top",
                          "locale": "en_US"
                        },
                        {
                          "data": "Débardeur",
                          "locale": "fr_FR"
                        }
                      ],
                      "description": [
                        {
                          "data": "Summer top",
                          "locale": "en_US",
                          "scope": "ecommerce"
                        },
                        {
                          "data": "Top",
                          "locale": "en_US",
                          "scope": "tablet"
                        },
                        {
                          "data": "Débardeur pour l'été",
                          "locale": "fr_FR",
                          "scope": "ecommerce"
                        },
                        {
                          "data": "Débardeur",
                          "locale": "fr_FR",
                          "scope": "tablet"
                        }
                      ],
                      "price": [
                        {
                          "data": [
                            {
                              "amount": "15.5",
                              "currency": "EUR"
                            },
                            {
                              "amount": "15",
                              "currency": "USD"
                            }
                          ]
                        }
                      ],
                      "color": [
                        {
                          "data": "black",
                          "linked_data": {
                            "attribute": "color",
                            "code": "black",
                            "labels": {
                              "en_US": "Black",
                              "fr_FR": "Noir"
                            }
                          }
                        }
                      ],
                      "size": [
                        {
                          "data": "m",
                          "linked_data": {
                            "attribute": "size",
                            "code": "m",
                            "labels": {
                              "en_US": "M",
                              "fr_FR": "M"
                            }
                          }
                        }
                      ],
                      "collection": [
                        {
                          "data": [
                            "winter_2016"
                          ],
                          "linked_data": {
                            "winter_2016": {
                              "attribute": "collection",
                              "code": "winter_2016",
                              "labels": {
                                "en_US": "Winter 2016",
                                "fr_FR": "Hiver 2016"
                              }
                            }
                          }
                        }
                      ]
                    },
                    "created": "2016-06-23T18:24:44+02:00",
                    "updated": "2016-06-25T17:56:12+02:00",
                    "associations": {
                      "PACK": {
                        "products": [
                          "d055527c-0698-4967-8f16-8a5f23f4e5cf"
                        ],
                        "product_models": [],
                        "groups": []
                      }
                    },
                    "quantified_associations": {
                      "PRODUCT_SET": {
                        "products": [
                          {
                            "uuid": "fc24e6c3-933c-4a93-8a81-e5c703d134d5",
                            "quantity": 2
                          },
                          {
                            "uuid": "a9b69002-a0b1-4ead-85c2-f8dbf59c6cfc",
                            "quantity": 1
                          }
                        ],
                        "product_models": [
                          {
                            "identifier": "model-biker-jacket-leather",
                            "quantity": 2
                          }
                        ]
                      }
                    },
                    "quality_scores": [
                      {
                        "scope": "ecommerce",
                        "locale": "en_US",
                        "data": "A"
                      },
                      {
                        "scope": "ecommerce",
                        "locale": "fr_FR",
                        "data": "B"
                      },
                      {
                        "scope": "tablet",
                        "locale": "en_US",
                        "data": "D"
                      },
                      {
                        "scope": "tablet",
                        "locale": "fr_FR",
                        "data": "E"
                      }
                    ],
                    "completenesses": [
                      {
                        "scope": "ecommerce",
                        "locale": "en_US",
                        "data": 10
                      },
                      {
                        "scope": "ecommerce",
                        "locale": "fr_FR",
                        "data": 20
                      },
                      {
                        "scope": "tablet",
                        "locale": "en_US",
                        "data": 30
                      },
                      {
                        "scope": "tablet",
                        "locale": "fr_FR",
                        "data": 40
                      }
                    ]
                  },
                  "x-examples": {
                    "x-example-1": "{\"uuid\":\"fc24e6c3-933c-4a93-8a81-e5c703d134d5\",\"values\":{\"description\":[{\"scope\":\"ecommerce\",\"locale\":\"en_US\",\"data\":\"My amazing cap\"}]}}",
                    "x-example-2": "{\"uuid\":\"573dd613-0c7f-4143-83d5-63cc5e535966\",\"values\":{\"sku\":[{\"data\":\"updated_sku\",\"locale\":null,\"scope\":null}]}, \"group\":[\"promotion\"]}",
                    "x-example-3": "{\"uuid\":\"25566245-55c3-42ce-86d9-8610ac459fa8\",\"values\":{\"sku\":[{\"data\":\"new_product\",\"locale\":null,\"scope\":null}]},\"family\":\"clothes\"}"
                  }
                }
              }
            },
            "required": false
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "line": {
                        "type": "integer",
                        "description": "Line number"
                      },
                      "uuid": {
                        "type": "string",
                        "description": "Product uuid"
                      },
                      "status_code": {
                        "type": "integer",
                        "description": "HTTP status code, see <a href=\"/documentation/responses.html#client-errors\">Client errors</a> to understand the meaning of each code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "x-example-1": {
                  "example": "{\"line\":1,\"uuid\":\"fc24e6c3-933c-4a93-8a81-e5c703d134d5\",\"status_code\":204}"
                },
                "x-example-2": {
                  "example": "{\"line\":2,\"uuid\":\"573dd613-0c7f-4143-83d5-63cc5e535966\",\"status_code\":422,\"message\":\"Property \"group\" does not exist.\"}"
                },
                "x-example-3": {
                  "example": "{\"line\":3,\"uuid\":\"25566245-55c3-42ce-86d9-8610ac459fa8\",\"status_code\":201}"
                }
              },
              "x-details": "Returns a plain text response whose lines are JSON containing the status of each update or creation",
              "x-no-entity": true
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "413": {
              "description": "Request Entity Too Large",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 413
                },
                "message": {
                  "example": "Too many resources to process, 100 is the maximum allowed."
                }
              },
              "x-details": "There are too many resources to process (max 100) or the line of JSON is too long (max 1 000 000 characters)"
            },
            "415": {
              "description": "Unsupported Media type",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 415
                },
                "message": {
                  "example": "`xxx’ in `Content-Type’ header is not valid.  Only `application/vnd.akeneo.collection+json’ is allowed."
                }
              },
              "x-details": "The `Content-Type` header has to be `application/vnd.akeneo.collection+json`"
            },
            "422": {
              "description": "Unprocessable entity",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 422
                },
                "message": {
                  "example": "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
                },
                "_links": {
                  "example": {
                    "documentation": {
                      "href": "http://api.akeneo.com/api-reference.html"
                    }
                  }
                }
              },
              "x-details": "The validation of the entity given in the body of the request failed"
            }
          },
          "x-versions": [
            "7.0",
            "SaaS"
          ],
          "x-body-by-line": "Contains several lines, each line is a product in JSON standard format",
          "x-codegen-request-body-name": "body"
        }
      },
      "/api/rest/v1/products-uuid/{uuid}": {
        "get": {
          "tags": [
            "Product [uuid]"
          ],
          "summary": "Get a product",
          "description": "This endpoint allows you to get the information about a given product. In the Entreprise Edition, permissions based on your user groups are applied to the product you request.",
          "operationId": "get_products_uuid__uuid_",
          "parameters": [
            {
              "name": "uuid",
              "in": "path",
              "description": "Uuid of the resource",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "with_attribute_options",
              "in": "query",
              "description": "Return labels of attribute options in the response. (Only available since the 5.0 version)",
              "schema": {
                "type": "boolean",
                "default": false,
                "x-from-version": "5.0"
              },
              "x-from-version": "5.0"
            },
            {
              "name": "with_quality_scores",
              "in": "query",
              "description": "Return product quality scores in the response. (Only available since the 5.0 version)",
              "schema": {
                "type": "boolean",
                "default": false,
                "x-from-version": "5.0"
              },
              "x-from-version": "5.0"
            },
            {
              "name": "with_completenesses",
              "in": "query",
              "description": "Return product completenesses in the response. (Only available since the 6.0 version)",
              "schema": {
                "type": "boolean",
                "default": false,
                "x-from-version": "6.0"
              },
              "x-from-version": "6.0"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "uuid": {
                        "type": "string",
                        "description": "Product uuid"
                      },
                      "enabled": {
                        "type": "boolean",
                        "description": "Whether the product is enabled",
                        "default": true
                      },
                      "family": {
                        "type": "string",
                        "description": "<a href='api-reference.html#Family'>Family</a> code from which the product inherits its attributes and attributes requirements.",
                        "default": "null only in the case of a non variant product",
                        "x-validation-rules": "It is equal to an existing family code. In the case of variant product, the given family should be the same as the product model family."
                      },
                      "categories": {
                        "type": "array",
                        "description": "Codes of the <a href='api-reference.html#Category'>categories</a> in which the product is classified",
                        "items": {
                          "type": "string"
                        },
                        "x-validation-rules": "Each string of the array is equal to an existing category code"
                      },
                      "groups": {
                        "type": "array",
                        "description": "Codes of the groups to which the product belong",
                        "items": {
                          "type": "string"
                        },
                        "x-validation-rules": "Each string of the array is equal to an existing group code"
                      },
                      "parent": {
                        "type": "string",
                        "description": "Code of the parent <a href='api-reference.html#Productmodel'>product model</a> when the product is a variant (only available since the 2.0). This parent can be modified since the 2.3.",
                        "default": "null",
                        "x-validation-rules": "It is equal to an existing product model code only if the product is variant otherwise it's equal to null",
                        "x-from-version": "2.0"
                      },
                      "values": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "scope": {
                                "type": "string",
                                "description": "<a href='api-reference.html#Channel'>Channel</a> code of the product value"
                              },
                              "locale": {
                                "type": "string",
                                "description": "<a href='api-reference.html#Locale'>Locale</a> code of the product value"
                              },
                              "data": {
                                "type": "object",
                                "properties": {},
                                "description": "Product value. See <a href='/concepts/products.html#the-data-format'>the `data` format</a> section for more details."
                              },
                              "linked_data": {
                                "type": "object",
                                "properties": {
                                  "attribute": {
                                    "type": "string"
                                  },
                                  "code": {
                                    "type": "string"
                                  },
                                  "labels": {
                                    "type": "object",
                                    "properties": {}
                                  }
                                },
                                "description": "Object containing labels of attribute options (only available since the 5.0 and when query parameter \"with_attribute_options\" is set to \"true\"). See <a href='/concepts/products.html#the-linked_data-format'>the `linked_data` format</a> section for more details.",
                                "x-read-only": true,
                                "x-from-version": "5.0"
                              }
                            }
                          }
                        },
                        "description": "Product attributes values, see <a href='/concepts/products.html#focus-on-the-product-values'>Product values</a> section for more details",
                        "x-validation-rules": "Validation rules detailed in Product values section"
                      },
                      "associations": {
                        "type": "object",
                        "properties": {
                          "associationTypeCode": {
                            "type": "object",
                            "properties": {
                              "groups": {
                                "type": "array",
                                "description": "Array of groups codes with which the product is in relation",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "products": {
                                "type": "array",
                                "description": "Array of product uuids with which the product is in relation",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "product_models": {
                                "type": "array",
                                "description": "Array of product model codes with which the product is in relation (only available since the v2.1)",
                                "items": {
                                  "type": "string"
                                },
                                "x-from-version": "2.1"
                              }
                            }
                          }
                        },
                        "description": "Several associations related to groups, product models and/or other products, grouped by association types",
                        "x-validation-rules": "&bull; The `associationTypeCode` is the code of an existing association type. &#10;&bull; Each string in the array of the property `groups` is the code of an existing group. &#10;&bull; Each string in the array of the property `products` is the uuid of an existing product. &#10;&bull; Each string in the array of the property `product_models` is the code of an existing product model."
                      },
                      "quantified_associations": {
                        "type": "object",
                        "properties": {
                          "quantifiedAssociationTypeCode": {
                            "type": "object",
                            "properties": {
                              "products": {
                                "type": "array",
                                "description": "Array of objects containing product uuids and quantities with which the product is in relation",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "uuid": {
                                      "type": "string"
                                    },
                                    "quantity": {
                                      "type": "integer"
                                    }
                                  }
                                }
                              },
                              "product_models": {
                                "type": "array",
                                "description": "Array of objects containing product model codes and quantities with which the product is in relation",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "string"
                                    },
                                    "quantity": {
                                      "type": "integer"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "description": "Several quantified associations related to products and/or product models, grouped by quantified association types (only available since the 5.0)",
                        "x-validation-rules": "&bull; The `quantifiedAssociationTypeCode` is the code of an existing association type which provides quantity information. &#10;&bull; Each object in the array of the property `products` contains the uuid of an existing product and the quantity of it.",
                        "x-from-version": "5.0"
                      },
                      "created": {
                        "type": "string",
                        "description": "Date of creation",
                        "format": "dateTime",
                        "x-immutable": true,
                        "x-read-only": true
                      },
                      "updated": {
                        "type": "string",
                        "description": "Date of the last update",
                        "format": "dateTime",
                        "x-read-only": true
                      },
                      "metadata": {
                        "type": "object",
                        "properties": {
                          "workflow_status": {
                            "type": "string",
                            "description": "Status of the product regarding the user permissions",
                            "enum": [
                              "read_only",
                              "draft_in_progress",
                              "proposal_waiting_for_approval",
                              "working_copy"
                            ]
                          }
                        },
                        "description": "More information around the product (only available since the v2.0 in the Enterprise Edition)",
                        "x-immutable": true,
                        "x-read-only": true,
                        "x-from-version": "2.0"
                      },
                      "quality_scores": {
                        "type": "object",
                        "properties": {},
                        "description": "Product quality scores for each channel/locale combination (only available since the 5.0 and when the \"with_quality_scores\" query parameter is set to \"true\")",
                        "x-immutable": true,
                        "x-read-only": true,
                        "x-from-version": "5.0"
                      },
                      "completenesses": {
                        "type": "array",
                        "description": "Product completenesses for each channel/locale combination (only available since the 7.0 version, and when the \"with_completenesses\" query parameter is set to \"true\")",
                        "items": {
                          "type": "object",
                          "properties": {
                            "scope": {
                              "type": "string"
                            },
                            "locale": {
                              "type": "string"
                            },
                            "data": {
                              "type": "integer"
                            }
                          }
                        },
                        "x-immutable": true,
                        "x-read-only": true,
                        "x-from-version": "7.0"
                      }
                    },
                    "example": {
                      "uuid": "25566245-55c3-42ce-86d9-8610ac459fa8",
                      "enabled": true,
                      "family": "tshirt",
                      "categories": [
                        "summer_collection"
                      ],
                      "groups": [],
                      "values": {
                        "sku": [
                          {
                            "data": "top"
                          }
                        ],
                        "name": [
                          {
                            "data": "Top",
                            "locale": "en_US"
                          },
                          {
                            "data": "Débardeur",
                            "locale": "fr_FR"
                          }
                        ],
                        "description": [
                          {
                            "data": "Summer top",
                            "locale": "en_US",
                            "scope": "ecommerce"
                          },
                          {
                            "data": "Top",
                            "locale": "en_US",
                            "scope": "tablet"
                          },
                          {
                            "data": "Débardeur pour l'été",
                            "locale": "fr_FR",
                            "scope": "ecommerce"
                          },
                          {
                            "data": "Débardeur",
                            "locale": "fr_FR",
                            "scope": "tablet"
                          }
                        ],
                        "price": [
                          {
                            "data": [
                              {
                                "amount": "15.5",
                                "currency": "EUR"
                              },
                              {
                                "amount": "15",
                                "currency": "USD"
                              }
                            ]
                          }
                        ],
                        "color": [
                          {
                            "data": "black",
                            "linked_data": {
                              "attribute": "color",
                              "code": "black",
                              "labels": {
                                "en_US": "Black",
                                "fr_FR": "Noir"
                              }
                            }
                          }
                        ],
                        "size": [
                          {
                            "data": "m",
                            "linked_data": {
                              "attribute": "size",
                              "code": "m",
                              "labels": {
                                "en_US": "M",
                                "fr_FR": "M"
                              }
                            }
                          }
                        ],
                        "collection": [
                          {
                            "data": [
                              "winter_2016"
                            ],
                            "linked_data": {
                              "winter_2016": {
                                "attribute": "collection",
                                "code": "winter_2016",
                                "labels": {
                                  "en_US": "Winter 2016",
                                  "fr_FR": "Hiver 2016"
                                }
                              }
                            }
                          }
                        ]
                      },
                      "created": "2016-06-23T18:24:44+02:00",
                      "updated": "2016-06-25T17:56:12+02:00",
                      "associations": {
                        "PACK": {
                          "products": [
                            "d055527c-0698-4967-8f16-8a5f23f4e5cf"
                          ],
                          "product_models": [],
                          "groups": []
                        }
                      },
                      "quantified_associations": {
                        "PRODUCT_SET": {
                          "products": [
                            {
                              "uuid": "fc24e6c3-933c-4a93-8a81-e5c703d134d5",
                              "quantity": 2
                            },
                            {
                              "uuid": "a9b69002-a0b1-4ead-85c2-f8dbf59c6cfc",
                              "quantity": 1
                            }
                          ],
                          "product_models": [
                            {
                              "identifier": "model-biker-jacket-leather",
                              "quantity": 2
                            }
                          ]
                        }
                      },
                      "quality_scores": [
                        {
                          "scope": "ecommerce",
                          "locale": "en_US",
                          "data": "A"
                        },
                        {
                          "scope": "ecommerce",
                          "locale": "fr_FR",
                          "data": "B"
                        },
                        {
                          "scope": "tablet",
                          "locale": "en_US",
                          "data": "D"
                        },
                        {
                          "scope": "tablet",
                          "locale": "fr_FR",
                          "data": "E"
                        }
                      ],
                      "completenesses": [
                        {
                          "scope": "ecommerce",
                          "locale": "en_US",
                          "data": 10
                        },
                        {
                          "scope": "ecommerce",
                          "locale": "fr_FR",
                          "data": 20
                        },
                        {
                          "scope": "tablet",
                          "locale": "en_US",
                          "data": 30
                        },
                        {
                          "scope": "tablet",
                          "locale": "fr_FR",
                          "data": 40
                        }
                      ]
                    }
                  }
                }
              },
              "x-details": "Returns the content of the product in JSON standard format"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "404": {
              "description": "Resource not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 404
                },
                "message": {
                  "example": "Resource `my_resource_code` does not exist."
                }
              },
              "x-details": "The resource code given in the URI does not correspond to any existing PIM resource"
            },
            "406": {
              "description": "Not Acceptable",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 406
                },
                "message": {
                  "example": "`xxx’ in `Accept` header is not valid. Only `application/json` is allowed."
                }
              },
              "x-details": "The `Accept` header is not `application/json` but it should"
            }
          },
          "x-versions": [
            "7.0",
            "SaaS"
          ]
        },
        "delete": {
          "tags": [
            "Product [uuid]"
          ],
          "summary": "Delete a product",
          "description": "This endpoint allows you to delete a given product. In the Enterprise Edition, permissions based on your user groups are applied to the product you try to delete.",
          "operationId": "delete_products_uuid__uuid_",
          "parameters": [
            {
              "name": "uuid",
              "in": "path",
              "description": "Uuid of the resource",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No content to return",
              "content": {},
              "x-details": "Means that the deletion was successful"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "404": {
              "description": "Resource not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 404
                },
                "message": {
                  "example": "Resource `my_resource_code` does not exist."
                }
              },
              "x-details": "The resource code given in the URI does not correspond to any existing PIM resource"
            }
          },
          "x-versions": [
            "7.0",
            "SaaS"
          ]
        },
        "patch": {
          "tags": [
            "Product [uuid]"
          ],
          "summary": "Update/create a product",
          "description": "This endpoint allows you to update a given product. Learn more about <a href=\"/documentation/update.html#update-behavior\">Update behavior</a>. Note that if no product exists for the given uuid, it creates it. In the Entreprise Edition, permissions based on your user groups are applied to the product you try to update. It may result in the creation of a draft if you only have edit rights through the product's categories.",
          "operationId": "patch_products_uuid__uuid_",
          "parameters": [
            {
              "name": "uuid",
              "in": "path",
              "description": "Uuid of the resource",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "description": "Product uuid"
                    },
                    "enabled": {
                      "type": "boolean",
                      "description": "Whether the product is enabled",
                      "default": true
                    },
                    "family": {
                      "type": "string",
                      "description": "<a href='api-reference.html#Family'>Family</a> code from which the product inherits its attributes and attributes requirements.",
                      "default": "null only in the case of a non variant product",
                      "x-validation-rules": "It is equal to an existing family code. In the case of variant product, the given family should be the same as the product model family."
                    },
                    "categories": {
                      "type": "array",
                      "description": "Codes of the <a href='api-reference.html#Category'>categories</a> in which the product is classified",
                      "items": {
                        "type": "string"
                      },
                      "x-validation-rules": "Each string of the array is equal to an existing category code"
                    },
                    "groups": {
                      "type": "array",
                      "description": "Codes of the groups to which the product belong",
                      "items": {
                        "type": "string"
                      },
                      "x-validation-rules": "Each string of the array is equal to an existing group code"
                    },
                    "parent": {
                      "type": "string",
                      "description": "Code of the parent <a href='api-reference.html#Productmodel'>product model</a> when the product is a variant (only available since the 2.0). This parent can be modified since the 2.3.",
                      "default": "null",
                      "x-validation-rules": "It is equal to an existing product model code only if the product is variant otherwise it's equal to null",
                      "x-from-version": "2.0"
                    },
                    "values": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "scope": {
                              "type": "string",
                              "description": "<a href='api-reference.html#Channel'>Channel</a> code of the product value"
                            },
                            "locale": {
                              "type": "string",
                              "description": "<a href='api-reference.html#Locale'>Locale</a> code of the product value"
                            },
                            "data": {
                              "type": "object",
                              "properties": {},
                              "description": "Product value. See <a href='/concepts/products.html#the-data-format'>the `data` format</a> section for more details."
                            },
                            "linked_data": {
                              "type": "object",
                              "properties": {
                                "attribute": {
                                  "type": "string"
                                },
                                "code": {
                                  "type": "string"
                                },
                                "labels": {
                                  "type": "object",
                                  "properties": {}
                                }
                              },
                              "description": "Object containing labels of attribute options (only available since the 5.0 and when query parameter \"with_attribute_options\" is set to \"true\"). See <a href='/concepts/products.html#the-linked_data-format'>the `linked_data` format</a> section for more details.",
                              "x-read-only": true,
                              "x-from-version": "5.0"
                            }
                          }
                        }
                      },
                      "description": "Product attributes values, see <a href='/concepts/products.html#focus-on-the-product-values'>Product values</a> section for more details",
                      "x-validation-rules": "Validation rules detailed in Product values section"
                    },
                    "associations": {
                      "type": "object",
                      "properties": {
                        "associationTypeCode": {
                          "type": "object",
                          "properties": {
                            "groups": {
                              "type": "array",
                              "description": "Array of groups codes with which the product is in relation",
                              "items": {
                                "type": "string"
                              }
                            },
                            "products": {
                              "type": "array",
                              "description": "Array of product uuids with which the product is in relation",
                              "items": {
                                "type": "string"
                              }
                            },
                            "product_models": {
                              "type": "array",
                              "description": "Array of product model codes with which the product is in relation (only available since the v2.1)",
                              "items": {
                                "type": "string"
                              },
                              "x-from-version": "2.1"
                            }
                          }
                        }
                      },
                      "description": "Several associations related to groups, product models and/or other products, grouped by association types",
                      "x-validation-rules": "&bull; The `associationTypeCode` is the code of an existing association type. &#10;&bull; Each string in the array of the property `groups` is the code of an existing group. &#10;&bull; Each string in the array of the property `products` is the uuid of an existing product. &#10;&bull; Each string in the array of the property `product_models` is the code of an existing product model."
                    },
                    "quantified_associations": {
                      "type": "object",
                      "properties": {
                        "quantifiedAssociationTypeCode": {
                          "type": "object",
                          "properties": {
                            "products": {
                              "type": "array",
                              "description": "Array of objects containing product uuids and quantities with which the product is in relation",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "uuid": {
                                    "type": "string"
                                  },
                                  "quantity": {
                                    "type": "integer"
                                  }
                                }
                              }
                            },
                            "product_models": {
                              "type": "array",
                              "description": "Array of objects containing product model codes and quantities with which the product is in relation",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "code": {
                                    "type": "string"
                                  },
                                  "quantity": {
                                    "type": "integer"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "description": "Several quantified associations related to products and/or product models, grouped by quantified association types (only available since the 5.0)",
                      "x-validation-rules": "&bull; The `quantifiedAssociationTypeCode` is the code of an existing association type which provides quantity information. &#10;&bull; Each object in the array of the property `products` contains the uuid of an existing product and the quantity of it.",
                      "x-from-version": "5.0"
                    },
                    "created": {
                      "type": "string",
                      "description": "Date of creation",
                      "format": "dateTime",
                      "x-immutable": true,
                      "x-read-only": true
                    },
                    "updated": {
                      "type": "string",
                      "description": "Date of the last update",
                      "format": "dateTime",
                      "x-read-only": true
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "workflow_status": {
                          "type": "string",
                          "description": "Status of the product regarding the user permissions",
                          "enum": [
                            "read_only",
                            "draft_in_progress",
                            "proposal_waiting_for_approval",
                            "working_copy"
                          ]
                        }
                      },
                      "description": "More information around the product (only available since the v2.0 in the Enterprise Edition)",
                      "x-immutable": true,
                      "x-read-only": true,
                      "x-from-version": "2.0"
                    },
                    "quality_scores": {
                      "type": "object",
                      "properties": {},
                      "description": "Product quality scores for each channel/locale combination (only available since the 5.0 and when the \"with_quality_scores\" query parameter is set to \"true\")",
                      "x-immutable": true,
                      "x-read-only": true,
                      "x-from-version": "5.0"
                    },
                    "completenesses": {
                      "type": "array",
                      "description": "Product completenesses for each channel/locale combination (only available since the 7.0 version, and when the \"with_completenesses\" query parameter is set to \"true\")",
                      "items": {
                        "type": "object",
                        "properties": {
                          "scope": {
                            "type": "string"
                          },
                          "locale": {
                            "type": "string"
                          },
                          "data": {
                            "type": "integer"
                          }
                        }
                      },
                      "x-immutable": true,
                      "x-read-only": true,
                      "x-from-version": "7.0"
                    }
                  },
                  "example": {
                    "uuid": "25566245-55c3-42ce-86d9-8610ac459fa8",
                    "enabled": true,
                    "family": "tshirt",
                    "categories": [
                      "summer_collection"
                    ],
                    "groups": [],
                    "values": {
                      "sku": [
                        {
                          "data": "top"
                        }
                      ],
                      "name": [
                        {
                          "data": "Top",
                          "locale": "en_US"
                        },
                        {
                          "data": "Débardeur",
                          "locale": "fr_FR"
                        }
                      ],
                      "description": [
                        {
                          "data": "Summer top",
                          "locale": "en_US",
                          "scope": "ecommerce"
                        },
                        {
                          "data": "Top",
                          "locale": "en_US",
                          "scope": "tablet"
                        },
                        {
                          "data": "Débardeur pour l'été",
                          "locale": "fr_FR",
                          "scope": "ecommerce"
                        },
                        {
                          "data": "Débardeur",
                          "locale": "fr_FR",
                          "scope": "tablet"
                        }
                      ],
                      "price": [
                        {
                          "data": [
                            {
                              "amount": "15.5",
                              "currency": "EUR"
                            },
                            {
                              "amount": "15",
                              "currency": "USD"
                            }
                          ]
                        }
                      ],
                      "color": [
                        {
                          "data": "black",
                          "linked_data": {
                            "attribute": "color",
                            "code": "black",
                            "labels": {
                              "en_US": "Black",
                              "fr_FR": "Noir"
                            }
                          }
                        }
                      ],
                      "size": [
                        {
                          "data": "m",
                          "linked_data": {
                            "attribute": "size",
                            "code": "m",
                            "labels": {
                              "en_US": "M",
                              "fr_FR": "M"
                            }
                          }
                        }
                      ],
                      "collection": [
                        {
                          "data": [
                            "winter_2016"
                          ],
                          "linked_data": {
                            "winter_2016": {
                              "attribute": "collection",
                              "code": "winter_2016",
                              "labels": {
                                "en_US": "Winter 2016",
                                "fr_FR": "Hiver 2016"
                              }
                            }
                          }
                        }
                      ]
                    },
                    "created": "2016-06-23T18:24:44+02:00",
                    "updated": "2016-06-25T17:56:12+02:00",
                    "associations": {
                      "PACK": {
                        "products": [
                          "d055527c-0698-4967-8f16-8a5f23f4e5cf"
                        ],
                        "product_models": [],
                        "groups": []
                      }
                    },
                    "quantified_associations": {
                      "PRODUCT_SET": {
                        "products": [
                          {
                            "uuid": "fc24e6c3-933c-4a93-8a81-e5c703d134d5",
                            "quantity": 2
                          },
                          {
                            "uuid": "a9b69002-a0b1-4ead-85c2-f8dbf59c6cfc",
                            "quantity": 1
                          }
                        ],
                        "product_models": [
                          {
                            "identifier": "model-biker-jacket-leather",
                            "quantity": 2
                          }
                        ]
                      }
                    },
                    "quality_scores": [
                      {
                        "scope": "ecommerce",
                        "locale": "en_US",
                        "data": "A"
                      },
                      {
                        "scope": "ecommerce",
                        "locale": "fr_FR",
                        "data": "B"
                      },
                      {
                        "scope": "tablet",
                        "locale": "en_US",
                        "data": "D"
                      },
                      {
                        "scope": "tablet",
                        "locale": "fr_FR",
                        "data": "E"
                      }
                    ],
                    "completenesses": [
                      {
                        "scope": "ecommerce",
                        "locale": "en_US",
                        "data": 10
                      },
                      {
                        "scope": "ecommerce",
                        "locale": "fr_FR",
                        "data": 20
                      },
                      {
                        "scope": "tablet",
                        "locale": "en_US",
                        "data": 30
                      },
                      {
                        "scope": "tablet",
                        "locale": "fr_FR",
                        "data": 40
                      }
                    ]
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "Created",
              "headers": {
                "Location": {
                  "description": "URI of the created resource",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {},
              "x-details": "Means that the creation was successful"
            },
            "204": {
              "description": "No content to return",
              "headers": {
                "Location": {
                  "description": "URI of the updated resource",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {},
              "x-details": "Means that the update was successful"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "415": {
              "description": "Unsupported Media type",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 415
                },
                "message": {
                  "example": "`xxx’ in `Content-Type’ header is not valid.  Only `application/json’ is allowed."
                }
              },
              "x-details": "The `Content-Type` header has to be `application/json`"
            },
            "422": {
              "description": "Unprocessable entity",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 422
                },
                "message": {
                  "example": "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
                },
                "_links": {
                  "example": {
                    "documentation": {
                      "href": "http://api.akeneo.com/api-reference.html"
                    }
                  }
                }
              },
              "x-details": "The validation of the entity given in the body of the request failed"
            }
          },
          "x-versions": [
            "7.0",
            "SaaS"
          ],
          "x-codegen-request-body-name": "body"
        }
      },
      "/api/rest/v1/products-uuid/{uuid}/proposal": {
        "post": {
          "tags": [
            "Product [uuid]"
          ],
          "summary": "Submit a draft for approval",
          "description": "This endpoint allows you to submit a draft for approval.",
          "operationId": "post_proposal_uuid",
          "parameters": [
            {
              "name": "uuid",
              "in": "path",
              "description": "Uuid of the resource",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Submitted",
              "headers": {
                "Location": {
                  "description": "URI of the created resource",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {},
              "x-details": "Means that the draft submission was successful"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "415": {
              "description": "Unsupported Media type",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 415
                },
                "message": {
                  "example": "`xxx’ in `Content-Type’ header is not valid.  Only `application/json’ is allowed."
                }
              },
              "x-details": "The `Content-Type` header has to be `application/json`"
            },
            "422": {
              "description": "Unprocessable entity",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 422
                },
                "message": {
                  "example": "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
                },
                "_links": {
                  "example": {
                    "documentation": {
                      "href": "http://api.akeneo.com/api-reference.html"
                    }
                  }
                }
              },
              "x-details": "The validation of the entity given in the body of the request failed"
            }
          },
          "x-versions": [
            "7.0",
            "SaaS"
          ],
          "x-ee": true
        }
      },
      "/api/rest/v1/products-uuid/{uuid}/draft": {
        "get": {
          "tags": [
            "Product [uuid]"
          ],
          "summary": "Get a draft",
          "description": "This endpoint allows you to get the information about a given draft.",
          "operationId": "get_draft_uuid__uuid_",
          "parameters": [
            {
              "name": "uuid",
              "in": "path",
              "description": "Uuid of the resource",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "uuid": {
                        "type": "string",
                        "description": "Product uuid"
                      },
                      "enabled": {
                        "type": "boolean",
                        "description": "Whether the product is enabled",
                        "default": true
                      },
                      "family": {
                        "type": "string",
                        "description": "<a href='api-reference.html#Family'>Family</a> code from which the product inherits its attributes and attributes requirements.",
                        "default": "null only in the case of a non variant product",
                        "x-validation-rules": "It is equal to an existing family code. In the case of variant product, the given family should be the same as the product model family."
                      },
                      "categories": {
                        "type": "array",
                        "description": "Codes of the <a href='api-reference.html#Category'>categories</a> in which the product is classified",
                        "items": {
                          "type": "string"
                        },
                        "x-validation-rules": "Each string of the array is equal to an existing category code"
                      },
                      "groups": {
                        "type": "array",
                        "description": "Codes of the groups to which the product belong",
                        "items": {
                          "type": "string"
                        },
                        "x-validation-rules": "Each string of the array is equal to an existing group code"
                      },
                      "parent": {
                        "type": "string",
                        "description": "Code of the parent <a href='api-reference.html#Productmodel'>product model</a> when the product is a variant (only available since the 2.0). This parent can be modified since the 2.3.",
                        "default": "null",
                        "x-validation-rules": "It is equal to an existing product model code only if the product is variant otherwise it's equal to null",
                        "x-from-version": "2.0"
                      },
                      "values": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "scope": {
                                "type": "string",
                                "description": "<a href='api-reference.html#Channel'>Channel</a> code of the product value"
                              },
                              "locale": {
                                "type": "string",
                                "description": "<a href='api-reference.html#Locale'>Locale</a> code of the product value"
                              },
                              "data": {
                                "type": "object",
                                "properties": {},
                                "description": "Product value. See <a href='/concepts/products.html#the-data-format'>the `data` format</a> section for more details."
                              },
                              "linked_data": {
                                "type": "object",
                                "properties": {
                                  "attribute": {
                                    "type": "string"
                                  },
                                  "code": {
                                    "type": "string"
                                  },
                                  "labels": {
                                    "type": "object",
                                    "properties": {}
                                  }
                                },
                                "description": "Object containing labels of attribute options (only available since the 5.0 and when query parameter \"with_attribute_options\" is set to \"true\"). See <a href='/concepts/products.html#the-linked_data-format'>the `linked_data` format</a> section for more details.",
                                "x-read-only": true,
                                "x-from-version": "5.0"
                              }
                            }
                          }
                        },
                        "description": "Product attributes values, see <a href='/concepts/products.html#focus-on-the-product-values'>Product values</a> section for more details",
                        "x-validation-rules": "Validation rules detailed in Product values section"
                      },
                      "associations": {
                        "type": "object",
                        "properties": {
                          "associationTypeCode": {
                            "type": "object",
                            "properties": {
                              "groups": {
                                "type": "array",
                                "description": "Array of groups codes with which the product is in relation",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "products": {
                                "type": "array",
                                "description": "Array of product uuids with which the product is in relation",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "product_models": {
                                "type": "array",
                                "description": "Array of product model codes with which the product is in relation (only available since the v2.1)",
                                "items": {
                                  "type": "string"
                                },
                                "x-from-version": "2.1"
                              }
                            }
                          }
                        },
                        "description": "Several associations related to groups, product models and/or other products, grouped by association types",
                        "x-validation-rules": "&bull; The `associationTypeCode` is the code of an existing association type. &#10;&bull; Each string in the array of the property `groups` is the code of an existing group. &#10;&bull; Each string in the array of the property `products` is the uuid of an existing product. &#10;&bull; Each string in the array of the property `product_models` is the code of an existing product model."
                      },
                      "quantified_associations": {
                        "type": "object",
                        "properties": {
                          "quantifiedAssociationTypeCode": {
                            "type": "object",
                            "properties": {
                              "products": {
                                "type": "array",
                                "description": "Array of objects containing product uuids and quantities with which the product is in relation",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "uuid": {
                                      "type": "string"
                                    },
                                    "quantity": {
                                      "type": "integer"
                                    }
                                  }
                                }
                              },
                              "product_models": {
                                "type": "array",
                                "description": "Array of objects containing product model codes and quantities with which the product is in relation",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "string"
                                    },
                                    "quantity": {
                                      "type": "integer"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "description": "Several quantified associations related to products and/or product models, grouped by quantified association types (only available since the 5.0)",
                        "x-validation-rules": "&bull; The `quantifiedAssociationTypeCode` is the code of an existing association type which provides quantity information. &#10;&bull; Each object in the array of the property `products` contains the uuid of an existing product and the quantity of it.",
                        "x-from-version": "5.0"
                      },
                      "created": {
                        "type": "string",
                        "description": "Date of creation",
                        "format": "dateTime",
                        "x-immutable": true,
                        "x-read-only": true
                      },
                      "updated": {
                        "type": "string",
                        "description": "Date of the last update",
                        "format": "dateTime",
                        "x-read-only": true
                      },
                      "metadata": {
                        "type": "object",
                        "properties": {
                          "workflow_status": {
                            "type": "string",
                            "description": "Status of the product regarding the user permissions",
                            "enum": [
                              "read_only",
                              "draft_in_progress",
                              "proposal_waiting_for_approval",
                              "working_copy"
                            ]
                          }
                        },
                        "description": "More information around the product (only available since the v2.0 in the Enterprise Edition)",
                        "x-immutable": true,
                        "x-read-only": true,
                        "x-from-version": "2.0"
                      },
                      "quality_scores": {
                        "type": "object",
                        "properties": {},
                        "description": "Product quality scores for each channel/locale combination (only available since the 5.0 and when the \"with_quality_scores\" query parameter is set to \"true\")",
                        "x-immutable": true,
                        "x-read-only": true,
                        "x-from-version": "5.0"
                      },
                      "completenesses": {
                        "type": "array",
                        "description": "Product completenesses for each channel/locale combination (only available since the 7.0 version, and when the \"with_completenesses\" query parameter is set to \"true\")",
                        "items": {
                          "type": "object",
                          "properties": {
                            "scope": {
                              "type": "string"
                            },
                            "locale": {
                              "type": "string"
                            },
                            "data": {
                              "type": "integer"
                            }
                          }
                        },
                        "x-immutable": true,
                        "x-read-only": true,
                        "x-from-version": "7.0"
                      }
                    },
                    "example": {
                      "uuid": "25566245-55c3-42ce-86d9-8610ac459fa8",
                      "enabled": true,
                      "family": "tshirt",
                      "categories": [
                        "summer_collection"
                      ],
                      "groups": [],
                      "values": {
                        "sku": [
                          {
                            "data": "top"
                          }
                        ],
                        "name": [
                          {
                            "data": "Top",
                            "locale": "en_US"
                          },
                          {
                            "data": "Débardeur",
                            "locale": "fr_FR"
                          }
                        ],
                        "description": [
                          {
                            "data": "Summer top",
                            "locale": "en_US",
                            "scope": "ecommerce"
                          },
                          {
                            "data": "Top",
                            "locale": "en_US",
                            "scope": "tablet"
                          },
                          {
                            "data": "Débardeur pour l'été",
                            "locale": "fr_FR",
                            "scope": "ecommerce"
                          },
                          {
                            "data": "Débardeur",
                            "locale": "fr_FR",
                            "scope": "tablet"
                          }
                        ],
                        "price": [
                          {
                            "data": [
                              {
                                "amount": "15.5",
                                "currency": "EUR"
                              },
                              {
                                "amount": "15",
                                "currency": "USD"
                              }
                            ]
                          }
                        ],
                        "color": [
                          {
                            "data": "black",
                            "linked_data": {
                              "attribute": "color",
                              "code": "black",
                              "labels": {
                                "en_US": "Black",
                                "fr_FR": "Noir"
                              }
                            }
                          }
                        ],
                        "size": [
                          {
                            "data": "m",
                            "linked_data": {
                              "attribute": "size",
                              "code": "m",
                              "labels": {
                                "en_US": "M",
                                "fr_FR": "M"
                              }
                            }
                          }
                        ],
                        "collection": [
                          {
                            "data": [
                              "winter_2016"
                            ],
                            "linked_data": {
                              "winter_2016": {
                                "attribute": "collection",
                                "code": "winter_2016",
                                "labels": {
                                  "en_US": "Winter 2016",
                                  "fr_FR": "Hiver 2016"
                                }
                              }
                            }
                          }
                        ]
                      },
                      "created": "2016-06-23T18:24:44+02:00",
                      "updated": "2016-06-25T17:56:12+02:00",
                      "associations": {
                        "PACK": {
                          "products": [
                            "d055527c-0698-4967-8f16-8a5f23f4e5cf"
                          ],
                          "product_models": [],
                          "groups": []
                        }
                      },
                      "quantified_associations": {
                        "PRODUCT_SET": {
                          "products": [
                            {
                              "uuid": "fc24e6c3-933c-4a93-8a81-e5c703d134d5",
                              "quantity": 2
                            },
                            {
                              "uuid": "a9b69002-a0b1-4ead-85c2-f8dbf59c6cfc",
                              "quantity": 1
                            }
                          ],
                          "product_models": [
                            {
                              "identifier": "model-biker-jacket-leather",
                              "quantity": 2
                            }
                          ]
                        }
                      },
                      "quality_scores": [
                        {
                          "scope": "ecommerce",
                          "locale": "en_US",
                          "data": "A"
                        },
                        {
                          "scope": "ecommerce",
                          "locale": "fr_FR",
                          "data": "B"
                        },
                        {
                          "scope": "tablet",
                          "locale": "en_US",
                          "data": "D"
                        },
                        {
                          "scope": "tablet",
                          "locale": "fr_FR",
                          "data": "E"
                        }
                      ],
                      "completenesses": [
                        {
                          "scope": "ecommerce",
                          "locale": "en_US",
                          "data": 10
                        },
                        {
                          "scope": "ecommerce",
                          "locale": "fr_FR",
                          "data": 20
                        },
                        {
                          "scope": "tablet",
                          "locale": "en_US",
                          "data": 30
                        },
                        {
                          "scope": "tablet",
                          "locale": "fr_FR",
                          "data": 40
                        }
                      ]
                    }
                  }
                }
              },
              "x-details": "Returns the content of the draft in JSON standard format"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "404": {
              "description": "Resource not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 404
                },
                "message": {
                  "example": "Resource `my_resource_code` does not exist."
                }
              },
              "x-details": "The resource code given in the URI does not correspond to any existing PIM resource"
            },
            "406": {
              "description": "Not Acceptable",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 406
                },
                "message": {
                  "example": "`xxx’ in `Accept` header is not valid. Only `application/json` is allowed."
                }
              },
              "x-details": "The `Accept` header is not `application/json` but it should"
            }
          },
          "x-versions": [
            "7.0",
            "SaaS"
          ],
          "x-ee": true
        }
      },
      "/api/rest/v1/product-models": {
        "get": {
          "tags": [
            "Product model"
          ],
          "summary": "Get list of product models",
          "description": "This endpoint allows you to get a list of product models. Product models are paginated. In the Enterprise Edition, since the 2.0, permissions based on your user groups are applied to the set of products you request.",
          "operationId": "get_product_models",
          "parameters": [
            {
              "name": "search",
              "in": "query",
              "description": "Filter product models, for more details see the <a href=\"/documentation/filter.html\">Filters</a> section",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "scope",
              "in": "query",
              "description": "Filter product values to return scopable attributes for the given channel as well as the non localizable/non scopable attributes, for more details see the <a href=\"/documentation/filter.html#via-channel\">Filter product values via channel</a> section",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "locales",
              "in": "query",
              "description": "Filter product values to return localizable attributes for the given locales as well as the non localizable/non scopable attributes, for more details see the <a href=\"/documentation/filter.html#via-locale\">Filter product values via locale</a> section",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "attributes",
              "in": "query",
              "description": "Filter product values to only return those concerning the given attributes, for more details see the <a href=\"/documentation/filter.html#filter-product-values\">Filter on product values</a> section and the <a href=\"/documentation/filter.html#filter-on-product-model-properties\">Filter on product model properties</a> section",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "pagination_type",
              "in": "query",
              "description": "Pagination method type, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
              "schema": {
                "type": "string",
                "default": "page",
                "enum": [
                  "page",
                  "search_after"
                ],
                "x-validation-rules": "One of the following values"
              },
              "x-validation-rules": "One of the following values"
            },
            {
              "name": "page",
              "in": "query",
              "description": "Number of the page to retrieve when using the `page` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html#pagination\">Pagination</a> section",
              "schema": {
                "type": "integer",
                "default": 1
              }
            },
            {
              "name": "search_after",
              "in": "query",
              "description": "Cursor when using the `search_after` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
              "schema": {
                "type": "string",
                "default": "cursor to the first page"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
              "schema": {
                "maximum": 100,
                "minimum": 1,
                "type": "integer",
                "default": 10
              }
            },
            {
              "name": "with_count",
              "in": "query",
              "description": "Return the count of items in the response. Be carefull with that, on a big catalog, it can decrease performance in a significative way",
              "schema": {
                "type": "boolean",
                "default": false
              }
            },
            {
              "name": "with_quality_scores",
              "in": "query",
              "description": "Return product model quality scores in the response. <strong>(Only available since the 6.0 version)</strong>",
              "schema": {
                "type": "boolean",
                "x-from-version": "6.0"
              },
              "x-from-version": "6.0"
            }
          ],
          "responses": {
            "200": {
              "description": "Return product models paginated",
              "content": {
                "application/json": {
                  "schema": {
                    "title": "Product Models",
                    "type": "object",
                    "properties": {
                      "_embedded": {
                        "type": "object",
                        "properties": {
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "_links": {
                                      "type": "object",
                                      "properties": {
                                        "self": {
                                          "type": "object",
                                          "properties": {
                                            "href": {
                                              "type": "string",
                                              "description": "URI of the resource"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "required": [
                                    "code",
                                    "family_variant"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "string",
                                      "description": "Product model code",
                                      "x-immutable": true
                                    },
                                    "family": {
                                      "type": "string",
                                      "description": "<a href='api-reference.html#Family'>Family</a> code  from which the product inherits its attributes and attributes requirements (since the 3.2)",
                                      "x-validation-rules": "It is equal to an existing family code",
                                      "x-immutable": true,
                                      "x-from-version": "3.2"
                                    },
                                    "family_variant": {
                                      "type": "string",
                                      "description": "Family variant code from which the product model inherits its attributes and variant attributes",
                                      "x-validation-rules": "It is equal to an existing family variant code that belong to the family given in the `family` field",
                                      "x-immutable": true
                                    },
                                    "parent": {
                                      "type": "string",
                                      "description": "Code of the parent <a href='api-reference.html#Productmodel'>product model</a>. This parent can be modified since the 2.3.",
                                      "default": "null",
                                      "x-validation-rules": "&bull; It is equal to an existing product model code&#10;&bull; This product model has the same family variant as the one given in the `family_variant field`",
                                      "x-from-version": "2.3"
                                    },
                                    "categories": {
                                      "type": "array",
                                      "description": "Codes of the <a href='api-reference.html#Category'>categories</a> in which the product model is categorized",
                                      "items": {
                                        "type": "string"
                                      },
                                      "x-validation-rules": "Each string of the array is equal to an existing category code"
                                    },
                                    "values": {
                                      "type": "object",
                                      "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "scope": {
                                              "type": "string",
                                              "description": "<a href='api-reference.html#Channel'>Channel</a> code of the product value"
                                            },
                                            "locale": {
                                              "type": "string",
                                              "description": "<a href='api-reference.html#Locale'>Locale</a> code of the product value"
                                            },
                                            "data": {
                                              "type": "object",
                                              "properties": {},
                                              "description": "<a href='api-reference.html#Productuuid'>Product</a> value"
                                            }
                                          }
                                        }
                                      },
                                      "description": "Product model attributes values, see <a href='/concepts/products.html#focus-on-the-product-values'>Product values</a> section for more details",
                                      "x-validation-rules": "Validation rules detailed in Product values section"
                                    },
                                    "associations": {
                                      "type": "object",
                                      "properties": {
                                        "associationTypeCode": {
                                          "type": "object",
                                          "properties": {
                                            "groups": {
                                              "type": "array",
                                              "description": "Array of groups codes with which the product is in relation",
                                              "items": {
                                                "type": "string"
                                              }
                                            },
                                            "products": {
                                              "type": "array",
                                              "description": "Array of product identifiers with which the product is in relation",
                                              "items": {
                                                "type": "string"
                                              }
                                            },
                                            "product_models": {
                                              "type": "array",
                                              "description": "Array of product model codes with which the product is in relation (only available since the v2.1)",
                                              "items": {
                                                "type": "string"
                                              },
                                              "x-from-version": "2.1"
                                            }
                                          }
                                        }
                                      },
                                      "description": "Several associations related to groups, product and/or other product models, grouped by association types",
                                      "x-validation-rules": "&bull; The `associationTypeCode` is the code of an existing association type. &#10;&bull; Each string in the array of the property `groups` is the code of an existing group. &#10;&bull; Each string in the array of the property `products` is the identifier of an existing product. &#10;&bull; Each string in the array of the property `product_models` is the code of an existing product model."
                                    },
                                    "quantified_associations": {
                                      "type": "object",
                                      "properties": {
                                        "quantifiedAssociationTypeCode": {
                                          "type": "object",
                                          "properties": {
                                            "products": {
                                              "type": "array",
                                              "description": "Array of objects containing product identifiers and quantities with which the product model is in relation",
                                              "items": {
                                                "type": "object",
                                                "properties": {
                                                  "identifier": {
                                                    "type": "string"
                                                  },
                                                  "quantity": {
                                                    "type": "integer"
                                                  }
                                                }
                                              }
                                            },
                                            "product_models": {
                                              "type": "array",
                                              "description": "Array of objects containing product model codes and quantities with which the product model is in relation",
                                              "items": {
                                                "type": "object",
                                                "properties": {
                                                  "code": {
                                                    "type": "string"
                                                  },
                                                  "quantity": {
                                                    "type": "integer"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "description": "Several quantified associations related to products and/or product models, grouped by quantified association types (only available since the 5.0)",
                                      "x-validation-rules": "&bull; The `quantifiedAssociationTypeCode` is the code of an existing association type which provides quantity information. &#10;&bull; Each object in the array of the property `products` contains the identifier of an existing product and the quantity of it. &#10;&bull; Each object in the array of the property `product_models` contains the code of an existing product model and the quantity of it.",
                                      "x-from-version": "5.0"
                                    },
                                    "created": {
                                      "type": "string",
                                      "description": "Date of creation",
                                      "format": "dateTime",
                                      "x-immutable": true,
                                      "x-read-only": true
                                    },
                                    "updated": {
                                      "type": "string",
                                      "description": "Date of the last update",
                                      "format": "dateTime",
                                      "x-read-only": true
                                    },
                                    "metadata": {
                                      "type": "object",
                                      "properties": {
                                        "workflow_status": {
                                          "type": "string",
                                          "description": "Status of the product model regarding the user permissions",
                                          "enum": [
                                            "read_only",
                                            "draft_in_progress",
                                            "proposal_waiting_for_approval",
                                            "working_copy"
                                          ]
                                        }
                                      },
                                      "description": "More information around the product model (only available since the v2.3 in the Enterprise Edition)",
                                      "x-immutable": true,
                                      "x-read-only": true,
                                      "x-from-version": "2.3"
                                    },
                                    "quality_scores": {
                                      "type": "object",
                                      "properties": {},
                                      "description": "Product model quality scores for each channel/locale combination (<strong>only available since the 7.0 version</strong> and when the \"with_quality_scores\" query parameter is set to \"true\")",
                                      "x-immutable": true,
                                      "x-read-only": true,
                                      "x-from-version": "7.0"
                                    }
                                  },
                                  "example": {
                                    "code": "model-biker-jacket-leather",
                                    "family": "clothing",
                                    "family_variant": "clothing_material_size",
                                    "parent": "model-biker-jacket",
                                    "categories": [
                                      "summer_collection"
                                    ],
                                    "values": {
                                      "color": [
                                        {
                                          "data": "antique_white"
                                        }
                                      ],
                                      "material": [
                                        {
                                          "data": "leather"
                                        }
                                      ],
                                      "variation_name": [
                                        {
                                          "locale": "en_US",
                                          "data": "Biker jacket leather"
                                        }
                                      ],
                                      "name": [
                                        {
                                          "locale": "en_US",
                                          "data": "Biker jacket"
                                        }
                                      ],
                                      "collection": [
                                        {
                                          "data": [
                                            "summer_2017"
                                          ]
                                        }
                                      ],
                                      "description": [
                                        {
                                          "locale": "en_US",
                                          "scope": "ecommerce",
                                          "data": "Biker jacket"
                                        }
                                      ]
                                    },
                                    "associations": {
                                      "PACK": {
                                        "products": [
                                          "sunglass"
                                        ],
                                        "product_models": [],
                                        "groups": []
                                      }
                                    },
                                    "quantified_associations": {
                                      "PRODUCT_SET": {
                                        "products": [
                                          {
                                            "identifier": "top",
                                            "quantity": 2
                                          },
                                          {
                                            "identifier": "cap",
                                            "quantity": 1
                                          }
                                        ],
                                        "product_models": [
                                          {
                                            "code": "model-biker-jacket-leather",
                                            "quantity": 2
                                          }
                                        ]
                                      }
                                    },
                                    "quality_scores": [
                                      {
                                        "scope": "ecommerce",
                                        "locale": "en_US",
                                        "data": "A"
                                      },
                                      {
                                        "scope": "ecommerce",
                                        "locale": "fr_FR",
                                        "data": "B"
                                      },
                                      {
                                        "scope": "tablet",
                                        "locale": "en_US",
                                        "data": "D"
                                      },
                                      {
                                        "scope": "tablet",
                                        "locale": "fr_FR",
                                        "data": "E"
                                      }
                                    ],
                                    "created": "2017-10-02T15:03:55+02:00",
                                    "updated": "2017-10-02T15:03:55+02:00"
                                  }
                                }
                              ]
                            }
                          }
                        }
                      },
                      "_links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the current page of resources"
                              }
                            }
                          },
                          "first": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the first page of resources"
                              }
                            }
                          },
                          "previous": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the previous page of resources"
                              }
                            }
                          },
                          "next": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the next page of resources"
                              }
                            }
                          }
                        }
                      },
                      "current_page": {
                        "type": "integer",
                        "description": "Current page number"
                      }
                    }
                  }
                },
                "_links": {
                  "example": {
                    "self": {
                      "href": "http://demo.akeneo.com/api/rest/v1/product-models?pagination_type=search_after&limit=3&search_after=qg%3D%3D"
                    },
                    "first": {
                      "href": "http://demo.akeneo.com/api/rest/v1/product-models?pagination_type=search_after&limit=3"
                    },
                    "next": {
                      "href": "http://demo.akeneo.com/api/rest/v1/product-models?pagination_type=search_after&limit=3&search_after=rw%3D%3D"
                    }
                  }
                },
                "_embedded": {
                  "example": {
                    "items": [
                      {
                        "_links": {
                          "self": {
                            "href": "http://demo.akeneo.com/api/rest/v1/product-models/amarisshoe"
                          }
                        },
                        "code": "amarisshoe",
                        "family": "shoes",
                        "family_variant": "shoes_VariantA1",
                        "categories": [
                          "clothing",
                          "shoes"
                        ],
                        "values": {
                          "price": [
                            {
                              "data": [
                                {
                                  "amount": "50.00",
                                  "currency": "EUR"
                                }
                              ]
                            }
                          ],
                          "description": [
                            {
                              "locale": "en_US",
                              "scope": "ecommerce",
                              "data": "I like shoes!"
                            }
                          ]
                        },
                        "associations": {
                          "PACK": {
                            "products": [
                              "sunglasses"
                            ],
                            "product_models": [],
                            "groups": []
                          }
                        },
                        "quantified_associations": {
                          "PRODUCT_SET": {
                            "products": [
                              {
                                "identifier": "cap",
                                "quantity": 2
                              },
                              {
                                "identifier": "shoes",
                                "quantity": 1
                              }
                            ],
                            "product_models": [
                              {
                                "identifier": "model-biker-jacket-leather",
                                "quantity": 2
                              }
                            ]
                          }
                        },
                        "quality_scores": [
                          {
                            "scope": "ecommerce",
                            "locale": "en_US",
                            "data": "A"
                          },
                          {
                            "scope": "ecommerce",
                            "locale": "fr_FR",
                            "data": "B"
                          },
                          {
                            "scope": "tablet",
                            "locale": "en_US",
                            "data": "D"
                          },
                          {
                            "scope": "tablet",
                            "locale": "fr_FR",
                            "data": "E"
                          }
                        ],
                        "created": "2017-10-04T18:04:10+02:00",
                        "updated": "2017-10-04T18:04:10+02:00"
                      },
                      {
                        "_links": {
                          "self": {
                            "href": "http://demo.akeneo.com/api/rest/v1/product-models/Abiloitshirt"
                          }
                        },
                        "code": "Abiloitshirt",
                        "family": "clothing",
                        "family_variant": "clothing_VariantA1",
                        "categories": [
                          "clothing",
                          "tshirt"
                        ],
                        "values": {
                          "price": [
                            {
                              "data": [
                                {
                                  "amount": "50.00",
                                  "currency": "EUR"
                                }
                              ]
                            }
                          ],
                          "description": [
                            {
                              "locale": "en_US",
                              "scope": "ecommerce",
                              "data": "I like tshirt!"
                            }
                          ]
                        },
                        "associations": {
                          "PACK": {
                            "products": [
                              "sunglasses"
                            ],
                            "product_models": [],
                            "groups": []
                          }
                        },
                        "quantified_associations": {
                          "PRODUCT_SET": {
                            "products": [
                              {
                                "identifier": "cap",
                                "quantity": 2
                              }
                            ],
                            "product_models": []
                          }
                        },
                        "quality_scores": [
                          {
                            "scope": "ecommerce",
                            "locale": "en_US",
                            "data": "A"
                          },
                          {
                            "scope": "ecommerce",
                            "locale": "fr_FR",
                            "data": "B"
                          },
                          {
                            "scope": "tablet",
                            "locale": "en_US",
                            "data": "D"
                          },
                          {
                            "scope": "tablet",
                            "locale": "fr_FR",
                            "data": "E"
                          }
                        ],
                        "created": "2017-10-04T18:04:10+02:00",
                        "updated": "2017-10-04T18:04:10+02:00"
                      },
                      {
                        "_links": {
                          "self": {
                            "href": "http://demo.akeneo.com/api/rest/v1/product-models/Astertrousers"
                          }
                        },
                        "code": "Astertrousers",
                        "family": "clothing",
                        "family_variant": "clothing_VariantA1",
                        "categories": [
                          "clothing",
                          "trousers"
                        ],
                        "values": {
                          "price": [
                            {
                              "data": [
                                {
                                  "amount": "50.00",
                                  "currency": "EUR"
                                }
                              ]
                            }
                          ],
                          "description": [
                            {
                              "locale": "en_US",
                              "scope": "ecommerce",
                              "data": "I like trousers!"
                            }
                          ]
                        },
                        "associations": {
                          "PACK": {
                            "products": [
                              "sunglasses"
                            ],
                            "product_models": [],
                            "groups": []
                          }
                        },
                        "quantified_associations": {},
                        "created": "2017-10-04T18:04:10+02:00",
                        "updated": "2017-10-04T18:04:10+02:00"
                      }
                    ]
                  }
                }
              }
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "406": {
              "description": "Not Acceptable",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 406
                },
                "message": {
                  "example": "`xxx’ in `Accept` header is not valid. Only `application/json` is allowed."
                }
              },
              "x-details": "The `Accept` header is not `application/json` but it should"
            },
            "422": {
              "description": "Unprocessable entity",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 422
                },
                "message": {
                  "example": "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
                },
                "_links": {
                  "example": {
                    "documentation": {
                      "href": "http://api.akeneo.com/api-reference.html"
                    }
                  }
                }
              },
              "x-details": "The validation of the entity given in the body of the request failed"
            }
          },
          "x-versions": [
            "2.x",
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ]
        },
        "post": {
          "tags": [
            "Product model"
          ],
          "summary": "Create a new product model",
          "description": "This endpoint allows you to create a new product model. In the Enterprise Edition, since the v2.3, permissions based on your user groups are applied to the product model you try to create.",
          "operationId": "post_product_models",
          "requestBody": {
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "code",
                    "family_variant"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Product model code",
                      "x-immutable": true
                    },
                    "family": {
                      "type": "string",
                      "description": "<a href='api-reference.html#Family'>Family</a> code  from which the product inherits its attributes and attributes requirements (since the 3.2)",
                      "x-validation-rules": "It is equal to an existing family code",
                      "x-immutable": true,
                      "x-from-version": "3.2"
                    },
                    "family_variant": {
                      "type": "string",
                      "description": "Family variant code from which the product model inherits its attributes and variant attributes",
                      "x-validation-rules": "It is equal to an existing family variant code that belong to the family given in the `family` field",
                      "x-immutable": true
                    },
                    "parent": {
                      "type": "string",
                      "description": "Code of the parent <a href='api-reference.html#Productmodel'>product model</a>. This parent can be modified since the 2.3.",
                      "default": "null",
                      "x-validation-rules": "&bull; It is equal to an existing product model code&#10;&bull; This product model has the same family variant as the one given in the `family_variant field`",
                      "x-from-version": "2.3"
                    },
                    "categories": {
                      "type": "array",
                      "description": "Codes of the <a href='api-reference.html#Category'>categories</a> in which the product model is categorized",
                      "items": {
                        "type": "string"
                      },
                      "x-validation-rules": "Each string of the array is equal to an existing category code"
                    },
                    "values": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "scope": {
                              "type": "string",
                              "description": "<a href='api-reference.html#Channel'>Channel</a> code of the product value"
                            },
                            "locale": {
                              "type": "string",
                              "description": "<a href='api-reference.html#Locale'>Locale</a> code of the product value"
                            },
                            "data": {
                              "type": "object",
                              "properties": {},
                              "description": "<a href='api-reference.html#Productuuid'>Product</a> value"
                            }
                          }
                        }
                      },
                      "description": "Product model attributes values, see <a href='/concepts/products.html#focus-on-the-product-values'>Product values</a> section for more details",
                      "x-validation-rules": "Validation rules detailed in Product values section"
                    },
                    "associations": {
                      "type": "object",
                      "properties": {
                        "associationTypeCode": {
                          "type": "object",
                          "properties": {
                            "groups": {
                              "type": "array",
                              "description": "Array of groups codes with which the product is in relation",
                              "items": {
                                "type": "string"
                              }
                            },
                            "products": {
                              "type": "array",
                              "description": "Array of product identifiers with which the product is in relation",
                              "items": {
                                "type": "string"
                              }
                            },
                            "product_models": {
                              "type": "array",
                              "description": "Array of product model codes with which the product is in relation (only available since the v2.1)",
                              "items": {
                                "type": "string"
                              },
                              "x-from-version": "2.1"
                            }
                          }
                        }
                      },
                      "description": "Several associations related to groups, product and/or other product models, grouped by association types",
                      "x-validation-rules": "&bull; The `associationTypeCode` is the code of an existing association type. &#10;&bull; Each string in the array of the property `groups` is the code of an existing group. &#10;&bull; Each string in the array of the property `products` is the identifier of an existing product. &#10;&bull; Each string in the array of the property `product_models` is the code of an existing product model."
                    },
                    "quantified_associations": {
                      "type": "object",
                      "properties": {
                        "quantifiedAssociationTypeCode": {
                          "type": "object",
                          "properties": {
                            "products": {
                              "type": "array",
                              "description": "Array of objects containing product identifiers and quantities with which the product model is in relation",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "identifier": {
                                    "type": "string"
                                  },
                                  "quantity": {
                                    "type": "integer"
                                  }
                                }
                              }
                            },
                            "product_models": {
                              "type": "array",
                              "description": "Array of objects containing product model codes and quantities with which the product model is in relation",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "code": {
                                    "type": "string"
                                  },
                                  "quantity": {
                                    "type": "integer"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "description": "Several quantified associations related to products and/or product models, grouped by quantified association types (only available since the 5.0)",
                      "x-validation-rules": "&bull; The `quantifiedAssociationTypeCode` is the code of an existing association type which provides quantity information. &#10;&bull; Each object in the array of the property `products` contains the identifier of an existing product and the quantity of it. &#10;&bull; Each object in the array of the property `product_models` contains the code of an existing product model and the quantity of it.",
                      "x-from-version": "5.0"
                    },
                    "created": {
                      "type": "string",
                      "description": "Date of creation",
                      "format": "dateTime",
                      "x-immutable": true,
                      "x-read-only": true
                    },
                    "updated": {
                      "type": "string",
                      "description": "Date of the last update",
                      "format": "dateTime",
                      "x-read-only": true
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "workflow_status": {
                          "type": "string",
                          "description": "Status of the product model regarding the user permissions",
                          "enum": [
                            "read_only",
                            "draft_in_progress",
                            "proposal_waiting_for_approval",
                            "working_copy"
                          ]
                        }
                      },
                      "description": "More information around the product model (only available since the v2.3 in the Enterprise Edition)",
                      "x-immutable": true,
                      "x-read-only": true,
                      "x-from-version": "2.3"
                    },
                    "quality_scores": {
                      "type": "object",
                      "properties": {},
                      "description": "Product model quality scores for each channel/locale combination (<strong>only available since the 7.0 version</strong> and when the \"with_quality_scores\" query parameter is set to \"true\")",
                      "x-immutable": true,
                      "x-read-only": true,
                      "x-from-version": "7.0"
                    }
                  },
                  "example": {
                    "code": "model-biker-jacket-leather",
                    "family": "clothing",
                    "family_variant": "clothing_material_size",
                    "parent": "model-biker-jacket",
                    "categories": [
                      "summer_collection"
                    ],
                    "values": {
                      "color": [
                        {
                          "data": "antique_white"
                        }
                      ],
                      "material": [
                        {
                          "data": "leather"
                        }
                      ],
                      "variation_name": [
                        {
                          "locale": "en_US",
                          "data": "Biker jacket leather"
                        }
                      ],
                      "name": [
                        {
                          "locale": "en_US",
                          "data": "Biker jacket"
                        }
                      ],
                      "collection": [
                        {
                          "data": [
                            "summer_2017"
                          ]
                        }
                      ],
                      "description": [
                        {
                          "locale": "en_US",
                          "scope": "ecommerce",
                          "data": "Biker jacket"
                        }
                      ]
                    },
                    "associations": {
                      "PACK": {
                        "products": [
                          "sunglass"
                        ],
                        "product_models": [],
                        "groups": []
                      }
                    },
                    "quantified_associations": {
                      "PRODUCT_SET": {
                        "products": [
                          {
                            "identifier": "top",
                            "quantity": 2
                          },
                          {
                            "identifier": "cap",
                            "quantity": 1
                          }
                        ],
                        "product_models": [
                          {
                            "code": "model-biker-jacket-leather",
                            "quantity": 2
                          }
                        ]
                      }
                    },
                    "quality_scores": [
                      {
                        "scope": "ecommerce",
                        "locale": "en_US",
                        "data": "A"
                      },
                      {
                        "scope": "ecommerce",
                        "locale": "fr_FR",
                        "data": "B"
                      },
                      {
                        "scope": "tablet",
                        "locale": "en_US",
                        "data": "D"
                      },
                      {
                        "scope": "tablet",
                        "locale": "fr_FR",
                        "data": "E"
                      }
                    ],
                    "created": "2017-10-02T15:03:55+02:00",
                    "updated": "2017-10-02T15:03:55+02:00"
                  }
                }
              }
            },
            "required": false
          },
          "responses": {
            "201": {
              "description": "Created",
              "headers": {
                "Location": {
                  "description": "URI of the created resource",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {},
              "x-details": "Means that the creation was successful"
            },
            "400": {
              "description": "Bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 400
                },
                "message": {
                  "example": "Invalid JSON message received"
                }
              },
              "x-details": "Can be caused by a malformed JSON request"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "415": {
              "description": "Unsupported Media type",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 415
                },
                "message": {
                  "example": "`xxx’ in `Content-Type’ header is not valid.  Only `application/json’ is allowed."
                }
              },
              "x-details": "The `Content-Type` header has to be `application/json`"
            },
            "422": {
              "description": "Unprocessable entity",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 422
                },
                "message": {
                  "example": "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
                },
                "_links": {
                  "example": {
                    "documentation": {
                      "href": "http://api.akeneo.com/api-reference.html"
                    }
                  }
                }
              },
              "x-details": "The validation of the entity given in the body of the request failed"
            }
          },
          "x-versions": [
            "2.x",
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-codegen-request-body-name": "body"
        },
        "patch": {
          "tags": [
            "Product model"
          ],
          "summary": "Update/create several product models",
          "description": "This endpoint allows you to update and/or create several product models at once. Learn more about <a href=\"/documentation/update.html#update-behavior\">Update behavior</a>. Note that if no product models exists for the given code, it creates it. In the Enterprise Edition, since the v2.3, permissions based on your user groups are applied to the product models you try to update. It may result in the creation of drafts if you only have edit rights through the product model's categories.",
          "operationId": "patch_product_models",
          "requestBody": {
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "code",
                    "family_variant"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Product model code",
                      "x-immutable": true
                    },
                    "family": {
                      "type": "string",
                      "description": "<a href='api-reference.html#Family'>Family</a> code  from which the product inherits its attributes and attributes requirements (since the 3.2)",
                      "x-validation-rules": "It is equal to an existing family code",
                      "x-immutable": true,
                      "x-from-version": "3.2"
                    },
                    "family_variant": {
                      "type": "string",
                      "description": "Family variant code from which the product model inherits its attributes and variant attributes",
                      "x-validation-rules": "It is equal to an existing family variant code that belong to the family given in the `family` field",
                      "x-immutable": true
                    },
                    "parent": {
                      "type": "string",
                      "description": "Code of the parent <a href='api-reference.html#Productmodel'>product model</a>. This parent can be modified since the 2.3.",
                      "default": "null",
                      "x-validation-rules": "&bull; It is equal to an existing product model code&#10;&bull; This product model has the same family variant as the one given in the `family_variant field`",
                      "x-from-version": "2.3"
                    },
                    "categories": {
                      "type": "array",
                      "description": "Codes of the <a href='api-reference.html#Category'>categories</a> in which the product model is categorized",
                      "items": {
                        "type": "string"
                      },
                      "x-validation-rules": "Each string of the array is equal to an existing category code"
                    },
                    "values": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "scope": {
                              "type": "string",
                              "description": "<a href='api-reference.html#Channel'>Channel</a> code of the product value"
                            },
                            "locale": {
                              "type": "string",
                              "description": "<a href='api-reference.html#Locale'>Locale</a> code of the product value"
                            },
                            "data": {
                              "type": "object",
                              "properties": {},
                              "description": "<a href='api-reference.html#Productuuid'>Product</a> value"
                            }
                          }
                        }
                      },
                      "description": "Product model attributes values, see <a href='/concepts/products.html#focus-on-the-product-values'>Product values</a> section for more details",
                      "x-validation-rules": "Validation rules detailed in Product values section"
                    },
                    "associations": {
                      "type": "object",
                      "properties": {
                        "associationTypeCode": {
                          "type": "object",
                          "properties": {
                            "groups": {
                              "type": "array",
                              "description": "Array of groups codes with which the product is in relation",
                              "items": {
                                "type": "string"
                              }
                            },
                            "products": {
                              "type": "array",
                              "description": "Array of product identifiers with which the product is in relation",
                              "items": {
                                "type": "string"
                              }
                            },
                            "product_models": {
                              "type": "array",
                              "description": "Array of product model codes with which the product is in relation (only available since the v2.1)",
                              "items": {
                                "type": "string"
                              },
                              "x-from-version": "2.1"
                            }
                          }
                        }
                      },
                      "description": "Several associations related to groups, product and/or other product models, grouped by association types",
                      "x-validation-rules": "&bull; The `associationTypeCode` is the code of an existing association type. &#10;&bull; Each string in the array of the property `groups` is the code of an existing group. &#10;&bull; Each string in the array of the property `products` is the identifier of an existing product. &#10;&bull; Each string in the array of the property `product_models` is the code of an existing product model."
                    },
                    "quantified_associations": {
                      "type": "object",
                      "properties": {
                        "quantifiedAssociationTypeCode": {
                          "type": "object",
                          "properties": {
                            "products": {
                              "type": "array",
                              "description": "Array of objects containing product identifiers and quantities with which the product model is in relation",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "identifier": {
                                    "type": "string"
                                  },
                                  "quantity": {
                                    "type": "integer"
                                  }
                                }
                              }
                            },
                            "product_models": {
                              "type": "array",
                              "description": "Array of objects containing product model codes and quantities with which the product model is in relation",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "code": {
                                    "type": "string"
                                  },
                                  "quantity": {
                                    "type": "integer"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "description": "Several quantified associations related to products and/or product models, grouped by quantified association types (only available since the 5.0)",
                      "x-validation-rules": "&bull; The `quantifiedAssociationTypeCode` is the code of an existing association type which provides quantity information. &#10;&bull; Each object in the array of the property `products` contains the identifier of an existing product and the quantity of it. &#10;&bull; Each object in the array of the property `product_models` contains the code of an existing product model and the quantity of it.",
                      "x-from-version": "5.0"
                    },
                    "created": {
                      "type": "string",
                      "description": "Date of creation",
                      "format": "dateTime",
                      "x-immutable": true,
                      "x-read-only": true
                    },
                    "updated": {
                      "type": "string",
                      "description": "Date of the last update",
                      "format": "dateTime",
                      "x-read-only": true
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "workflow_status": {
                          "type": "string",
                          "description": "Status of the product model regarding the user permissions",
                          "enum": [
                            "read_only",
                            "draft_in_progress",
                            "proposal_waiting_for_approval",
                            "working_copy"
                          ]
                        }
                      },
                      "description": "More information around the product model (only available since the v2.3 in the Enterprise Edition)",
                      "x-immutable": true,
                      "x-read-only": true,
                      "x-from-version": "2.3"
                    },
                    "quality_scores": {
                      "type": "object",
                      "properties": {},
                      "description": "Product model quality scores for each channel/locale combination (<strong>only available since the 7.0 version</strong> and when the \"with_quality_scores\" query parameter is set to \"true\")",
                      "x-immutable": true,
                      "x-read-only": true,
                      "x-from-version": "7.0"
                    }
                  },
                  "example": {
                    "code": "model-biker-jacket-leather",
                    "family": "clothing",
                    "family_variant": "clothing_material_size",
                    "parent": "model-biker-jacket",
                    "categories": [
                      "summer_collection"
                    ],
                    "values": {
                      "color": [
                        {
                          "data": "antique_white"
                        }
                      ],
                      "material": [
                        {
                          "data": "leather"
                        }
                      ],
                      "variation_name": [
                        {
                          "locale": "en_US",
                          "data": "Biker jacket leather"
                        }
                      ],
                      "name": [
                        {
                          "locale": "en_US",
                          "data": "Biker jacket"
                        }
                      ],
                      "collection": [
                        {
                          "data": [
                            "summer_2017"
                          ]
                        }
                      ],
                      "description": [
                        {
                          "locale": "en_US",
                          "scope": "ecommerce",
                          "data": "Biker jacket"
                        }
                      ]
                    },
                    "associations": {
                      "PACK": {
                        "products": [
                          "sunglass"
                        ],
                        "product_models": [],
                        "groups": []
                      }
                    },
                    "quantified_associations": {
                      "PRODUCT_SET": {
                        "products": [
                          {
                            "identifier": "top",
                            "quantity": 2
                          },
                          {
                            "identifier": "cap",
                            "quantity": 1
                          }
                        ],
                        "product_models": [
                          {
                            "code": "model-biker-jacket-leather",
                            "quantity": 2
                          }
                        ]
                      }
                    },
                    "quality_scores": [
                      {
                        "scope": "ecommerce",
                        "locale": "en_US",
                        "data": "A"
                      },
                      {
                        "scope": "ecommerce",
                        "locale": "fr_FR",
                        "data": "B"
                      },
                      {
                        "scope": "tablet",
                        "locale": "en_US",
                        "data": "D"
                      },
                      {
                        "scope": "tablet",
                        "locale": "fr_FR",
                        "data": "E"
                      }
                    ],
                    "created": "2017-10-02T15:03:55+02:00",
                    "updated": "2017-10-02T15:03:55+02:00"
                  },
                  "x-examples": {
                    "x-example-1": "{\"code\": \"sub_sweat_option_a\", \"parent\": \"sweat\", \"values\": {\"a_simple_select\": [{\"locale\": null, \"scope\": null, \"data\": \"optionA\"}]}}",
                    "x-example-2": "{\"code\": \"sub_sweat_option_b\", \"parent\": \"sweat\", \"values\": {\"a_simple_select\": [{\"locale\": null, \"scope\": null, \"data\": \"optionA\"}]}}",
                    "x-example-3": "{\"code\":\"tshirt\", \"parent\": \"root_tshirt\", \"family_variant\":\"clothesvariant\",\"values\":{\"description\":[{\"scope\":\"ecommerce\",\"locale\":\"en_US\",\"data\":\"My amazing tshirt\"}]}}"
                  }
                }
              }
            },
            "required": false
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "line": {
                        "type": "integer",
                        "description": "Line number"
                      },
                      "identifier": {
                        "type": "string",
                        "description": "Resource identifier, only filled when the resource is a product"
                      },
                      "code": {
                        "type": "string",
                        "description": "Resource code, only filled when the resource is not a product"
                      },
                      "status_code": {
                        "type": "integer",
                        "description": "HTTP status code, see <a href=\"/documentation/responses.html#client-errors\">Client errors</a> to understand the meaning of each code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "x-example-1": {
                  "example": "{\"line\":1,\"code\":\"sub_sweat_option_a\",\"status_code\":204}"
                },
                "x-example-2": {
                  "example": "{\"line\":2,\"code\":\"sub_sweat_option_b\",\"status_code\":422,\"message\":\"Validation failed.\",\"errors\":[{\"property\":\"attribute\",\"message\":\"Cannot set value \\\"Option A\\\" for the attribute axis \\\"a_simple_select\\\", as another sibling entity already has this value\"}]}"
                },
                "x-example-3": {
                  "example": "{\"line\":3,\"code\":\"tshirt\",\"status_code\":201}"
                }
              },
              "x-details": "Returns a plain text response whose lines are JSON containing the status of each update or creation",
              "x-no-entity": true
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "413": {
              "description": "Request Entity Too Large",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 413
                },
                "message": {
                  "example": "Too many resources to process, 100 is the maximum allowed."
                }
              },
              "x-details": "There are too many resources to process (max 100) or the line of JSON is too long (max 1 000 000 characters)"
            },
            "415": {
              "description": "Unsupported Media type",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 415
                },
                "message": {
                  "example": "`xxx’ in `Content-Type’ header is not valid.  Only `application/vnd.akeneo.collection+json’ is allowed."
                }
              },
              "x-details": "The `Content-Type` header has to be `application/vnd.akeneo.collection+json`"
            }
          },
          "x-versions": [
            "2.x",
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-body-by-line": "Contains several lines, each line is a product model in JSON standard format",
          "x-codegen-request-body-name": "body"
        }
      },
      "/api/rest/v1/product-models/{code}": {
        "get": {
          "tags": [
            "Product model"
          ],
          "summary": "Get a product model",
          "description": "This endpoint allows you to get the information about a given product model. In the Entreprise Edition, since the v2.0, permissions based on your user groups are applied to the product model you request.",
          "operationId": "get_product_models__code_",
          "parameters": [
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "with_quality_scores",
              "in": "query",
              "description": "Return product model quality scores in the response. <strong>(Only available since the 6.0 version)</strong>",
              "schema": {
                "type": "boolean",
                "x-from-version": "6.0"
              },
              "x-from-version": "6.0"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "required": [
                      "code",
                      "family_variant"
                    ],
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Product model code",
                        "x-immutable": true
                      },
                      "family": {
                        "type": "string",
                        "description": "<a href='api-reference.html#Family'>Family</a> code  from which the product inherits its attributes and attributes requirements (since the 3.2)",
                        "x-validation-rules": "It is equal to an existing family code",
                        "x-immutable": true,
                        "x-from-version": "3.2"
                      },
                      "family_variant": {
                        "type": "string",
                        "description": "Family variant code from which the product model inherits its attributes and variant attributes",
                        "x-validation-rules": "It is equal to an existing family variant code that belong to the family given in the `family` field",
                        "x-immutable": true
                      },
                      "parent": {
                        "type": "string",
                        "description": "Code of the parent <a href='api-reference.html#Productmodel'>product model</a>. This parent can be modified since the 2.3.",
                        "default": "null",
                        "x-validation-rules": "&bull; It is equal to an existing product model code&#10;&bull; This product model has the same family variant as the one given in the `family_variant field`",
                        "x-from-version": "2.3"
                      },
                      "categories": {
                        "type": "array",
                        "description": "Codes of the <a href='api-reference.html#Category'>categories</a> in which the product model is categorized",
                        "items": {
                          "type": "string"
                        },
                        "x-validation-rules": "Each string of the array is equal to an existing category code"
                      },
                      "values": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "scope": {
                                "type": "string",
                                "description": "<a href='api-reference.html#Channel'>Channel</a> code of the product value"
                              },
                              "locale": {
                                "type": "string",
                                "description": "<a href='api-reference.html#Locale'>Locale</a> code of the product value"
                              },
                              "data": {
                                "type": "object",
                                "properties": {},
                                "description": "<a href='api-reference.html#Productuuid'>Product</a> value"
                              }
                            }
                          }
                        },
                        "description": "Product model attributes values, see <a href='/concepts/products.html#focus-on-the-product-values'>Product values</a> section for more details",
                        "x-validation-rules": "Validation rules detailed in Product values section"
                      },
                      "associations": {
                        "type": "object",
                        "properties": {
                          "associationTypeCode": {
                            "type": "object",
                            "properties": {
                              "groups": {
                                "type": "array",
                                "description": "Array of groups codes with which the product is in relation",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "products": {
                                "type": "array",
                                "description": "Array of product identifiers with which the product is in relation",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "product_models": {
                                "type": "array",
                                "description": "Array of product model codes with which the product is in relation (only available since the v2.1)",
                                "items": {
                                  "type": "string"
                                },
                                "x-from-version": "2.1"
                              }
                            }
                          }
                        },
                        "description": "Several associations related to groups, product and/or other product models, grouped by association types",
                        "x-validation-rules": "&bull; The `associationTypeCode` is the code of an existing association type. &#10;&bull; Each string in the array of the property `groups` is the code of an existing group. &#10;&bull; Each string in the array of the property `products` is the identifier of an existing product. &#10;&bull; Each string in the array of the property `product_models` is the code of an existing product model."
                      },
                      "quantified_associations": {
                        "type": "object",
                        "properties": {
                          "quantifiedAssociationTypeCode": {
                            "type": "object",
                            "properties": {
                              "products": {
                                "type": "array",
                                "description": "Array of objects containing product identifiers and quantities with which the product model is in relation",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "identifier": {
                                      "type": "string"
                                    },
                                    "quantity": {
                                      "type": "integer"
                                    }
                                  }
                                }
                              },
                              "product_models": {
                                "type": "array",
                                "description": "Array of objects containing product model codes and quantities with which the product model is in relation",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "string"
                                    },
                                    "quantity": {
                                      "type": "integer"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "description": "Several quantified associations related to products and/or product models, grouped by quantified association types (only available since the 5.0)",
                        "x-validation-rules": "&bull; The `quantifiedAssociationTypeCode` is the code of an existing association type which provides quantity information. &#10;&bull; Each object in the array of the property `products` contains the identifier of an existing product and the quantity of it. &#10;&bull; Each object in the array of the property `product_models` contains the code of an existing product model and the quantity of it.",
                        "x-from-version": "5.0"
                      },
                      "created": {
                        "type": "string",
                        "description": "Date of creation",
                        "format": "dateTime",
                        "x-immutable": true,
                        "x-read-only": true
                      },
                      "updated": {
                        "type": "string",
                        "description": "Date of the last update",
                        "format": "dateTime",
                        "x-read-only": true
                      },
                      "metadata": {
                        "type": "object",
                        "properties": {
                          "workflow_status": {
                            "type": "string",
                            "description": "Status of the product model regarding the user permissions",
                            "enum": [
                              "read_only",
                              "draft_in_progress",
                              "proposal_waiting_for_approval",
                              "working_copy"
                            ]
                          }
                        },
                        "description": "More information around the product model (only available since the v2.3 in the Enterprise Edition)",
                        "x-immutable": true,
                        "x-read-only": true,
                        "x-from-version": "2.3"
                      },
                      "quality_scores": {
                        "type": "object",
                        "properties": {},
                        "description": "Product model quality scores for each channel/locale combination (<strong>only available since the 7.0 version</strong> and when the \"with_quality_scores\" query parameter is set to \"true\")",
                        "x-immutable": true,
                        "x-read-only": true,
                        "x-from-version": "7.0"
                      }
                    },
                    "example": {
                      "code": "model-biker-jacket-leather",
                      "family": "clothing",
                      "family_variant": "clothing_material_size",
                      "parent": "model-biker-jacket",
                      "categories": [
                        "summer_collection"
                      ],
                      "values": {
                        "color": [
                          {
                            "data": "antique_white"
                          }
                        ],
                        "material": [
                          {
                            "data": "leather"
                          }
                        ],
                        "variation_name": [
                          {
                            "locale": "en_US",
                            "data": "Biker jacket leather"
                          }
                        ],
                        "name": [
                          {
                            "locale": "en_US",
                            "data": "Biker jacket"
                          }
                        ],
                        "collection": [
                          {
                            "data": [
                              "summer_2017"
                            ]
                          }
                        ],
                        "description": [
                          {
                            "locale": "en_US",
                            "scope": "ecommerce",
                            "data": "Biker jacket"
                          }
                        ]
                      },
                      "associations": {
                        "PACK": {
                          "products": [
                            "sunglass"
                          ],
                          "product_models": [],
                          "groups": []
                        }
                      },
                      "quantified_associations": {
                        "PRODUCT_SET": {
                          "products": [
                            {
                              "identifier": "top",
                              "quantity": 2
                            },
                            {
                              "identifier": "cap",
                              "quantity": 1
                            }
                          ],
                          "product_models": [
                            {
                              "code": "model-biker-jacket-leather",
                              "quantity": 2
                            }
                          ]
                        }
                      },
                      "quality_scores": [
                        {
                          "scope": "ecommerce",
                          "locale": "en_US",
                          "data": "A"
                        },
                        {
                          "scope": "ecommerce",
                          "locale": "fr_FR",
                          "data": "B"
                        },
                        {
                          "scope": "tablet",
                          "locale": "en_US",
                          "data": "D"
                        },
                        {
                          "scope": "tablet",
                          "locale": "fr_FR",
                          "data": "E"
                        }
                      ],
                      "created": "2017-10-02T15:03:55+02:00",
                      "updated": "2017-10-02T15:03:55+02:00"
                    }
                  }
                }
              },
              "x-details": "Returns the content of the product model in JSON standard format."
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "404": {
              "description": "Resource not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 404
                },
                "message": {
                  "example": "Resource `my_resource_code` does not exist."
                }
              },
              "x-details": "The resource code given in the URI does not correspond to any existing PIM resource"
            },
            "406": {
              "description": "Not Acceptable",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 406
                },
                "message": {
                  "example": "`xxx’ in `Accept` header is not valid. Only `application/json` is allowed."
                }
              },
              "x-details": "The `Accept` header is not `application/json` but it should"
            }
          },
          "x-versions": [
            "2.x",
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ]
        },
        "delete": {
          "tags": [
            "Product model"
          ],
          "summary": "Delete a product model",
          "description": "This endpoint allows you to delete a given product model. All its children, product models and variant products, will be also deleted. In the Enterprise Edition, the permissions based on your connection user group are applied to the product model you try to delete.",
          "operationId": "delete_product_models__code_",
          "parameters": [
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No content to return",
              "content": {},
              "x-details": "Means that the deletion was successful"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "404": {
              "description": "Resource not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 404
                },
                "message": {
                  "example": "Resource `my_resource_code` does not exist."
                }
              },
              "x-details": "The resource code given in the URI does not correspond to any existing PIM resource"
            }
          },
          "x-versions": [
            "6.0",
            "7.0",
            "SaaS"
          ]
        },
        "patch": {
          "tags": [
            "Product model"
          ],
          "summary": "Update/create a product model",
          "description": "This endpoint allows you to update a given product model. Learn more about <a href=\"/documentation/update.html#update-behavior\">Update behavior</a>. Note that if no product model exists for the given code, it creates it. In the Enterprise Edition PIM since the 2.3, permissions based on your user groups are applied to the product model you try to update. It may result in the creation of a draft if you only have edit rights through the product model's categories.",
          "operationId": "patch_product_models__code_",
          "parameters": [
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "code",
                    "family_variant"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Product model code",
                      "x-immutable": true
                    },
                    "family": {
                      "type": "string",
                      "description": "<a href='api-reference.html#Family'>Family</a> code  from which the product inherits its attributes and attributes requirements (since the 3.2)",
                      "x-validation-rules": "It is equal to an existing family code",
                      "x-immutable": true,
                      "x-from-version": "3.2"
                    },
                    "family_variant": {
                      "type": "string",
                      "description": "Family variant code from which the product model inherits its attributes and variant attributes",
                      "x-validation-rules": "It is equal to an existing family variant code that belong to the family given in the `family` field",
                      "x-immutable": true
                    },
                    "parent": {
                      "type": "string",
                      "description": "Code of the parent <a href='api-reference.html#Productmodel'>product model</a>. This parent can be modified since the 2.3.",
                      "default": "null",
                      "x-validation-rules": "&bull; It is equal to an existing product model code&#10;&bull; This product model has the same family variant as the one given in the `family_variant field`",
                      "x-from-version": "2.3"
                    },
                    "categories": {
                      "type": "array",
                      "description": "Codes of the <a href='api-reference.html#Category'>categories</a> in which the product model is categorized",
                      "items": {
                        "type": "string"
                      },
                      "x-validation-rules": "Each string of the array is equal to an existing category code"
                    },
                    "values": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "scope": {
                              "type": "string",
                              "description": "<a href='api-reference.html#Channel'>Channel</a> code of the product value"
                            },
                            "locale": {
                              "type": "string",
                              "description": "<a href='api-reference.html#Locale'>Locale</a> code of the product value"
                            },
                            "data": {
                              "type": "object",
                              "properties": {},
                              "description": "<a href='api-reference.html#Productuuid'>Product</a> value"
                            }
                          }
                        }
                      },
                      "description": "Product model attributes values, see <a href='/concepts/products.html#focus-on-the-product-values'>Product values</a> section for more details",
                      "x-validation-rules": "Validation rules detailed in Product values section"
                    },
                    "associations": {
                      "type": "object",
                      "properties": {
                        "associationTypeCode": {
                          "type": "object",
                          "properties": {
                            "groups": {
                              "type": "array",
                              "description": "Array of groups codes with which the product is in relation",
                              "items": {
                                "type": "string"
                              }
                            },
                            "products": {
                              "type": "array",
                              "description": "Array of product identifiers with which the product is in relation",
                              "items": {
                                "type": "string"
                              }
                            },
                            "product_models": {
                              "type": "array",
                              "description": "Array of product model codes with which the product is in relation (only available since the v2.1)",
                              "items": {
                                "type": "string"
                              },
                              "x-from-version": "2.1"
                            }
                          }
                        }
                      },
                      "description": "Several associations related to groups, product and/or other product models, grouped by association types",
                      "x-validation-rules": "&bull; The `associationTypeCode` is the code of an existing association type. &#10;&bull; Each string in the array of the property `groups` is the code of an existing group. &#10;&bull; Each string in the array of the property `products` is the identifier of an existing product. &#10;&bull; Each string in the array of the property `product_models` is the code of an existing product model."
                    },
                    "quantified_associations": {
                      "type": "object",
                      "properties": {
                        "quantifiedAssociationTypeCode": {
                          "type": "object",
                          "properties": {
                            "products": {
                              "type": "array",
                              "description": "Array of objects containing product identifiers and quantities with which the product model is in relation",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "identifier": {
                                    "type": "string"
                                  },
                                  "quantity": {
                                    "type": "integer"
                                  }
                                }
                              }
                            },
                            "product_models": {
                              "type": "array",
                              "description": "Array of objects containing product model codes and quantities with which the product model is in relation",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "code": {
                                    "type": "string"
                                  },
                                  "quantity": {
                                    "type": "integer"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "description": "Several quantified associations related to products and/or product models, grouped by quantified association types (only available since the 5.0)",
                      "x-validation-rules": "&bull; The `quantifiedAssociationTypeCode` is the code of an existing association type which provides quantity information. &#10;&bull; Each object in the array of the property `products` contains the identifier of an existing product and the quantity of it. &#10;&bull; Each object in the array of the property `product_models` contains the code of an existing product model and the quantity of it.",
                      "x-from-version": "5.0"
                    },
                    "created": {
                      "type": "string",
                      "description": "Date of creation",
                      "format": "dateTime",
                      "x-immutable": true,
                      "x-read-only": true
                    },
                    "updated": {
                      "type": "string",
                      "description": "Date of the last update",
                      "format": "dateTime",
                      "x-read-only": true
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "workflow_status": {
                          "type": "string",
                          "description": "Status of the product model regarding the user permissions",
                          "enum": [
                            "read_only",
                            "draft_in_progress",
                            "proposal_waiting_for_approval",
                            "working_copy"
                          ]
                        }
                      },
                      "description": "More information around the product model (only available since the v2.3 in the Enterprise Edition)",
                      "x-immutable": true,
                      "x-read-only": true,
                      "x-from-version": "2.3"
                    },
                    "quality_scores": {
                      "type": "object",
                      "properties": {},
                      "description": "Product model quality scores for each channel/locale combination (<strong>only available since the 7.0 version</strong> and when the \"with_quality_scores\" query parameter is set to \"true\")",
                      "x-immutable": true,
                      "x-read-only": true,
                      "x-from-version": "7.0"
                    }
                  },
                  "example": {
                    "code": "model-biker-jacket-leather",
                    "family": "clothing",
                    "family_variant": "clothing_material_size",
                    "parent": "model-biker-jacket",
                    "categories": [
                      "summer_collection"
                    ],
                    "values": {
                      "color": [
                        {
                          "data": "antique_white"
                        }
                      ],
                      "material": [
                        {
                          "data": "leather"
                        }
                      ],
                      "variation_name": [
                        {
                          "locale": "en_US",
                          "data": "Biker jacket leather"
                        }
                      ],
                      "name": [
                        {
                          "locale": "en_US",
                          "data": "Biker jacket"
                        }
                      ],
                      "collection": [
                        {
                          "data": [
                            "summer_2017"
                          ]
                        }
                      ],
                      "description": [
                        {
                          "locale": "en_US",
                          "scope": "ecommerce",
                          "data": "Biker jacket"
                        }
                      ]
                    },
                    "associations": {
                      "PACK": {
                        "products": [
                          "sunglass"
                        ],
                        "product_models": [],
                        "groups": []
                      }
                    },
                    "quantified_associations": {
                      "PRODUCT_SET": {
                        "products": [
                          {
                            "identifier": "top",
                            "quantity": 2
                          },
                          {
                            "identifier": "cap",
                            "quantity": 1
                          }
                        ],
                        "product_models": [
                          {
                            "code": "model-biker-jacket-leather",
                            "quantity": 2
                          }
                        ]
                      }
                    },
                    "quality_scores": [
                      {
                        "scope": "ecommerce",
                        "locale": "en_US",
                        "data": "A"
                      },
                      {
                        "scope": "ecommerce",
                        "locale": "fr_FR",
                        "data": "B"
                      },
                      {
                        "scope": "tablet",
                        "locale": "en_US",
                        "data": "D"
                      },
                      {
                        "scope": "tablet",
                        "locale": "fr_FR",
                        "data": "E"
                      }
                    ],
                    "created": "2017-10-02T15:03:55+02:00",
                    "updated": "2017-10-02T15:03:55+02:00"
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "Created",
              "headers": {
                "Location": {
                  "description": "URI of the created resource",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {},
              "x-details": "Means that the creation was successful"
            },
            "204": {
              "description": "No content to return",
              "headers": {
                "Location": {
                  "description": "URI of the updated resource",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {},
              "x-details": "Means that the update was successful"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "415": {
              "description": "Unsupported Media type",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 415
                },
                "message": {
                  "example": "`xxx’ in `Content-Type’ header is not valid.  Only `application/json’ is allowed."
                }
              },
              "x-details": "The `Content-Type` header has to be `application/json`"
            },
            "422": {
              "description": "Unprocessable entity",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 422
                },
                "message": {
                  "example": "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
                },
                "_links": {
                  "example": {
                    "documentation": {
                      "href": "http://api.akeneo.com/api-reference.html"
                    }
                  }
                }
              },
              "x-details": "The validation of the entity given in the body of the request failed"
            }
          },
          "x-versions": [
            "2.x",
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-codegen-request-body-name": "body"
        }
      },
      "/api/rest/v1/product-models/{code}/proposal": {
        "post": {
          "tags": [
            "Product model"
          ],
          "summary": "Submit a draft for approval",
          "description": "This endpoint allows you to submit a product model draft for approval.",
          "operationId": "post_product_model_proposal",
          "parameters": [
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Submitted",
              "headers": {
                "Location": {
                  "description": "URI of the created resource",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {},
              "x-details": "Means that the draft submission was successful"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "415": {
              "description": "Unsupported Media type",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 415
                },
                "message": {
                  "example": "`xxx’ in `Content-Type’ header is not valid.  Only `application/json’ is allowed."
                }
              },
              "x-details": "The `Content-Type` header has to be `application/json`"
            },
            "422": {
              "description": "Unprocessable entity",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 422
                },
                "message": {
                  "example": "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
                },
                "_links": {
                  "example": {
                    "documentation": {
                      "href": "http://api.akeneo.com/api-reference.html"
                    }
                  }
                }
              },
              "x-details": "The validation of the entity given in the body of the request failed"
            }
          },
          "x-versions": [
            "2.3",
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-ee": true
        }
      },
      "/api/rest/v1/product-models/{code}/draft": {
        "get": {
          "tags": [
            "Product model"
          ],
          "summary": "Get a draft",
          "description": "This endpoint allows you to get the information about a given product model draft.",
          "operationId": "get_product_model_draft__code_",
          "parameters": [
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "required": [
                      "code",
                      "family_variant"
                    ],
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Product model code",
                        "x-immutable": true
                      },
                      "family": {
                        "type": "string",
                        "description": "<a href='api-reference.html#Family'>Family</a> code  from which the product inherits its attributes and attributes requirements (since the 3.2)",
                        "x-validation-rules": "It is equal to an existing family code",
                        "x-immutable": true,
                        "x-from-version": "3.2"
                      },
                      "family_variant": {
                        "type": "string",
                        "description": "Family variant code from which the product model inherits its attributes and variant attributes",
                        "x-validation-rules": "It is equal to an existing family variant code that belong to the family given in the `family` field",
                        "x-immutable": true
                      },
                      "parent": {
                        "type": "string",
                        "description": "Code of the parent <a href='api-reference.html#Productmodel'>product model</a>. This parent can be modified since the 2.3.",
                        "default": "null",
                        "x-validation-rules": "&bull; It is equal to an existing product model code&#10;&bull; This product model has the same family variant as the one given in the `family_variant field`",
                        "x-from-version": "2.3"
                      },
                      "categories": {
                        "type": "array",
                        "description": "Codes of the <a href='api-reference.html#Category'>categories</a> in which the product model is categorized",
                        "items": {
                          "type": "string"
                        },
                        "x-validation-rules": "Each string of the array is equal to an existing category code"
                      },
                      "values": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "scope": {
                                "type": "string",
                                "description": "<a href='api-reference.html#Channel'>Channel</a> code of the product value"
                              },
                              "locale": {
                                "type": "string",
                                "description": "<a href='api-reference.html#Locale'>Locale</a> code of the product value"
                              },
                              "data": {
                                "type": "object",
                                "properties": {},
                                "description": "<a href='api-reference.html#Productuuid'>Product</a> value"
                              }
                            }
                          }
                        },
                        "description": "Product model attributes values, see <a href='/concepts/products.html#focus-on-the-product-values'>Product values</a> section for more details",
                        "x-validation-rules": "Validation rules detailed in Product values section"
                      },
                      "associations": {
                        "type": "object",
                        "properties": {
                          "associationTypeCode": {
                            "type": "object",
                            "properties": {
                              "groups": {
                                "type": "array",
                                "description": "Array of groups codes with which the product is in relation",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "products": {
                                "type": "array",
                                "description": "Array of product identifiers with which the product is in relation",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "product_models": {
                                "type": "array",
                                "description": "Array of product model codes with which the product is in relation (only available since the v2.1)",
                                "items": {
                                  "type": "string"
                                },
                                "x-from-version": "2.1"
                              }
                            }
                          }
                        },
                        "description": "Several associations related to groups, product and/or other product models, grouped by association types",
                        "x-validation-rules": "&bull; The `associationTypeCode` is the code of an existing association type. &#10;&bull; Each string in the array of the property `groups` is the code of an existing group. &#10;&bull; Each string in the array of the property `products` is the identifier of an existing product. &#10;&bull; Each string in the array of the property `product_models` is the code of an existing product model."
                      },
                      "quantified_associations": {
                        "type": "object",
                        "properties": {
                          "quantifiedAssociationTypeCode": {
                            "type": "object",
                            "properties": {
                              "products": {
                                "type": "array",
                                "description": "Array of objects containing product identifiers and quantities with which the product model is in relation",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "identifier": {
                                      "type": "string"
                                    },
                                    "quantity": {
                                      "type": "integer"
                                    }
                                  }
                                }
                              },
                              "product_models": {
                                "type": "array",
                                "description": "Array of objects containing product model codes and quantities with which the product model is in relation",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "string"
                                    },
                                    "quantity": {
                                      "type": "integer"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "description": "Several quantified associations related to products and/or product models, grouped by quantified association types (only available since the 5.0)",
                        "x-validation-rules": "&bull; The `quantifiedAssociationTypeCode` is the code of an existing association type which provides quantity information. &#10;&bull; Each object in the array of the property `products` contains the identifier of an existing product and the quantity of it. &#10;&bull; Each object in the array of the property `product_models` contains the code of an existing product model and the quantity of it.",
                        "x-from-version": "5.0"
                      },
                      "created": {
                        "type": "string",
                        "description": "Date of creation",
                        "format": "dateTime",
                        "x-immutable": true,
                        "x-read-only": true
                      },
                      "updated": {
                        "type": "string",
                        "description": "Date of the last update",
                        "format": "dateTime",
                        "x-read-only": true
                      },
                      "metadata": {
                        "type": "object",
                        "properties": {
                          "workflow_status": {
                            "type": "string",
                            "description": "Status of the product model regarding the user permissions",
                            "enum": [
                              "read_only",
                              "draft_in_progress",
                              "proposal_waiting_for_approval",
                              "working_copy"
                            ]
                          }
                        },
                        "description": "More information around the product model (only available since the v2.3 in the Enterprise Edition)",
                        "x-immutable": true,
                        "x-read-only": true,
                        "x-from-version": "2.3"
                      },
                      "quality_scores": {
                        "type": "object",
                        "properties": {},
                        "description": "Product model quality scores for each channel/locale combination (<strong>only available since the 7.0 version</strong> and when the \"with_quality_scores\" query parameter is set to \"true\")",
                        "x-immutable": true,
                        "x-read-only": true,
                        "x-from-version": "7.0"
                      }
                    },
                    "example": {
                      "code": "model-biker-jacket-leather",
                      "family": "clothing",
                      "family_variant": "clothing_material_size",
                      "parent": "model-biker-jacket",
                      "categories": [
                        "summer_collection"
                      ],
                      "values": {
                        "color": [
                          {
                            "data": "antique_white"
                          }
                        ],
                        "material": [
                          {
                            "data": "leather"
                          }
                        ],
                        "variation_name": [
                          {
                            "locale": "en_US",
                            "data": "Biker jacket leather"
                          }
                        ],
                        "name": [
                          {
                            "locale": "en_US",
                            "data": "Biker jacket"
                          }
                        ],
                        "collection": [
                          {
                            "data": [
                              "summer_2017"
                            ]
                          }
                        ],
                        "description": [
                          {
                            "locale": "en_US",
                            "scope": "ecommerce",
                            "data": "Biker jacket"
                          }
                        ]
                      },
                      "associations": {
                        "PACK": {
                          "products": [
                            "sunglass"
                          ],
                          "product_models": [],
                          "groups": []
                        }
                      },
                      "quantified_associations": {
                        "PRODUCT_SET": {
                          "products": [
                            {
                              "identifier": "top",
                              "quantity": 2
                            },
                            {
                              "identifier": "cap",
                              "quantity": 1
                            }
                          ],
                          "product_models": [
                            {
                              "code": "model-biker-jacket-leather",
                              "quantity": 2
                            }
                          ]
                        }
                      },
                      "quality_scores": [
                        {
                          "scope": "ecommerce",
                          "locale": "en_US",
                          "data": "A"
                        },
                        {
                          "scope": "ecommerce",
                          "locale": "fr_FR",
                          "data": "B"
                        },
                        {
                          "scope": "tablet",
                          "locale": "en_US",
                          "data": "D"
                        },
                        {
                          "scope": "tablet",
                          "locale": "fr_FR",
                          "data": "E"
                        }
                      ],
                      "created": "2017-10-02T15:03:55+02:00",
                      "updated": "2017-10-02T15:03:55+02:00"
                    }
                  }
                }
              },
              "x-details": "Returns the content of the draft in JSON standard format"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "404": {
              "description": "Resource not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 404
                },
                "message": {
                  "example": "Resource `my_resource_code` does not exist."
                }
              },
              "x-details": "The resource code given in the URI does not correspond to any existing PIM resource"
            },
            "406": {
              "description": "Not Acceptable",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 406
                },
                "message": {
                  "example": "`xxx’ in `Accept` header is not valid. Only `application/json` is allowed."
                }
              },
              "x-details": "The `Accept` header is not `application/json` but it should"
            }
          },
          "x-versions": [
            "2.3",
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-ee": true
        }
      },
      "/api/rest/v1/published-products": {
        "get": {
          "tags": [
            "Published product"
          ],
          "summary": "Get list of published products",
          "description": "This endpoint allows you to get a list of published products. Published products are paginated and they can be filtered.",
          "operationId": "get_published_products",
          "parameters": [
            {
              "name": "search",
              "in": "query",
              "description": "Filter published products, for more details see the <a href=\"/documentation/filter.html\">Filters</a> section",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "scope",
              "in": "query",
              "description": "Filter published product values to return scopable attributes for the given channel as well as the non localizable/non scopable attributes, for more details see the <a href=\"/documentation/filter.html#filter-published-product-values\">Filter on published product values</a> section",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "locales",
              "in": "query",
              "description": "Filter published product values to return localizable attributes for the given locales as well as the non localizable/non scopable attributes, for more details see the <a href=\"/documentation/filter.html#filter-published-product-values\">Filter on published product values</a> section",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "attributes",
              "in": "query",
              "description": "Filter published product values to only return those concerning the given attributes, for more details see the <a href=\"/documentation/filter.html#filter-product-values\">Filter on product values</a> section",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "pagination_type",
              "in": "query",
              "description": "Pagination method type, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
              "schema": {
                "type": "string",
                "default": "page",
                "enum": [
                  "page",
                  "search_after"
                ],
                "x-validation-rules": "One of the following values"
              },
              "x-validation-rules": "One of the following values"
            },
            {
              "name": "page",
              "in": "query",
              "description": "Number of the page to retrieve when using the `page` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html#pagination\">Pagination</a> section",
              "schema": {
                "type": "integer",
                "default": 1
              }
            },
            {
              "name": "search_after",
              "in": "query",
              "description": "Cursor when using the `search_after` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
              "schema": {
                "type": "string",
                "default": "cursor to the first page"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
              "schema": {
                "maximum": 100,
                "minimum": 1,
                "type": "integer",
                "default": 10
              }
            },
            {
              "name": "with_count",
              "in": "query",
              "description": "Return the count of items in the response. Be carefull with that, on a big catalog, it can decrease performance in a significative way",
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Return published products paginated",
              "content": {
                "application/json": {
                  "schema": {
                    "title": "Published products",
                    "type": "object",
                    "properties": {
                      "_embedded": {
                        "type": "object",
                        "properties": {
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "_links": {
                                      "type": "object",
                                      "properties": {
                                        "self": {
                                          "type": "object",
                                          "properties": {
                                            "href": {
                                              "type": "string",
                                              "description": "URI of the resource"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "required": [
                                    "identifier"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "identifier": {
                                      "type": "string",
                                      "description": "Published product identifier, i.e. the value of the only `pim_catalog_identifier` attribute"
                                    },
                                    "enabled": {
                                      "type": "boolean",
                                      "description": "Whether the published product is enable",
                                      "default": true
                                    },
                                    "family": {
                                      "type": "string",
                                      "description": "<a href='api-reference.html#Family'>Family</a> code from which the published product inherits its attributes and attributes requirements",
                                      "default": "null",
                                      "x-validation-rules": "It is equal to an existing family code"
                                    },
                                    "categories": {
                                      "type": "array",
                                      "description": "Codes of the <a href='api-reference.html#Category'>categories</a> in which the published product is classified",
                                      "items": {
                                        "type": "string"
                                      },
                                      "x-validation-rules": "Each string of the array is equal to an existing category code"
                                    },
                                    "groups": {
                                      "type": "array",
                                      "description": "Codes of the groups to which the published product belong",
                                      "items": {
                                        "type": "string"
                                      },
                                      "x-validation-rules": "Each string of the array is equal to an existing group code"
                                    },
                                    "values": {
                                      "type": "object",
                                      "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "scope": {
                                              "type": "string",
                                              "description": "<a href='api-reference.html#Channel'>Channel</a> code of the product value"
                                            },
                                            "locale": {
                                              "type": "string",
                                              "description": "<a href='api-reference.html#Locale'>Locale</a> code of the product value"
                                            },
                                            "data": {
                                              "type": "object",
                                              "properties": {},
                                              "description": "<a href='api-reference.html#Productuuid'>Product</a> value"
                                            }
                                          }
                                        }
                                      },
                                      "description": "Published product attributes values, see <a href='/concepts/products.html#focus-on-the-product-values'>Product values</a> section for more details",
                                      "x-validation-rules": "Validation rules detailed in Product values section"
                                    },
                                    "associations": {
                                      "type": "object",
                                      "properties": {
                                        "associationTypeCode": {
                                          "type": "object",
                                          "properties": {
                                            "groups": {
                                              "type": "array",
                                              "description": "Array of groups codes with which the published product is in relation",
                                              "items": {
                                                "type": "string"
                                              }
                                            },
                                            "products": {
                                              "type": "array",
                                              "description": "Array of published product identifiers with which the published product is in relation",
                                              "items": {
                                                "type": "string"
                                              }
                                            },
                                            "product_models": {
                                              "type": "array",
                                              "description": "Array of product model codes with which the product is in relation (only available since the v2.1)",
                                              "items": {
                                                "type": "string"
                                              },
                                              "x-from-version": "2.1"
                                            }
                                          }
                                        }
                                      },
                                      "description": "Several associations related to groups and/or other published products, grouped by association types",
                                      "x-validation-rules": "&bull; The `associationTypeCode` is the code of an existing association type. &#10;&bull; Each string in the array of the property `groups` is the code of an existing group. &#10;&bull; Each string in the array of the property `products` is the identifier of an existing product. &#10;&bull; Identifiers used in the array of the property `products` cannot be equal to the published product identifier."
                                    },
                                    "quantified_associations": {
                                      "type": "object",
                                      "properties": {},
                                      "description": "Warning: associations with quantities are not compatible with the published products. The response will always be empty."
                                    },
                                    "created": {
                                      "type": "string",
                                      "description": "Date of creation",
                                      "format": "dateTime",
                                      "x-immutable": true,
                                      "x-read-only": true
                                    },
                                    "updated": {
                                      "type": "string",
                                      "description": "Date of the last update",
                                      "format": "dateTime",
                                      "x-read-only": true
                                    }
                                  },
                                  "example": {
                                    "identifier": "top",
                                    "enabled": true,
                                    "family": "tshirt",
                                    "categories": [
                                      "summer_collection"
                                    ],
                                    "groups": [],
                                    "values": {
                                      "name": [
                                        {
                                          "data": "Top",
                                          "locale": "en_US"
                                        },
                                        {
                                          "data": "Débardeur",
                                          "locale": "fr_FR"
                                        }
                                      ],
                                      "description": [
                                        {
                                          "data": "Summer top",
                                          "locale": "en_US",
                                          "scope": "ecommerce"
                                        },
                                        {
                                          "data": "Top",
                                          "locale": "en_US",
                                          "scope": "tablet"
                                        },
                                        {
                                          "data": "Débardeur pour l'été",
                                          "locale": "fr_FR",
                                          "scope": "ecommerce"
                                        },
                                        {
                                          "data": "Débardeur",
                                          "locale": "fr_FR",
                                          "scope": "tablet"
                                        }
                                      ],
                                      "price": [
                                        {
                                          "data": [
                                            {
                                              "amount": "15.5",
                                              "currency": "EUR"
                                            },
                                            {
                                              "amount": "15",
                                              "currency": "USD"
                                            }
                                          ]
                                        }
                                      ],
                                      "color": [
                                        {
                                          "data": "black"
                                        }
                                      ],
                                      "size": [
                                        {
                                          "data": "m"
                                        }
                                      ]
                                    },
                                    "created": "2016-06-23T18:24:44+02:00",
                                    "updated": "2016-06-25T17:56:12+02:00",
                                    "associations": {
                                      "PACK": {
                                        "products": [
                                          "sunglass"
                                        ],
                                        "product_models": [],
                                        "groups": []
                                      }
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      },
                      "_links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the current page of resources"
                              }
                            }
                          },
                          "first": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the first page of resources"
                              }
                            }
                          },
                          "previous": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the previous page of resources"
                              }
                            }
                          },
                          "next": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the next page of resources"
                              }
                            }
                          }
                        }
                      },
                      "current_page": {
                        "type": "integer",
                        "description": "Current page number"
                      }
                    }
                  }
                },
                "_links": {
                  "example": {
                    "self": {
                      "href": "https://demo.akeneo.com/api/rest/v1/published-products?page=3&limit=3"
                    },
                    "first": {
                      "href": "https://demo.akeneo.com/api/rest/v1/published-products?page=1&limit=3"
                    },
                    "previous": {
                      "href": "https://demo.akeneo.com/api/rest/v1/published-products?page=2&limit=3"
                    },
                    "next": {
                      "href": "https://demo.akeneo.com/api/rest/v1/published-products?page=4&limit=3"
                    }
                  }
                },
                "current_page": {
                  "example": 3
                },
                "_embedded": {
                  "example": {
                    "items": [
                      {
                        "_links": {
                          "self": {
                            "href": "https://demo.akeneo.com/api/rest/v1/published-products/top"
                          }
                        },
                        "identifier": "top",
                        "family": "tshirt",
                        "groups": [],
                        "categories": [
                          "summer_collection"
                        ],
                        "enabled": true,
                        "values": {
                          "name": [
                            {
                              "data": "Top",
                              "locale": "en_US"
                            },
                            {
                              "data": "Débardeur",
                              "locale": "fr_FR"
                            }
                          ],
                          "description": [
                            {
                              "data": "Summer top",
                              "locale": "en_US",
                              "scope": "ecommerce"
                            },
                            {
                              "data": "Top",
                              "locale": "en_US",
                              "scope": "tablet"
                            },
                            {
                              "data": "Débardeur pour l'été",
                              "locale": "fr_FR",
                              "scope": "ecommerce"
                            },
                            {
                              "data": "Débardeur",
                              "locale": "fr_FR",
                              "scope": "tablet"
                            }
                          ],
                          "price": [
                            {
                              "data": [
                                {
                                  "amount": "15.5",
                                  "currency": "EUR"
                                },
                                {
                                  "amount": "15",
                                  "currency": "USD"
                                }
                              ]
                            }
                          ],
                          "color": [
                            {
                              "data": "black"
                            }
                          ],
                          "size": [
                            {
                              "data": "m"
                            }
                          ]
                        },
                        "created": "2016-06-23T18:24:44+02:00",
                        "updated": "2016-06-25T17:56:12+02:00",
                        "associations": {
                          "PACK": {
                            "products": [
                              "sunglasses"
                            ],
                            "product_models": [],
                            "groups": []
                          }
                        }
                      },
                      {
                        "_links": {
                          "self": {
                            "href": "https://demo.akeneo.com/api/rest/v1/published-products/cap"
                          }
                        },
                        "identifier": "cap",
                        "family": "caps",
                        "groups": [],
                        "categories": [
                          "summer_collection"
                        ],
                        "enabled": true,
                        "values": {
                          "name": [
                            {
                              "data": "Cap",
                              "locale": "en_US"
                            },
                            {
                              "data": "Casquette",
                              "locale": "fr_FR"
                            }
                          ],
                          "description": [
                            {
                              "data": "Cap unisex",
                              "locale": "en_US",
                              "scope": "ecommerce"
                            },
                            {
                              "data": "Cap unisex",
                              "locale": "en_US",
                              "scope": "tablet"
                            },
                            {
                              "data": "Casquette unisexe",
                              "locale": "fr_FR",
                              "scope": "ecommerce"
                            },
                            {
                              "data": "Casquette unisexe",
                              "locale": "fr_FR",
                              "scope": "tablet"
                            }
                          ],
                          "price": [
                            {
                              "data": [
                                {
                                  "amount": "20",
                                  "currency": "EUR"
                                },
                                {
                                  "amount": "20",
                                  "currency": "USD"
                                }
                              ]
                            }
                          ],
                          "color": [
                            {
                              "data": "black"
                            }
                          ]
                        },
                        "created": "2016-06-23T18:24:44+02:00",
                        "updated": "2016-06-25T17:56:12+02:00",
                        "associations": {
                          "PACK": {
                            "products": [
                              "sunglasses"
                            ],
                            "product_models": [],
                            "groups": []
                          }
                        }
                      },
                      {
                        "_links": {
                          "self": {
                            "href": "https://demo.akeneo.com/api/rest/v1/published-products/sweat"
                          }
                        },
                        "identifier": "sweat",
                        "groups": [],
                        "categories": [
                          "winter_collection"
                        ],
                        "enabled": true,
                        "values": {},
                        "created": "2016-06-23T11:24:44+02:00",
                        "updated": "2016-06-23T11:24:44+02:00",
                        "associations": {}
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 400
                },
                "message": {
                  "example": "Invalid JSON message received"
                }
              },
              "x-details": "Can be caused by a malformed JSON request"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "406": {
              "description": "Not Acceptable",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 406
                },
                "message": {
                  "example": "`xxx’ in `Accept` header is not valid. Only `application/json` is allowed."
                }
              },
              "x-details": "The `Accept` header is not `application/json` but it should"
            },
            "422": {
              "description": "Unprocessable entity",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 422
                },
                "message": {
                  "example": "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
                },
                "_links": {
                  "example": {
                    "documentation": {
                      "href": "http://api.akeneo.com/api-reference.html"
                    }
                  }
                }
              },
              "x-details": "The validation of the entity given in the body of the request failed"
            }
          },
          "x-versions": [
            "2.x",
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-ee": true
        }
      },
      "/api/rest/v1/published-products/{code}": {
        "get": {
          "tags": [
            "Published product"
          ],
          "summary": "Get a published product",
          "description": "This endpoint allows you to get the information about a given published product.",
          "operationId": "get_published_products__code_",
          "parameters": [
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "required": [
                      "identifier"
                    ],
                    "type": "object",
                    "properties": {
                      "identifier": {
                        "type": "string",
                        "description": "Published product identifier, i.e. the value of the only `pim_catalog_identifier` attribute"
                      },
                      "enabled": {
                        "type": "boolean",
                        "description": "Whether the published product is enable",
                        "default": true
                      },
                      "family": {
                        "type": "string",
                        "description": "<a href='api-reference.html#Family'>Family</a> code from which the published product inherits its attributes and attributes requirements",
                        "default": "null",
                        "x-validation-rules": "It is equal to an existing family code"
                      },
                      "categories": {
                        "type": "array",
                        "description": "Codes of the <a href='api-reference.html#Category'>categories</a> in which the published product is classified",
                        "items": {
                          "type": "string"
                        },
                        "x-validation-rules": "Each string of the array is equal to an existing category code"
                      },
                      "groups": {
                        "type": "array",
                        "description": "Codes of the groups to which the published product belong",
                        "items": {
                          "type": "string"
                        },
                        "x-validation-rules": "Each string of the array is equal to an existing group code"
                      },
                      "values": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "scope": {
                                "type": "string",
                                "description": "<a href='api-reference.html#Channel'>Channel</a> code of the product value"
                              },
                              "locale": {
                                "type": "string",
                                "description": "<a href='api-reference.html#Locale'>Locale</a> code of the product value"
                              },
                              "data": {
                                "type": "object",
                                "properties": {},
                                "description": "<a href='api-reference.html#Productuuid'>Product</a> value"
                              }
                            }
                          }
                        },
                        "description": "Published product attributes values, see <a href='/concepts/products.html#focus-on-the-product-values'>Product values</a> section for more details",
                        "x-validation-rules": "Validation rules detailed in Product values section"
                      },
                      "associations": {
                        "type": "object",
                        "properties": {
                          "associationTypeCode": {
                            "type": "object",
                            "properties": {
                              "groups": {
                                "type": "array",
                                "description": "Array of groups codes with which the published product is in relation",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "products": {
                                "type": "array",
                                "description": "Array of published product identifiers with which the published product is in relation",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "product_models": {
                                "type": "array",
                                "description": "Array of product model codes with which the product is in relation (only available since the v2.1)",
                                "items": {
                                  "type": "string"
                                },
                                "x-from-version": "2.1"
                              }
                            }
                          }
                        },
                        "description": "Several associations related to groups and/or other published products, grouped by association types",
                        "x-validation-rules": "&bull; The `associationTypeCode` is the code of an existing association type. &#10;&bull; Each string in the array of the property `groups` is the code of an existing group. &#10;&bull; Each string in the array of the property `products` is the identifier of an existing product. &#10;&bull; Identifiers used in the array of the property `products` cannot be equal to the published product identifier."
                      },
                      "quantified_associations": {
                        "type": "object",
                        "properties": {},
                        "description": "Warning: associations with quantities are not compatible with the published products. The response will always be empty."
                      },
                      "created": {
                        "type": "string",
                        "description": "Date of creation",
                        "format": "dateTime",
                        "x-immutable": true,
                        "x-read-only": true
                      },
                      "updated": {
                        "type": "string",
                        "description": "Date of the last update",
                        "format": "dateTime",
                        "x-read-only": true
                      }
                    },
                    "example": {
                      "identifier": "top",
                      "enabled": true,
                      "family": "tshirt",
                      "categories": [
                        "summer_collection"
                      ],
                      "groups": [],
                      "values": {
                        "name": [
                          {
                            "data": "Top",
                            "locale": "en_US"
                          },
                          {
                            "data": "Débardeur",
                            "locale": "fr_FR"
                          }
                        ],
                        "description": [
                          {
                            "data": "Summer top",
                            "locale": "en_US",
                            "scope": "ecommerce"
                          },
                          {
                            "data": "Top",
                            "locale": "en_US",
                            "scope": "tablet"
                          },
                          {
                            "data": "Débardeur pour l'été",
                            "locale": "fr_FR",
                            "scope": "ecommerce"
                          },
                          {
                            "data": "Débardeur",
                            "locale": "fr_FR",
                            "scope": "tablet"
                          }
                        ],
                        "price": [
                          {
                            "data": [
                              {
                                "amount": "15.5",
                                "currency": "EUR"
                              },
                              {
                                "amount": "15",
                                "currency": "USD"
                              }
                            ]
                          }
                        ],
                        "color": [
                          {
                            "data": "black"
                          }
                        ],
                        "size": [
                          {
                            "data": "m"
                          }
                        ]
                      },
                      "created": "2016-06-23T18:24:44+02:00",
                      "updated": "2016-06-25T17:56:12+02:00",
                      "associations": {
                        "PACK": {
                          "products": [
                            "sunglass"
                          ],
                          "product_models": [],
                          "groups": []
                        }
                      }
                    }
                  }
                }
              },
              "x-details": "Returns the content of the published product in JSON standard format"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "404": {
              "description": "Resource not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 404
                },
                "message": {
                  "example": "Resource `my_resource_code` does not exist."
                }
              },
              "x-details": "The resource code given in the URI does not correspond to any existing PIM resource"
            },
            "406": {
              "description": "Not Acceptable",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 406
                },
                "message": {
                  "example": "`xxx’ in `Accept` header is not valid. Only `application/json` is allowed."
                }
              },
              "x-details": "The `Accept` header is not `application/json` but it should"
            }
          },
          "x-versions": [
            "2.x",
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-ee": true
        }
      },
      "/api/rest/v1/media-files": {
        "get": {
          "tags": [
            "Product media file"
          ],
          "summary": "Get a list of product media files",
          "description": "This endpoint allows you to get a list of media files that are used as attribute values in products or product models.",
          "operationId": "get_media_files",
          "parameters": [
            {
              "name": "page",
              "in": "query",
              "description": "Number of the page to retrieve when using the `page` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html#pagination\">Pagination</a> section",
              "schema": {
                "type": "integer",
                "default": 1
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
              "schema": {
                "maximum": 100,
                "minimum": 1,
                "type": "integer",
                "default": 10
              }
            },
            {
              "name": "with_count",
              "in": "query",
              "description": "Return the count of items in the response. Be carefull with that, on a big catalog, it can decrease performance in a significative way",
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Return media files paginated",
              "content": {
                "application/json": {
                  "schema": {
                    "title": "MediaFiles",
                    "type": "object",
                    "properties": {
                      "_embedded": {
                        "type": "object",
                        "properties": {
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "_links": {
                                      "type": "object",
                                      "properties": {
                                        "self": {
                                          "type": "object",
                                          "properties": {
                                            "href": {
                                              "type": "string",
                                              "description": "URI to get the metadata of the media file"
                                            }
                                          }
                                        },
                                        "download": {
                                          "type": "object",
                                          "properties": {
                                            "href": {
                                              "type": "string",
                                              "description": "URI to download the binaries of the media file"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "string",
                                      "description": "Media file code",
                                      "x-immutable": true
                                    },
                                    "original_filename": {
                                      "type": "string",
                                      "description": "Original filename of the media file"
                                    },
                                    "mime_type": {
                                      "type": "string",
                                      "description": "Mime type of the media file",
                                      "x-read-only": true
                                    },
                                    "size": {
                                      "type": "integer",
                                      "description": "Size of the media file",
                                      "x-read-only": true
                                    },
                                    "extension": {
                                      "type": "string",
                                      "description": "Extension of the media file",
                                      "x-read-only": true
                                    }
                                  },
                                  "example": {
                                    "code": "7/5/8/e/758e39d48ea7b42a55091434fd3d8b6cf3189b7f_10806799_1356.jpg",
                                    "original_filename": "10806799-1356.jpg",
                                    "mime_type": "image/jpeg",
                                    "size": 16070,
                                    "extension": "jpg"
                                  }
                                }
                              ]
                            }
                          }
                        }
                      },
                      "_links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the current page of resources"
                              }
                            }
                          },
                          "first": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the first page of resources"
                              }
                            }
                          },
                          "previous": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the previous page of resources"
                              }
                            }
                          },
                          "next": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the next page of resources"
                              }
                            }
                          }
                        }
                      },
                      "current_page": {
                        "type": "integer",
                        "description": "Current page number"
                      }
                    }
                  }
                },
                "_links": {
                  "example": {
                    "self": {
                      "href": "https://demo.akeneo.com/api/rest/v1/media-files?page=2&limit=4"
                    },
                    "first": {
                      "href": "https://demo.akeneo.com/api/rest/v1/media-files?page=1&limit=4"
                    },
                    "previous": {
                      "href": "https://demo.akeneo.com/api/rest/v1/media-files?page=1&limit=4"
                    },
                    "next": {
                      "href": "https://demo.akeneo.com/api/rest/v1/media-files?page=2&limit=4"
                    }
                  }
                },
                "current_page": {
                  "example": 2
                },
                "_embedded": {
                  "example": {
                    "items": [
                      {
                        "_links": {
                          "self": {
                            "href": "https://demo.akeneo.com/api/rest/v1/media-files/7/5/8/e/758e39d48ea7b42a55091434fd3d8b6cf3189b7f_10806799_1356.jpg"
                          },
                          "download": {
                            "href": "https://demo.akeneo.com/api/rest/v1/media-files/7/5/8/e/758e39d48ea7b42a55091434fd3d8b6cf3189b7f_10806799_1356.jpg/download"
                          }
                        },
                        "code": "7/5/8/e/758e39d48ea7b42a55091434fd3d8b6cf3189b7f_10806799_1356.jpg",
                        "original_filename": "10806799-1356.jpg",
                        "mime_type": "image/jpeg",
                        "size": 16070,
                        "extension": "jpg"
                      },
                      {
                        "_links": {
                          "self": {
                            "href": "https://demo.akeneo.com/api/rest/v1/media-files/d/0/3/2/d032a92d994df3ef67ee6746b7b7a795c2964e7c_10734346_1480.jpg"
                          },
                          "download": {
                            "href": "https://demo.akeneo.com/api/rest/v1/media-files/d/0/3/2/d032a92d994df3ef67ee6746b7b7a795c2964e7c_10734346_1480.jpg/download"
                          }
                        },
                        "code": "d/0/3/2/d032a92d994df3ef67ee6746b7b7a795c2964e7c_10734346_1480.jpg",
                        "original_filename": "10734346-1480.jpg",
                        "mime_type": "image/jpeg",
                        "size": 16454,
                        "extension": "jpg"
                      },
                      {
                        "_links": {
                          "self": {
                            "href": "https://demo.akeneo.com/api/rest/v1/media-files/5/1/d/8/51d81dc778ba1501a8f998f3ab5797569f3b9e25_12431976_8797.jpg"
                          },
                          "download": {
                            "href": "https://demo.akeneo.com/api/rest/v1/media-files/5/1/d/8/51d81dc778ba1501a8f998f3ab5797569f3b9e25_12431976_8797.jpg/download"
                          }
                        },
                        "code": "5/1/d/8/51d81dc778ba1501a8f998f3ab5797569f3b9e25_12431976_8797.jpg",
                        "original_filename": "12431976-8797.jpg",
                        "mime_type": "image/jpeg",
                        "size": 19725,
                        "extension": "jpg"
                      },
                      {
                        "_links": {
                          "self": {
                            "href": "https://demo.akeneo.com/api/rest/v1/media-files/0/c/b/0/0cb0c0e115dedba676f8d1ad8343e6207ab54c7b_107406_9841.jpg"
                          },
                          "download": {
                            "href": "https://demo.akeneo.com/api/rest/v1/media-files/0/c/b/0/0cb0c0e115dedba676f8d1ad8343e6207ab54c7b_107406_9841.jpg/download"
                          }
                        },
                        "code": "0/c/b/0/0cb0c0e115dedba676f8d1ad8343e6207ab54c7b_107406_9841.jpg",
                        "original_filename": "107406-9841.jpg",
                        "mime_type": "image/jpeg",
                        "size": 17639,
                        "extension": "jpg"
                      }
                    ]
                  }
                }
              }
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "406": {
              "description": "Not Acceptable",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 406
                },
                "message": {
                  "example": "`xxx’ in `Accept` header is not valid. Only `application/json` is allowed."
                }
              },
              "x-details": "The `Accept` header is not `application/json` but it should"
            }
          },
          "x-versions": [
            "1.7",
            "2.x",
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ]
        },
        "post": {
          "tags": [
            "Product media file"
          ],
          "summary": "Create a new product media file",
          "description": "This endpoint allows you to create a new media file and associate it to an attribute value of a given product or product model.",
          "operationId": "post_media_files",
          "parameters": [
            {
              "name": "Content-Type",
              "in": "header",
              "description": "Equal to 'multipart/form-data', no other value allowed",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "file"
                  ],
                  "type": "object",
                  "properties": {
                    "product": {
                      "type": "string",
                      "description": "The product to which the media file will be associated. It is a JSON string that follows this format '{\"identifier\":\"product_identifier\", \"attribute\":\"attribute_code\", \"scope\":\"channel_code\",\"locale\":\"locale_code\"}'. You have to either use this field or the `product_model` field, but not both at the same time."
                    },
                    "product_model": {
                      "type": "string",
                      "description": "The product model to which the media file will be associated. It is a JSON string that follows this format '{\"code\":\"product_model_code\", \"attribute\":\"attribute_code\", \"scope\":\"channel_code\",\"locale\":\"locale_code\"}'. You have to either use this field or the `product` field, but not both at the same time."
                    },
                    "file": {
                      "type": "string",
                      "description": "The binaries of the file",
                      "format": "binary"
                    }
                  }
                }
              }
            },
            "required": false
          },
          "responses": {
            "201": {
              "description": "Created",
              "headers": {
                "Location": {
                  "description": "URI of the created resource",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {},
              "x-details": "Means that the creation was successful"
            },
            "400": {
              "description": "Bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 400
                },
                "message": {
                  "example": "Invalid JSON message received"
                }
              },
              "x-details": "Can be caused by a malformed JSON request"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "415": {
              "description": "Unsupported Media type",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 415
                },
                "message": {
                  "example": "`xxx’ in `Content-Type’ header is not valid.  Only `multipart/form-data’ is allowed."
                }
              },
              "x-details": "The `Content-Type` header has to be `multipart/form-data`"
            },
            "422": {
              "description": "Unprocessable entity",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 422
                },
                "message": {
                  "example": "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
                },
                "_links": {
                  "example": {
                    "documentation": {
                      "href": "http://api.akeneo.com/api-reference.html"
                    }
                  }
                }
              },
              "x-details": "The validation of the entity given in the body of the request failed"
            }
          },
          "x-versions": [
            "1.7",
            "2.x",
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-codegen-request-body-name": "body"
        }
      },
      "/api/rest/v1/media-files/{code}": {
        "get": {
          "tags": [
            "Product media file"
          ],
          "summary": "Get a product media file",
          "description": "This endpoint allows you to get the information about a given media file that is used as an attribute value of a product or a product model.",
          "operationId": "get_media_files__code_",
          "parameters": [
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "_links": {
                        "type": "object",
                        "properties": {
                          "download": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI to download the binaries of the media file"
                              }
                            }
                          }
                        },
                        "x-read-only": true
                      },
                      "code": {
                        "type": "string",
                        "description": "Media file code",
                        "x-immutable": true
                      },
                      "extension": {
                        "type": "string",
                        "description": "Extension of the media file",
                        "x-read-only": true
                      },
                      "mime_type": {
                        "type": "string",
                        "description": "Mime type of the media file",
                        "x-read-only": true
                      },
                      "original_filename": {
                        "type": "string",
                        "description": "Original filename of the media file"
                      },
                      "size": {
                        "type": "integer",
                        "description": "Size of the media file",
                        "x-read-only": true
                      }
                    },
                    "example": {
                      "_links": {
                        "download": {
                          "href": "https://demo.akeneo.com/api/rest/v1/media-files/7/5/8/e/758e39d48ea7b42a55091434fd3d8b6cf3189b7f_10806799_1356.jpg/download"
                        }
                      },
                      "code": "7/5/8/e/758e39d48ea7b42a55091434fd3d8b6cf3189b7f_10806799_1356.jpg",
                      "original_filename": "10806799-1356.jpg",
                      "mime_type": "image/jpeg",
                      "size": 16070,
                      "extension": "jpg"
                    }
                  }
                }
              },
              "x-details": "Returns the content of the media file in JSON standard format"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "404": {
              "description": "Resource not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 404
                },
                "message": {
                  "example": "Resource `my_resource_code` does not exist."
                }
              },
              "x-details": "The resource code given in the URI does not correspond to any existing PIM resource"
            },
            "406": {
              "description": "Not Acceptable",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 406
                },
                "message": {
                  "example": "`xxx’ in `Accept` header is not valid. Only `application/json` is allowed."
                }
              },
              "x-details": "The `Accept` header is not `application/json` but it should"
            }
          },
          "x-versions": [
            "1.7",
            "2.x",
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ]
        }
      },
      "/api/rest/v1/media-files/{code}/download": {
        "get": {
          "tags": [
            "Product media file"
          ],
          "summary": "Download a product media file",
          "description": "This endpoint allows you to download a given media file that is used as an attribute value of a product or a product model.",
          "operationId": "get_media_files__code__download",
          "parameters": [
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {},
              "x-details": "Returns the binary of the media file",
              "x-content-type": "Mime-type of the media file"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "404": {
              "description": "Resource not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 404
                },
                "message": {
                  "example": "Resource `my_resource_code` does not exist."
                }
              },
              "x-details": "The resource code given in the URI does not correspond to any existing PIM resource"
            }
          },
          "x-content-type": "Mime-type of the media file",
          "x-versions": [
            "1.7",
            "2.x",
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ]
        }
      },
      "/api/rest/v1/families": {
        "get": {
          "tags": [
            "Family"
          ],
          "summary": "Get list of families",
          "description": "This endpoint allows you to get a list of families. Families are paginated and sorted by code.",
          "operationId": "get_families",
          "parameters": [
            {
              "name": "search",
              "in": "query",
              "description": "Filter families, for more details see the <a href=\"/documentation/filter.html#filter-families\">Filters</a> section.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page",
              "in": "query",
              "description": "Number of the page to retrieve when using the `page` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html#pagination\">Pagination</a> section",
              "schema": {
                "type": "integer",
                "default": 1
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
              "schema": {
                "maximum": 100,
                "minimum": 1,
                "type": "integer",
                "default": 10
              }
            },
            {
              "name": "with_count",
              "in": "query",
              "description": "Return the count of items in the response. Be carefull with that, on a big catalog, it can decrease performance in a significative way",
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Return families paginated",
              "content": {
                "application/json": {
                  "schema": {
                    "title": "Families",
                    "type": "object",
                    "properties": {
                      "_embedded": {
                        "type": "object",
                        "properties": {
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "_links": {
                                      "type": "object",
                                      "properties": {
                                        "self": {
                                          "type": "object",
                                          "properties": {
                                            "href": {
                                              "type": "string",
                                              "description": "URI of the resource"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "required": [
                                    "attribute_as_label",
                                    "code"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "string",
                                      "description": "Family code",
                                      "x-immutable": true
                                    },
                                    "attribute_as_label": {
                                      "type": "string",
                                      "description": "Attribute code used as label",
                                      "x-validation-rules": "&bull; It is equal to an existing attribute code &#10;&bull; This attribute code is in the array of the property `attributes` &#10;&bull; The type of this attribute is either `pim_catalog_identifier` or `pim_catalog_text`"
                                    },
                                    "attribute_as_image": {
                                      "type": "string",
                                      "description": "Attribute code used as the main picture in the user interface (only since v2.0)",
                                      "default": "null",
                                      "x-validation-rules": "&bull; It is equal to an existing attribute code &#10;&bull; This attribute code is in the array of the property `attributes` &#10;&bull; The type of this attribute is `pim_catalog_image`. Since v2.1, you can also use a `pim_assets_collection` attribute type",
                                      "x-from-version": "2.0"
                                    },
                                    "attributes": {
                                      "type": "array",
                                      "description": "Attributes codes that compose the family",
                                      "items": {
                                        "type": "string"
                                      },
                                      "x-validation-rules": "Each string of the array is an existing attribute code"
                                    },
                                    "attribute_requirements": {
                                      "type": "object",
                                      "properties": {
                                        "channelCode": {
                                          "type": "array",
                                          "items": {
                                            "type": "string",
                                            "description": "Attributes codes of the family that are required for the completeness calculation for the channel `channelCode`"
                                          }
                                        }
                                      },
                                      "description": "Attributes codes of the family that are required for the completeness calculation for each channel",
                                      "x-validation-rules": "&bull; Each string of these arrays is an existing attribute code &#10;&bull; These attribute codes are in the array of the property `attributes` &#10;&bull; The `channelCode` is the code of an existing and activated channel"
                                    },
                                    "labels": {
                                      "type": "object",
                                      "properties": {
                                        "localeCode": {
                                          "type": "string",
                                          "description": "Family label for the locale `localeCode`"
                                        }
                                      },
                                      "description": "Family labels for each locale",
                                      "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                                    }
                                  },
                                  "example": {
                                    "code": "caps",
                                    "attributes": [
                                      "sku",
                                      "name",
                                      "description",
                                      "price",
                                      "color",
                                      "picture"
                                    ],
                                    "attribute_as_label": "name",
                                    "attribute_as_image": "picture",
                                    "attribute_requirements": {
                                      "ecommerce": [
                                        "sku",
                                        "name",
                                        "description",
                                        "price",
                                        "color"
                                      ],
                                      "tablet": [
                                        "sku",
                                        "name",
                                        "description",
                                        "price"
                                      ]
                                    },
                                    "labels": {
                                      "en_US": "Caps",
                                      "fr_FR": "Casquettes"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      },
                      "_links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the current page of resources"
                              }
                            }
                          },
                          "first": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the first page of resources"
                              }
                            }
                          },
                          "previous": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the previous page of resources"
                              }
                            }
                          },
                          "next": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the next page of resources"
                              }
                            }
                          }
                        }
                      },
                      "current_page": {
                        "type": "integer",
                        "description": "Current page number"
                      }
                    }
                  }
                },
                "_links": {
                  "example": {
                    "self": {
                      "href": "https://demo.akeneo.com/api/rest/v1/families?page=2&limit=2"
                    },
                    "first": {
                      "href": "https://demo.akeneo.com/api/rest/v1/families?page=1&limit=2"
                    },
                    "previous": {
                      "href": "https://demo.akeneo.com/api/rest/v1/families?page=1&limit=2"
                    },
                    "next": {
                      "href": "https://demo.akeneo.com/api/rest/v1/families?page=3&limit=2"
                    }
                  }
                },
                "current_page": {
                  "example": 2
                },
                "_embedded": {
                  "example": {
                    "items": [
                      {
                        "_links": {
                          "self": {
                            "href": "https://demo.akeneo.com/api/rest/v1/families/tshirt"
                          }
                        },
                        "code": "tshirt",
                        "attributes": [
                          "sku",
                          "name",
                          "description",
                          "price",
                          "size",
                          "color",
                          "picture"
                        ],
                        "attribute_as_label": "name",
                        "attribute_as_image": "picture",
                        "attribute_requirements": {
                          "ecommerce": [
                            "sku",
                            "name",
                            "description",
                            "price",
                            "size",
                            "color"
                          ],
                          "tablet": [
                            "sku",
                            "name",
                            "description",
                            "price"
                          ]
                        },
                        "labels": {
                          "en_US": "Tshirt",
                          "fr_FR": "Tshirt"
                        }
                      },
                      {
                        "_links": {
                          "self": {
                            "href": "https://demo.akeneo.com/api/rest/v1/families/caps"
                          }
                        },
                        "code": "caps",
                        "attributes": [
                          "sku",
                          "name",
                          "description",
                          "price",
                          "color",
                          "picture"
                        ],
                        "attribute_as_label": "name",
                        "attribute_as_image": "picture",
                        "attribute_requirements": {
                          "ecommerce": [
                            "sku",
                            "name",
                            "description",
                            "price",
                            "color"
                          ],
                          "tablet": [
                            "sku",
                            "name",
                            "description",
                            "price"
                          ]
                        },
                        "labels": {
                          "en_US": "Caps",
                          "fr_FR": "Casquettes"
                        }
                      }
                    ]
                  }
                }
              }
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "406": {
              "description": "Not Acceptable",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 406
                },
                "message": {
                  "example": "`xxx’ in `Accept` header is not valid. Only `application/json` is allowed."
                }
              },
              "x-details": "The `Accept` header is not `application/json` but it should"
            }
          },
          "x-versions": [
            "1.7",
            "2.x",
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ]
        },
        "post": {
          "tags": [
            "Family"
          ],
          "summary": "Create a new family",
          "description": "This endpoint allows you to create a new family.",
          "operationId": "post_families",
          "requestBody": {
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "attribute_as_label",
                    "code"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Family code",
                      "x-immutable": true
                    },
                    "attribute_as_label": {
                      "type": "string",
                      "description": "Attribute code used as label",
                      "x-validation-rules": "&bull; It is equal to an existing attribute code &#10;&bull; This attribute code is in the array of the property `attributes` &#10;&bull; The type of this attribute is either `pim_catalog_identifier` or `pim_catalog_text`"
                    },
                    "attribute_as_image": {
                      "type": "string",
                      "description": "Attribute code used as the main picture in the user interface (only since v2.0)",
                      "default": "null",
                      "x-validation-rules": "&bull; It is equal to an existing attribute code &#10;&bull; This attribute code is in the array of the property `attributes` &#10;&bull; The type of this attribute is `pim_catalog_image`. Since v2.1, you can also use a `pim_assets_collection` attribute type",
                      "x-from-version": "2.0"
                    },
                    "attributes": {
                      "type": "array",
                      "description": "Attributes codes that compose the family",
                      "items": {
                        "type": "string"
                      },
                      "x-validation-rules": "Each string of the array is an existing attribute code"
                    },
                    "attribute_requirements": {
                      "type": "object",
                      "properties": {
                        "channelCode": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "Attributes codes of the family that are required for the completeness calculation for the channel `channelCode`"
                          }
                        }
                      },
                      "description": "Attributes codes of the family that are required for the completeness calculation for each channel",
                      "x-validation-rules": "&bull; Each string of these arrays is an existing attribute code &#10;&bull; These attribute codes are in the array of the property `attributes` &#10;&bull; The `channelCode` is the code of an existing and activated channel"
                    },
                    "labels": {
                      "type": "object",
                      "properties": {
                        "localeCode": {
                          "type": "string",
                          "description": "Family label for the locale `localeCode`"
                        }
                      },
                      "description": "Family labels for each locale",
                      "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                    }
                  },
                  "example": {
                    "code": "caps",
                    "attributes": [
                      "sku",
                      "name",
                      "description",
                      "price",
                      "color",
                      "picture"
                    ],
                    "attribute_as_label": "name",
                    "attribute_as_image": "picture",
                    "attribute_requirements": {
                      "ecommerce": [
                        "sku",
                        "name",
                        "description",
                        "price",
                        "color"
                      ],
                      "tablet": [
                        "sku",
                        "name",
                        "description",
                        "price"
                      ]
                    },
                    "labels": {
                      "en_US": "Caps",
                      "fr_FR": "Casquettes"
                    }
                  }
                }
              }
            },
            "required": false
          },
          "responses": {
            "201": {
              "description": "Created",
              "headers": {
                "Location": {
                  "description": "URI of the created resource",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {},
              "x-details": "Means that the creation was successful"
            },
            "400": {
              "description": "Bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 400
                },
                "message": {
                  "example": "Invalid JSON message received"
                }
              },
              "x-details": "Can be caused by a malformed JSON request"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "415": {
              "description": "Unsupported Media type",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 415
                },
                "message": {
                  "example": "`xxx’ in `Content-Type’ header is not valid.  Only `application/json’ is allowed."
                }
              },
              "x-details": "The `Content-Type` header has to be `application/json`"
            },
            "422": {
              "description": "Unprocessable entity",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 422
                },
                "message": {
                  "example": "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
                },
                "_links": {
                  "example": {
                    "documentation": {
                      "href": "http://api.akeneo.com/api-reference.html"
                    }
                  }
                }
              },
              "x-details": "The validation of the entity given in the body of the request failed"
            }
          },
          "x-versions": [
            "1.7",
            "2.x",
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-codegen-request-body-name": "body"
        },
        "patch": {
          "tags": [
            "Family"
          ],
          "summary": "Update/create several families",
          "description": "This endpoint allows you to update and/or create several families at once.",
          "operationId": "patch_families",
          "requestBody": {
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "attribute_as_label",
                    "code"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Family code",
                      "x-immutable": true
                    },
                    "attribute_as_label": {
                      "type": "string",
                      "description": "Attribute code used as label",
                      "x-validation-rules": "&bull; It is equal to an existing attribute code &#10;&bull; This attribute code is in the array of the property `attributes` &#10;&bull; The type of this attribute is either `pim_catalog_identifier` or `pim_catalog_text`"
                    },
                    "attribute_as_image": {
                      "type": "string",
                      "description": "Attribute code used as the main picture in the user interface (only since v2.0)",
                      "default": "null",
                      "x-validation-rules": "&bull; It is equal to an existing attribute code &#10;&bull; This attribute code is in the array of the property `attributes` &#10;&bull; The type of this attribute is `pim_catalog_image`. Since v2.1, you can also use a `pim_assets_collection` attribute type",
                      "x-from-version": "2.0"
                    },
                    "attributes": {
                      "type": "array",
                      "description": "Attributes codes that compose the family",
                      "items": {
                        "type": "string"
                      },
                      "x-validation-rules": "Each string of the array is an existing attribute code"
                    },
                    "attribute_requirements": {
                      "type": "object",
                      "properties": {
                        "channelCode": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "Attributes codes of the family that are required for the completeness calculation for the channel `channelCode`"
                          }
                        }
                      },
                      "description": "Attributes codes of the family that are required for the completeness calculation for each channel",
                      "x-validation-rules": "&bull; Each string of these arrays is an existing attribute code &#10;&bull; These attribute codes are in the array of the property `attributes` &#10;&bull; The `channelCode` is the code of an existing and activated channel"
                    },
                    "labels": {
                      "type": "object",
                      "properties": {
                        "localeCode": {
                          "type": "string",
                          "description": "Family label for the locale `localeCode`"
                        }
                      },
                      "description": "Family labels for each locale",
                      "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                    }
                  },
                  "example": {
                    "code": "caps",
                    "attributes": [
                      "sku",
                      "name",
                      "description",
                      "price",
                      "color",
                      "picture"
                    ],
                    "attribute_as_label": "name",
                    "attribute_as_image": "picture",
                    "attribute_requirements": {
                      "ecommerce": [
                        "sku",
                        "name",
                        "description",
                        "price",
                        "color"
                      ],
                      "tablet": [
                        "sku",
                        "name",
                        "description",
                        "price"
                      ]
                    },
                    "labels": {
                      "en_US": "Caps",
                      "fr_FR": "Casquettes"
                    }
                  },
                  "x-examples": {
                    "x-example-1": "{\"code\":\"tshirt\",\"attributes\":[\"description\",\"size\"]}",
                    "x-example-2": "{\"code\":\"cap\",\"attribute_as_label\":\"descripion\"}",
                    "x-example-3": "{\"code\":\"mug\",\"attributes\":[\"description\",\"short_description\"]}"
                  }
                }
              }
            },
            "required": false
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "line": {
                        "type": "integer",
                        "description": "Line number"
                      },
                      "identifier": {
                        "type": "string",
                        "description": "Resource identifier, only filled when the resource is a product"
                      },
                      "code": {
                        "type": "string",
                        "description": "Resource code, only filled when the resource is not a product"
                      },
                      "status_code": {
                        "type": "integer",
                        "description": "HTTP status code, see <a href=\"/documentation/responses.html#client-errors\">Client errors</a> to understand the meaning of each code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "x-example-1": {
                  "example": "{\"line\":1,\"code\":\"tshirt\",\"status_code\":201}"
                },
                "x-example-2": {
                  "example": "{\"line\":2,\"code\":\"cap\",\"status_code\":422,\"message\":\"Attribute \"descripion\" does not exist.\"}"
                },
                "x-example-3": {
                  "example": "{\"line\":3,\"code\":\"mug\",\"status_code\":204}"
                }
              },
              "x-details": "Returns a plain text response whose lines are JSON containing the status of each update or creation",
              "x-no-entity": true
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "413": {
              "description": "Request Entity Too Large",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 413
                },
                "message": {
                  "example": "Too many resources to process, 100 is the maximum allowed."
                }
              },
              "x-details": "There are too many resources to process (max 100) or the line of JSON is too long (max 1 000 000 characters)"
            },
            "415": {
              "description": "Unsupported Media type",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 415
                },
                "message": {
                  "example": "`xxx’ in `Content-Type’ header is not valid.  Only `application/vnd.akeneo.collection+json’ is allowed."
                }
              },
              "x-details": "The `Content-Type` header has to be `application/vnd.akeneo.collection+json`"
            }
          },
          "x-versions": [
            "1.7",
            "2.x",
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-body-by-line": "Contains several lines, each line is a family in JSON standard format",
          "x-codegen-request-body-name": "body"
        }
      },
      "/api/rest/v1/families/{code}": {
        "get": {
          "tags": [
            "Family"
          ],
          "summary": "Get a family",
          "description": "This endpoint allows you to get the information about a given family.",
          "operationId": "get_families__code_",
          "parameters": [
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "required": [
                      "attribute_as_label",
                      "code"
                    ],
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Family code",
                        "x-immutable": true
                      },
                      "attribute_as_label": {
                        "type": "string",
                        "description": "Attribute code used as label",
                        "x-validation-rules": "&bull; It is equal to an existing attribute code &#10;&bull; This attribute code is in the array of the property `attributes` &#10;&bull; The type of this attribute is either `pim_catalog_identifier` or `pim_catalog_text`"
                      },
                      "attribute_as_image": {
                        "type": "string",
                        "description": "Attribute code used as the main picture in the user interface (only since v2.0)",
                        "default": "null",
                        "x-validation-rules": "&bull; It is equal to an existing attribute code &#10;&bull; This attribute code is in the array of the property `attributes` &#10;&bull; The type of this attribute is `pim_catalog_image`. Since v2.1, you can also use a `pim_assets_collection` attribute type",
                        "x-from-version": "2.0"
                      },
                      "attributes": {
                        "type": "array",
                        "description": "Attributes codes that compose the family",
                        "items": {
                          "type": "string"
                        },
                        "x-validation-rules": "Each string of the array is an existing attribute code"
                      },
                      "attribute_requirements": {
                        "type": "object",
                        "properties": {
                          "channelCode": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "description": "Attributes codes of the family that are required for the completeness calculation for the channel `channelCode`"
                            }
                          }
                        },
                        "description": "Attributes codes of the family that are required for the completeness calculation for each channel",
                        "x-validation-rules": "&bull; Each string of these arrays is an existing attribute code &#10;&bull; These attribute codes are in the array of the property `attributes` &#10;&bull; The `channelCode` is the code of an existing and activated channel"
                      },
                      "labels": {
                        "type": "object",
                        "properties": {
                          "localeCode": {
                            "type": "string",
                            "description": "Family label for the locale `localeCode`"
                          }
                        },
                        "description": "Family labels for each locale",
                        "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                      }
                    },
                    "example": {
                      "code": "caps",
                      "attributes": [
                        "sku",
                        "name",
                        "description",
                        "price",
                        "color",
                        "picture"
                      ],
                      "attribute_as_label": "name",
                      "attribute_as_image": "picture",
                      "attribute_requirements": {
                        "ecommerce": [
                          "sku",
                          "name",
                          "description",
                          "price",
                          "color"
                        ],
                        "tablet": [
                          "sku",
                          "name",
                          "description",
                          "price"
                        ]
                      },
                      "labels": {
                        "en_US": "Caps",
                        "fr_FR": "Casquettes"
                      }
                    }
                  }
                }
              },
              "x-details": "Returns the content of the family in JSON standard format"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "404": {
              "description": "Resource not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 404
                },
                "message": {
                  "example": "Resource `my_resource_code` does not exist."
                }
              },
              "x-details": "The resource code given in the URI does not correspond to any existing PIM resource"
            },
            "406": {
              "description": "Not Acceptable",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 406
                },
                "message": {
                  "example": "`xxx’ in `Accept` header is not valid. Only `application/json` is allowed."
                }
              },
              "x-details": "The `Accept` header is not `application/json` but it should"
            }
          },
          "x-versions": [
            "1.7",
            "2.x",
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ]
        },
        "patch": {
          "tags": [
            "Family"
          ],
          "summary": "Update/create a family",
          "description": "This endpoint allows you to update a given family. Know more about <a href=\"/documentation/update.html#update-behavior\">Update behavior</a>. Note that if no family exists for the given code, it creates it.",
          "operationId": "patch_families__code_",
          "parameters": [
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "attribute_as_label",
                    "code"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Family code",
                      "x-immutable": true
                    },
                    "attribute_as_label": {
                      "type": "string",
                      "description": "Attribute code used as label",
                      "x-validation-rules": "&bull; It is equal to an existing attribute code &#10;&bull; This attribute code is in the array of the property `attributes` &#10;&bull; The type of this attribute is either `pim_catalog_identifier` or `pim_catalog_text`"
                    },
                    "attribute_as_image": {
                      "type": "string",
                      "description": "Attribute code used as the main picture in the user interface (only since v2.0)",
                      "default": "null",
                      "x-validation-rules": "&bull; It is equal to an existing attribute code &#10;&bull; This attribute code is in the array of the property `attributes` &#10;&bull; The type of this attribute is `pim_catalog_image`. Since v2.1, you can also use a `pim_assets_collection` attribute type",
                      "x-from-version": "2.0"
                    },
                    "attributes": {
                      "type": "array",
                      "description": "Attributes codes that compose the family",
                      "items": {
                        "type": "string"
                      },
                      "x-validation-rules": "Each string of the array is an existing attribute code"
                    },
                    "attribute_requirements": {
                      "type": "object",
                      "properties": {
                        "channelCode": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "Attributes codes of the family that are required for the completeness calculation for the channel `channelCode`"
                          }
                        }
                      },
                      "description": "Attributes codes of the family that are required for the completeness calculation for each channel",
                      "x-validation-rules": "&bull; Each string of these arrays is an existing attribute code &#10;&bull; These attribute codes are in the array of the property `attributes` &#10;&bull; The `channelCode` is the code of an existing and activated channel"
                    },
                    "labels": {
                      "type": "object",
                      "properties": {
                        "localeCode": {
                          "type": "string",
                          "description": "Family label for the locale `localeCode`"
                        }
                      },
                      "description": "Family labels for each locale",
                      "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                    }
                  },
                  "example": {
                    "code": "caps",
                    "attributes": [
                      "sku",
                      "name",
                      "description",
                      "price",
                      "color",
                      "picture"
                    ],
                    "attribute_as_label": "name",
                    "attribute_as_image": "picture",
                    "attribute_requirements": {
                      "ecommerce": [
                        "sku",
                        "name",
                        "description",
                        "price",
                        "color"
                      ],
                      "tablet": [
                        "sku",
                        "name",
                        "description",
                        "price"
                      ]
                    },
                    "labels": {
                      "en_US": "Caps",
                      "fr_FR": "Casquettes"
                    }
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "Created",
              "headers": {
                "Location": {
                  "description": "URI of the created resource",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {},
              "x-details": "Means that the creation was successful"
            },
            "204": {
              "description": "No content to return",
              "headers": {
                "Location": {
                  "description": "URI of the updated resource",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {},
              "x-details": "Means that the update was successful"
            },
            "400": {
              "description": "Bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 400
                },
                "message": {
                  "example": "Invalid JSON message received"
                }
              },
              "x-details": "Can be caused by a malformed JSON request"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "415": {
              "description": "Unsupported Media type",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 415
                },
                "message": {
                  "example": "`xxx’ in `Content-Type’ header is not valid.  Only `application/json’ is allowed."
                }
              },
              "x-details": "The `Content-Type` header has to be `application/json`"
            },
            "422": {
              "description": "Unprocessable entity",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 422
                },
                "message": {
                  "example": "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
                },
                "_links": {
                  "example": {
                    "documentation": {
                      "href": "http://api.akeneo.com/api-reference.html"
                    }
                  }
                }
              },
              "x-details": "The validation of the entity given in the body of the request failed"
            }
          },
          "x-versions": [
            "1.7",
            "2.x",
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-codegen-request-body-name": "body"
        }
      },
      "/api/rest/v1/families/{family_code}/variants": {
        "get": {
          "tags": [
            "Family variant"
          ],
          "summary": "Get list of family variants",
          "description": "This endpoint allows you to get a list of family variants. Family variants are paginated and sorted by code.",
          "operationId": "get_families__family_code__variants",
          "parameters": [
            {
              "name": "family_code",
              "in": "path",
              "description": "Code of the family",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page",
              "in": "query",
              "description": "Number of the page to retrieve when using the `page` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html#pagination\">Pagination</a> section",
              "schema": {
                "type": "integer",
                "default": 1
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
              "schema": {
                "maximum": 100,
                "minimum": 1,
                "type": "integer",
                "default": 10
              }
            },
            {
              "name": "with_count",
              "in": "query",
              "description": "Return the count of items in the response. Be carefull with that, on a big catalog, it can decrease performance in a significative way",
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Return family variants paginated",
              "content": {
                "application/json": {
                  "schema": {
                    "title": "Family Variants",
                    "type": "object",
                    "properties": {
                      "_embedded": {
                        "type": "object",
                        "properties": {
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "_links": {
                                      "type": "object",
                                      "properties": {
                                        "self": {
                                          "type": "object",
                                          "properties": {
                                            "href": {
                                              "type": "string",
                                              "description": "URI of the resource"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "required": [
                                    "code",
                                    "variant_attribute_sets"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "string",
                                      "description": "Family variant code",
                                      "x-immutable": true
                                    },
                                    "variant_attribute_sets": {
                                      "type": "array",
                                      "description": "Attributes distribution according to the enrichment level",
                                      "items": {
                                        "required": [
                                          "axes",
                                          "level"
                                        ],
                                        "type": "object",
                                        "properties": {
                                          "level": {
                                            "type": "integer",
                                            "description": "Enrichment level",
                                            "x-validation-rules": "&bull; Number representing the level of the attribute set. &#10;&bull; It should be equal to 1 or 2. &#10;&bull; If you specify the level 2, you have to specify the level 1 as well.",
                                            "x-immutable": true
                                          },
                                          "axes": {
                                            "type": "array",
                                            "description": "Codes of attributes used as variant axes",
                                            "items": {
                                              "type": "string"
                                            },
                                            "x-validation-rules": "&bull; Should be an array of maximum 5 existing attribute codes &#10;&bull; These attributes should belong to the family of the family variant &#10;&bull; Only the following attribute types are allowed: `simple select`, `multi select`, `reference data`, `metric`, `boolean` &#10;&bull; Attributes cannot be scopable, nor localizable nor locale specific &#10;&bull; Attributes used as axes in one level cannot be used as axes or as attributes in the other level",
                                            "x-immutable": true
                                          },
                                          "attributes": {
                                            "type": "array",
                                            "description": "Codes of attributes bind to this enrichment level",
                                            "items": {
                                              "type": "string"
                                            },
                                            "x-validation-rules": "&bull; Should be an array of existing attribute codes &#10;&bull; These attributes should belong to the family of the family variant &#10;&bull; Attributes used as attribute in one level cannot be used as axes or as attributes in the other level &#10;&bull; Attributes that are `unique value` or `identifier` are automatically distributed to the lower level."
                                          }
                                        },
                                        "description": "Enrichment level"
                                      }
                                    },
                                    "labels": {
                                      "type": "object",
                                      "properties": {
                                        "localeCode": {
                                          "type": "string",
                                          "description": "Family variant label for the locale `localeCode`"
                                        }
                                      },
                                      "description": "Family variant labels for each locale",
                                      "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                                    }
                                  },
                                  "example": {
                                    "code": "shoesVariant",
                                    "labels": {
                                      "en_US": "Shoes variant",
                                      "fr_FR": "Variante de chaussures"
                                    },
                                    "variant_attribute_sets": [
                                      {
                                        "level": 1,
                                        "attributes": [
                                          "color",
                                          "material"
                                        ],
                                        "axes": [
                                          "color"
                                        ]
                                      },
                                      {
                                        "level": 2,
                                        "attributes": [
                                          "sku",
                                          "size"
                                        ],
                                        "axes": [
                                          "size"
                                        ]
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        }
                      },
                      "_links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the current page of resources"
                              }
                            }
                          },
                          "first": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the first page of resources"
                              }
                            }
                          },
                          "previous": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the previous page of resources"
                              }
                            }
                          },
                          "next": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the next page of resources"
                              }
                            }
                          }
                        }
                      },
                      "current_page": {
                        "type": "integer",
                        "description": "Current page number"
                      }
                    }
                  }
                },
                "code": {
                  "example": "shoesVariant"
                },
                "labels": {
                  "example": {
                    "en_US": "Shoes variant",
                    "fr_FR": "Variante de chaussures"
                  }
                },
                "variant_attribute_sets": {
                  "example": [
                    {
                      "level": 1,
                      "attributes": [
                        "color",
                        "material"
                      ],
                      "axes": [
                        "color"
                      ]
                    },
                    {
                      "level": 2,
                      "attributes": [
                        "sku",
                        "size"
                      ],
                      "axes": [
                        "size"
                      ]
                    }
                  ]
                }
              }
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "406": {
              "description": "Not Acceptable",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 406
                },
                "message": {
                  "example": "`xxx’ in `Accept` header is not valid. Only `application/json` is allowed."
                }
              },
              "x-details": "The `Accept` header is not `application/json` but it should"
            }
          },
          "x-versions": [
            "2.x",
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ]
        },
        "post": {
          "tags": [
            "Family"
          ],
          "summary": "Create a new family variant",
          "description": "This endpoint allows you to create a family variant.",
          "operationId": "post_families__family_code__variants",
          "parameters": [
            {
              "name": "family_code",
              "in": "path",
              "description": "Code of the family",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "code",
                    "variant_attribute_sets"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Family variant code",
                      "x-immutable": true
                    },
                    "variant_attribute_sets": {
                      "type": "array",
                      "description": "Attributes distribution according to the enrichment level",
                      "items": {
                        "required": [
                          "axes",
                          "level"
                        ],
                        "type": "object",
                        "properties": {
                          "level": {
                            "type": "integer",
                            "description": "Enrichment level",
                            "x-validation-rules": "&bull; Number representing the level of the attribute set. &#10;&bull; It should be equal to 1 or 2. &#10;&bull; If you specify the level 2, you have to specify the level 1 as well.",
                            "x-immutable": true
                          },
                          "axes": {
                            "type": "array",
                            "description": "Codes of attributes used as variant axes",
                            "items": {
                              "type": "string"
                            },
                            "x-validation-rules": "&bull; Should be an array of maximum 5 existing attribute codes &#10;&bull; These attributes should belong to the family of the family variant &#10;&bull; Only the following attribute types are allowed: `simple select`, `multi select`, `reference data`, `metric`, `boolean` &#10;&bull; Attributes cannot be scopable, nor localizable nor locale specific &#10;&bull; Attributes used as axes in one level cannot be used as axes or as attributes in the other level",
                            "x-immutable": true
                          },
                          "attributes": {
                            "type": "array",
                            "description": "Codes of attributes bind to this enrichment level",
                            "items": {
                              "type": "string"
                            },
                            "x-validation-rules": "&bull; Should be an array of existing attribute codes &#10;&bull; These attributes should belong to the family of the family variant &#10;&bull; Attributes used as attribute in one level cannot be used as axes or as attributes in the other level &#10;&bull; Attributes that are `unique value` or `identifier` are automatically distributed to the lower level."
                          }
                        },
                        "description": "Enrichment level"
                      }
                    },
                    "labels": {
                      "type": "object",
                      "properties": {
                        "localeCode": {
                          "type": "string",
                          "description": "Family variant label for the locale `localeCode`"
                        }
                      },
                      "description": "Family variant labels for each locale",
                      "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                    }
                  },
                  "example": {
                    "code": "shoesVariant",
                    "labels": {
                      "en_US": "Shoes variant",
                      "fr_FR": "Variante de chaussures"
                    },
                    "variant_attribute_sets": [
                      {
                        "level": 1,
                        "attributes": [
                          "color",
                          "material"
                        ],
                        "axes": [
                          "color"
                        ]
                      },
                      {
                        "level": 2,
                        "attributes": [
                          "sku",
                          "size"
                        ],
                        "axes": [
                          "size"
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "required": false
          },
          "responses": {
            "201": {
              "description": "Created",
              "headers": {
                "Location": {
                  "description": "URI of the created resource",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {},
              "x-details": "Means that the creation was successful"
            },
            "400": {
              "description": "Bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 400
                },
                "message": {
                  "example": "Invalid JSON message received"
                }
              },
              "x-details": "Can be caused by a malformed JSON request"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "415": {
              "description": "Unsupported Media type",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 415
                },
                "message": {
                  "example": "`xxx’ in `Content-Type’ header is not valid.  Only `application/json’ is allowed."
                }
              },
              "x-details": "The `Content-Type` header has to be `application/json`"
            },
            "422": {
              "description": "Unprocessable entity",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 422
                },
                "message": {
                  "example": "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
                },
                "_links": {
                  "example": {
                    "documentation": {
                      "href": "http://api.akeneo.com/api-reference.html"
                    }
                  }
                }
              },
              "x-details": "The validation of the entity given in the body of the request failed"
            }
          },
          "x-versions": [
            "2.x",
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-codegen-request-body-name": "body"
        },
        "patch": {
          "tags": [
            "Family variant"
          ],
          "summary": "Update/create several family variants",
          "description": "This endpoint allows you to update and/or create several family variants at once, for a given family.",
          "operationId": "patch_families__family_code__variants",
          "parameters": [
            {
              "name": "family_code",
              "in": "path",
              "description": "Code of the family",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "code",
                    "variant_attribute_sets"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Family variant code",
                      "x-immutable": true
                    },
                    "variant_attribute_sets": {
                      "type": "array",
                      "description": "Attributes distribution according to the enrichment level",
                      "items": {
                        "required": [
                          "axes",
                          "level"
                        ],
                        "type": "object",
                        "properties": {
                          "level": {
                            "type": "integer",
                            "description": "Enrichment level",
                            "x-validation-rules": "&bull; Number representing the level of the attribute set. &#10;&bull; It should be equal to 1 or 2. &#10;&bull; If you specify the level 2, you have to specify the level 1 as well.",
                            "x-immutable": true
                          },
                          "axes": {
                            "type": "array",
                            "description": "Codes of attributes used as variant axes",
                            "items": {
                              "type": "string"
                            },
                            "x-validation-rules": "&bull; Should be an array of maximum 5 existing attribute codes &#10;&bull; These attributes should belong to the family of the family variant &#10;&bull; Only the following attribute types are allowed: `simple select`, `multi select`, `reference data`, `metric`, `boolean` &#10;&bull; Attributes cannot be scopable, nor localizable nor locale specific &#10;&bull; Attributes used as axes in one level cannot be used as axes or as attributes in the other level",
                            "x-immutable": true
                          },
                          "attributes": {
                            "type": "array",
                            "description": "Codes of attributes bind to this enrichment level",
                            "items": {
                              "type": "string"
                            },
                            "x-validation-rules": "&bull; Should be an array of existing attribute codes &#10;&bull; These attributes should belong to the family of the family variant &#10;&bull; Attributes used as attribute in one level cannot be used as axes or as attributes in the other level &#10;&bull; Attributes that are `unique value` or `identifier` are automatically distributed to the lower level."
                          }
                        },
                        "description": "Enrichment level"
                      }
                    },
                    "labels": {
                      "type": "object",
                      "properties": {
                        "localeCode": {
                          "type": "string",
                          "description": "Family variant label for the locale `localeCode`"
                        }
                      },
                      "description": "Family variant labels for each locale",
                      "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                    }
                  },
                  "example": {
                    "code": "shoesVariant",
                    "labels": {
                      "en_US": "Shoes variant",
                      "fr_FR": "Variante de chaussures"
                    },
                    "variant_attribute_sets": [
                      {
                        "level": 1,
                        "attributes": [
                          "color",
                          "material"
                        ],
                        "axes": [
                          "color"
                        ]
                      },
                      {
                        "level": 2,
                        "attributes": [
                          "sku",
                          "size"
                        ],
                        "axes": [
                          "size"
                        ]
                      }
                    ]
                  },
                  "x-examples": {
                    "x-example-1": "{\"code\": \"shoes_by_size\", \"variant_attribute_sets\": [{\"level\": 1, \"axes\": [\"size\"], \"attributes\": [\"color\"]}]}",
                    "x-example-2": "{\"code\": \"shoes_by_color\",\"labels\": {\"en_US\": \"Shoes by color\"}}",
                    "x-example-3": "{\"code\": \"shoes_without_axes\", \"variant_attribute_sets\": [{\"level\": 1, \"axes\": [], \"attributes\": [\"color\"]}]}"
                  }
                }
              }
            },
            "required": false
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "line": {
                        "type": "integer",
                        "description": "Line number"
                      },
                      "identifier": {
                        "type": "string",
                        "description": "Resource identifier, only filled when the resource is a product"
                      },
                      "code": {
                        "type": "string",
                        "description": "Resource code, only filled when the resource is not a product"
                      },
                      "status_code": {
                        "type": "integer",
                        "description": "HTTP status code, see <a href=\"/documentation/responses.html#client-errors\">Client errors</a> to understand the meaning of each code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "x-example-1": {
                  "example": "{\"line\":1,\"code\":\"shoes_by_size\",\"status_code\":201}"
                },
                "x-example-2": {
                  "example": "{\"line\":2,\"code\":\"shoes_by_color\",\"status_code\":204}"
                },
                "x-example-3": {
                  "example": "{\"line\":3,\"code\":\"mug\",\"status_code\":422, \"message\":\"There should be at least one attribute defined as axis for the attribute set for level \"1\"\"}"
                }
              },
              "x-details": "Returns a plain text response whose lines are JSON containing the status of each update or creation",
              "x-no-entity": true
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "413": {
              "description": "Request Entity Too Large",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 413
                },
                "message": {
                  "example": "Too many resources to process, 100 is the maximum allowed."
                }
              },
              "x-details": "There are too many resources to process (max 100) or the line of JSON is too long (max 1 000 000 characters)"
            },
            "415": {
              "description": "Unsupported Media type",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 415
                },
                "message": {
                  "example": "`xxx’ in `Content-Type’ header is not valid.  Only `application/vnd.akeneo.collection+json’ is allowed."
                }
              },
              "x-details": "The `Content-Type` header has to be `application/vnd.akeneo.collection+json`"
            }
          },
          "x-versions": [
            "2.x",
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-body-by-line": "Contains several lines, each line is a family in JSON standard format",
          "x-codegen-request-body-name": "body"
        }
      },
      "/api/rest/v1/families/{family_code}/variants/{code}": {
        "get": {
          "tags": [
            "Family variant"
          ],
          "summary": "Get a family variant",
          "description": "This endpoint allows you to get the information about a given family variant.",
          "operationId": "get_families__family_code__variants__code__",
          "parameters": [
            {
              "name": "family_code",
              "in": "path",
              "description": "Code of the family",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "required": [
                      "code",
                      "variant_attribute_sets"
                    ],
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Family variant code",
                        "x-immutable": true
                      },
                      "variant_attribute_sets": {
                        "type": "array",
                        "description": "Attributes distribution according to the enrichment level",
                        "items": {
                          "required": [
                            "axes",
                            "level"
                          ],
                          "type": "object",
                          "properties": {
                            "level": {
                              "type": "integer",
                              "description": "Enrichment level",
                              "x-validation-rules": "&bull; Number representing the level of the attribute set. &#10;&bull; It should be equal to 1 or 2. &#10;&bull; If you specify the level 2, you have to specify the level 1 as well.",
                              "x-immutable": true
                            },
                            "axes": {
                              "type": "array",
                              "description": "Codes of attributes used as variant axes",
                              "items": {
                                "type": "string"
                              },
                              "x-validation-rules": "&bull; Should be an array of maximum 5 existing attribute codes &#10;&bull; These attributes should belong to the family of the family variant &#10;&bull; Only the following attribute types are allowed: `simple select`, `multi select`, `reference data`, `metric`, `boolean` &#10;&bull; Attributes cannot be scopable, nor localizable nor locale specific &#10;&bull; Attributes used as axes in one level cannot be used as axes or as attributes in the other level",
                              "x-immutable": true
                            },
                            "attributes": {
                              "type": "array",
                              "description": "Codes of attributes bind to this enrichment level",
                              "items": {
                                "type": "string"
                              },
                              "x-validation-rules": "&bull; Should be an array of existing attribute codes &#10;&bull; These attributes should belong to the family of the family variant &#10;&bull; Attributes used as attribute in one level cannot be used as axes or as attributes in the other level &#10;&bull; Attributes that are `unique value` or `identifier` are automatically distributed to the lower level."
                            }
                          },
                          "description": "Enrichment level"
                        }
                      },
                      "labels": {
                        "type": "object",
                        "properties": {
                          "localeCode": {
                            "type": "string",
                            "description": "Family variant label for the locale `localeCode`"
                          }
                        },
                        "description": "Family variant labels for each locale",
                        "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                      }
                    },
                    "example": {
                      "code": "shoesVariant",
                      "labels": {
                        "en_US": "Shoes variant",
                        "fr_FR": "Variante de chaussures"
                      },
                      "variant_attribute_sets": [
                        {
                          "level": 1,
                          "attributes": [
                            "color",
                            "material"
                          ],
                          "axes": [
                            "color"
                          ]
                        },
                        {
                          "level": 2,
                          "attributes": [
                            "sku",
                            "size"
                          ],
                          "axes": [
                            "size"
                          ]
                        }
                      ]
                    }
                  }
                }
              },
              "x-details": "Returns the content of the family variant in JSON standard format"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "404": {
              "description": "Resource not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 404
                },
                "message": {
                  "example": "Resource `my_resource_code` does not exist."
                }
              },
              "x-details": "The resource code given in the URI does not correspond to any existing PIM resource"
            },
            "406": {
              "description": "Not Acceptable",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 406
                },
                "message": {
                  "example": "`xxx’ in `Accept` header is not valid. Only `application/json` is allowed."
                }
              },
              "x-details": "The `Accept` header is not `application/json` but it should"
            }
          },
          "x-versions": [
            "2.x",
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ]
        },
        "patch": {
          "tags": [
            "Family variant"
          ],
          "summary": "Update/create a family variant",
          "description": "This endpoint allows you to update a given family variant. Know more about <a href=\"/documentation/update.html#update-behavior\">Update behavior</a>. Note that if no family variant exists for the given code, it creates it.",
          "operationId": "patch_families__family_code__variants__code__",
          "parameters": [
            {
              "name": "family_code",
              "in": "path",
              "description": "Code of the family",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "code",
                    "variant_attribute_sets"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Family variant code",
                      "x-immutable": true
                    },
                    "variant_attribute_sets": {
                      "type": "array",
                      "description": "Attributes distribution according to the enrichment level",
                      "items": {
                        "required": [
                          "axes",
                          "level"
                        ],
                        "type": "object",
                        "properties": {
                          "level": {
                            "type": "integer",
                            "description": "Enrichment level",
                            "x-validation-rules": "&bull; Number representing the level of the attribute set. &#10;&bull; It should be equal to 1 or 2. &#10;&bull; If you specify the level 2, you have to specify the level 1 as well.",
                            "x-immutable": true
                          },
                          "axes": {
                            "type": "array",
                            "description": "Codes of attributes used as variant axes",
                            "items": {
                              "type": "string"
                            },
                            "x-validation-rules": "&bull; Should be an array of maximum 5 existing attribute codes &#10;&bull; These attributes should belong to the family of the family variant &#10;&bull; Only the following attribute types are allowed: `simple select`, `multi select`, `reference data`, `metric`, `boolean` &#10;&bull; Attributes cannot be scopable, nor localizable nor locale specific &#10;&bull; Attributes used as axes in one level cannot be used as axes or as attributes in the other level",
                            "x-immutable": true
                          },
                          "attributes": {
                            "type": "array",
                            "description": "Codes of attributes bind to this enrichment level",
                            "items": {
                              "type": "string"
                            },
                            "x-validation-rules": "&bull; Should be an array of existing attribute codes &#10;&bull; These attributes should belong to the family of the family variant &#10;&bull; Attributes used as attribute in one level cannot be used as axes or as attributes in the other level &#10;&bull; Attributes that are `unique value` or `identifier` are automatically distributed to the lower level."
                          }
                        },
                        "description": "Enrichment level"
                      }
                    },
                    "labels": {
                      "type": "object",
                      "properties": {
                        "localeCode": {
                          "type": "string",
                          "description": "Family variant label for the locale `localeCode`"
                        }
                      },
                      "description": "Family variant labels for each locale",
                      "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                    }
                  },
                  "example": {
                    "code": "shoesVariant",
                    "labels": {
                      "en_US": "Shoes variant",
                      "fr_FR": "Variante de chaussures"
                    },
                    "variant_attribute_sets": [
                      {
                        "level": 1,
                        "attributes": [
                          "color",
                          "material"
                        ],
                        "axes": [
                          "color"
                        ]
                      },
                      {
                        "level": 2,
                        "attributes": [
                          "sku",
                          "size"
                        ],
                        "axes": [
                          "size"
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "Created",
              "headers": {
                "Location": {
                  "description": "URI of the created resource",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {},
              "x-details": "Means that the creation was successful"
            },
            "204": {
              "description": "No content to return",
              "headers": {
                "Location": {
                  "description": "URI of the updated resource",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {},
              "x-details": "Means that the update was successful"
            },
            "400": {
              "description": "Bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 400
                },
                "message": {
                  "example": "Invalid JSON message received"
                }
              },
              "x-details": "Can be caused by a malformed JSON request"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "415": {
              "description": "Unsupported Media type",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 415
                },
                "message": {
                  "example": "`xxx’ in `Content-Type’ header is not valid.  Only `application/json’ is allowed."
                }
              },
              "x-details": "The `Content-Type` header has to be `application/json`"
            },
            "422": {
              "description": "Unprocessable entity",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 422
                },
                "message": {
                  "example": "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
                },
                "_links": {
                  "example": {
                    "documentation": {
                      "href": "http://api.akeneo.com/api-reference.html"
                    }
                  }
                }
              },
              "x-details": "The validation of the entity given in the body of the request failed"
            }
          },
          "x-versions": [
            "2.x",
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-codegen-request-body-name": "body"
        }
      },
      "/api/rest/v1/attributes": {
        "get": {
          "tags": [
            "Attribute"
          ],
          "summary": "Get list of attributes",
          "description": "This endpoint allows you to get a list of attributes. Attributes are paginated and sorted by code.",
          "operationId": "get_attributes",
          "parameters": [
            {
              "name": "search",
              "in": "query",
              "description": "Filter attributes, for more details see the <a href=\"/documentation/filter.html#filter-attributes\">Filters</a> section.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page",
              "in": "query",
              "description": "Number of the page to retrieve when using the `page` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html#pagination\">Pagination</a> section",
              "schema": {
                "type": "integer",
                "default": 1
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
              "schema": {
                "maximum": 100,
                "minimum": 1,
                "type": "integer",
                "default": 10
              }
            },
            {
              "name": "with_count",
              "in": "query",
              "description": "Return the count of items in the response. Be carefull with that, on a big catalog, it can decrease performance in a significative way",
              "schema": {
                "type": "boolean",
                "default": false
              }
            },
            {
              "name": "with_table_select_options",
              "in": "query",
              "description": "Return the options of 'select' column types (of a table attribute) in the response. (Only available since the 7.0 version)",
              "schema": {
                "type": "boolean",
                "default": false,
                "x-from-version": "7.0"
              },
              "x-from-version": "7.0"
            }
          ],
          "responses": {
            "200": {
              "description": "Return attributes paginated",
              "content": {
                "application/json": {
                  "schema": {
                    "title": "Attributes",
                    "type": "object",
                    "properties": {
                      "_embedded": {
                        "type": "object",
                        "properties": {
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "_links": {
                                      "type": "object",
                                      "properties": {
                                        "self": {
                                          "type": "object",
                                          "properties": {
                                            "href": {
                                              "type": "string",
                                              "description": "URI of the resource"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "required": [
                                    "code",
                                    "group",
                                    "type"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "string",
                                      "description": "Attribute code",
                                      "x-immutable": true
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "Attribute type. See <a href='/concepts/catalog-structure.html#attribute'>type</a> section for more details.",
                                      "enum": [
                                        "pim_catalog_identifier",
                                        "pim_catalog_metric",
                                        "pim_catalog_number",
                                        "pim_catalog_reference_data_multi_select",
                                        "pim_catalog_reference_data_simple_select",
                                        "pim_catalog_simpleselect",
                                        "pim_catalog_multiselect",
                                        "pim_catalog_date",
                                        "pim_catalog_textarea",
                                        "pim_catalog_text",
                                        "pim_catalog_file",
                                        "pim_catalog_image",
                                        "pim_catalog_price_collection",
                                        "pim_catalog_boolean",
                                        "akeneo_reference_entity",
                                        "akeneo_reference_entity_collection",
                                        "pim_catalog_asset_collection"
                                      ],
                                      "x-validation-rules": "The type is one of the following values",
                                      "x-immutable": true
                                    },
                                    "labels": {
                                      "type": "object",
                                      "properties": {
                                        "localeCode": {
                                          "type": "string",
                                          "description": "Attribute label for the locale `localeCode`"
                                        }
                                      },
                                      "description": "Attribute labels for each locale",
                                      "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                                    },
                                    "group": {
                                      "type": "string",
                                      "description": "Attribute group",
                                      "x-validation-rules": "It is the code of an existing group"
                                    },
                                    "group_labels": {
                                      "type": "object",
                                      "properties": {
                                        "localeCode": {
                                          "type": "string",
                                          "description": "Group label for the locale `localeCode`"
                                        }
                                      },
                                      "description": "Group labels for each locale",
                                      "x-validation-rules": "The `localeCode` is the code of an existing and activated locale",
                                      "x-read-only": true
                                    },
                                    "sort_order": {
                                      "type": "integer",
                                      "description": "Order of the attribute in its group",
                                      "x-validation-rules": "It is a positive integer"
                                    },
                                    "localizable": {
                                      "type": "boolean",
                                      "description": "Whether the attribute is localizable, i.e. can have one value by locale",
                                      "default": false,
                                      "x-immutable": true
                                    },
                                    "scopable": {
                                      "type": "boolean",
                                      "description": "Whether the attribute is scopable, i.e. can have one value by channel",
                                      "default": false,
                                      "x-immutable": true
                                    },
                                    "available_locales": {
                                      "type": "array",
                                      "description": "To make the attribute locale specfic, specify here for which locales it is specific",
                                      "items": {
                                        "type": "string"
                                      },
                                      "x-validation-rules": "Each string of the array is an existing and activated locale"
                                    },
                                    "unique": {
                                      "type": "boolean",
                                      "description": "Whether two values for the attribute cannot be the same",
                                      "x-immutable": true
                                    },
                                    "useable_as_grid_filter": {
                                      "type": "boolean",
                                      "description": "Whether the attribute can be used as a filter for the product grid in the PIM user interface"
                                    },
                                    "max_characters": {
                                      "type": "integer",
                                      "description": "Number maximum of characters allowed for the value of the attribute when the attribute type is `pim_catalog_text`, `pim_catalog_textarea` or `pim_catalog_identifier`",
                                      "x-warning": "Only for `pim_catalog_text`, `pim_catalog_textarea` or `pim_catalog_identifier` attribute types"
                                    },
                                    "validation_rule": {
                                      "type": "string",
                                      "description": "Validation rule type used to validate any attribute value when the attribute type is `pim_catalog_text` or `pim_catalog_identifier`",
                                      "x-validation-rules": "Equal to `regexp` when the attribute type is equal to `pim_catalog_identifier`",
                                      "x-warning": "Only for `pim_catalog_text` or `pim_catalog_identifier` attribute types"
                                    },
                                    "validation_regexp": {
                                      "type": "string",
                                      "description": "Regexp expression used to validate any attribute value when the attribute type is `pim_catalog_text` or `pim_catalog_identifier`",
                                      "x-validation-rules": "Required when the property `validation_rule` is equal to `regexp`",
                                      "x-warning": "Only for `pim_catalog_text` or `pim_catalog_identifier` attribute types"
                                    },
                                    "wysiwyg_enabled": {
                                      "type": "boolean",
                                      "description": "Whether the WYSIWYG interface is shown when the attribute type is `pim_catalog_textarea`",
                                      "x-warning": "Only for `pim_catalog_textarea` attribute type"
                                    },
                                    "number_min": {
                                      "type": "string",
                                      "description": "Minimum integer value allowed when the attribute type is `pim_catalog_metric`, `pim_catalog_price` or `pim_catalog_number`",
                                      "x-warning": "Only for `pim_catalog_metric`, `pim_catalog_price_collection` or `pim_catalog_number` attribute types"
                                    },
                                    "number_max": {
                                      "type": "string",
                                      "description": "Maximum integer value allowed when the attribute type is `pim_catalog_metric`, `pim_catalog_price` or `pim_catalog_number`",
                                      "x-warning": "Only for `pim_catalog_metric`, `pim_catalog_price_collection` or `pim_catalog_number` attribute types"
                                    },
                                    "decimals_allowed": {
                                      "type": "boolean",
                                      "description": "Whether decimals are allowed when the attribute type is `pim_catalog_metric`, `pim_catalog_price` or `pim_catalog_number`",
                                      "x-warning": "Only for `pim_catalog_metric`, `pim_catalog_price_collection` or `pim_catalog_number` attribute types"
                                    },
                                    "negative_allowed": {
                                      "type": "boolean",
                                      "description": "Whether negative values are allowed when the attribute type is `pim_catalog_metric` or `pim_catalog_number`",
                                      "x-warning": "Only for `pim_catalog_metric` or `pim_catalog_number` attribute types"
                                    },
                                    "metric_family": {
                                      "type": "string",
                                      "description": "Metric family when the attribute type is `pim_catalog_metric`",
                                      "x-validation-rules": "Required for `pim_catalog_metric` attribute type",
                                      "x-immutable": true,
                                      "x-warning": "Only for `pim_catalog_metric` attribute type"
                                    },
                                    "default_metric_unit": {
                                      "type": "string",
                                      "description": "Default metric unit when the attribute type is `pim_catalog_metric`",
                                      "x-validation-rules": "Required for `pim_catalog_metric` attribute type",
                                      "x-warning": "Only for `pim_catalog_metric` attribute type"
                                    },
                                    "date_min": {
                                      "type": "string",
                                      "description": "Minimum date allowed when the attribute type is `pim_catalog_date`",
                                      "format": "date-time",
                                      "x-validation-rules": "The datetime format follows the ISO-8601 norm",
                                      "x-warning": "Only for `pim_catalog_date` attribute type"
                                    },
                                    "date_max": {
                                      "type": "string",
                                      "description": "Maximum date allowed when the attribute type is `pim_catalog_date`",
                                      "format": "date-time",
                                      "x-validation-rules": "The datetime format follows the ISO-8601 norm",
                                      "x-warning": "Only for `pim_catalog_date` attribute type"
                                    },
                                    "allowed_extensions": {
                                      "type": "array",
                                      "description": "Extensions allowed when the attribute type is `pim_catalog_file` or `pim_catalog_image`",
                                      "items": {
                                        "type": "string"
                                      },
                                      "x-warning": "Only for `pim_catalog_file` or `pim_catalog_image` attribute types"
                                    },
                                    "max_file_size": {
                                      "type": "string",
                                      "description": "Max file size in MB when the attribute type is `pim_catalog_file` or `pim_catalog_image`",
                                      "x-warning": "Only for `pim_catalog_file` or `pim_catalog_image` attribute types"
                                    },
                                    "reference_data_name": {
                                      "type": "string",
                                      "description": "Reference entity code when the attribute type is `akeneo_reference_entity` or `akeneo_reference_entity_collection` OR Asset family code when the attribute type is `pim_catalog_asset_collection`",
                                      "x-validation-rules": "Required only for `akeneo_reference_entity` or `akeneo_reference_entity_collection` or `pim_catalog_asset_collection` attribute types",
                                      "x-warning": "Only for `akeneo_reference_entity` or `akeneo_reference_entity_collection` or `pim_catalog_asset_collection` attribute types"
                                    },
                                    "default_value": {
                                      "type": "boolean",
                                      "description": "Default value for a Yes/No attribute, applied when creating a new product or product model (only available since the 5.0)",
                                      "x-warning": "Only for `pim_catalog_boolean` attribute type",
                                      "x-from-version": "5.0"
                                    },
                                    "table_configuration": {
                                      "type": "array",
                                      "description": "Configuration of the Table attribute (columns)",
                                      "items": {
                                        "required": [
                                          "code",
                                          "data_type"
                                        ],
                                        "type": "object",
                                        "properties": {
                                          "code": {
                                            "type": "string",
                                            "description": "Column code"
                                          },
                                          "data_type": {
                                            "type": "string",
                                            "description": "Column data type",
                                            "enum": [
                                              "select",
                                              "text",
                                              "number",
                                              "boolean"
                                            ]
                                          },
                                          "validations": {
                                            "type": "object",
                                            "properties": {
                                              "min": {
                                                "type": "number",
                                                "description": "minimum value of a numeric cell",
                                                "x-validation-rules": "only for `number` data type columns"
                                              },
                                              "max": {
                                                "type": "number",
                                                "description": "maximum value of a numeric cell",
                                                "x-validation-rules": "only for `number` data type columns"
                                              },
                                              "decimals_allowed": {
                                                "type": "boolean",
                                                "description": "whether the value of a numeric cell can hold a decimal part",
                                                "x-validation-rules": "only for `number` data type columns"
                                              },
                                              "max_length": {
                                                "type": "number",
                                                "description": "maximum length of a text cell",
                                                "x-validation-rules": "only for `text` data type columns"
                                              }
                                            },
                                            "description": "User defined validation constraints on the cell content"
                                          },
                                          "labels": {
                                            "type": "object",
                                            "properties": {
                                              "localeCode": {
                                                "type": "string",
                                                "description": "Column label for the locale `localeCode`"
                                              }
                                            },
                                            "description": "Column labels for each locale",
                                            "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                                          },
                                          "is_required_for_completeness": {
                                            "type": "boolean",
                                            "description": "Defines if the column should be entirely filled for the attribute to be considered complete",
                                            "default": false,
                                            "x-warning": "This value is always true for the first column in a table configuration"
                                          }
                                        }
                                      },
                                      "x-validation-rules": "Required only for `pim_catalog_table` attribute type",
                                      "x-warning": "Only for `pim_catalog_table` attribute type"
                                    }
                                  },
                                  "example": {
                                    "code": "release_date",
                                    "type": "pim_catalog_date",
                                    "group": "marketing",
                                    "group_labels": {
                                      "en_US": "Marketing",
                                      "fr_FR": "Marketing"
                                    },
                                    "unique": false,
                                    "useable_as_grid_filter": true,
                                    "allowed_extensions": [],
                                    "available_locales": [],
                                    "date_min": "2017-06-28T08:00:00",
                                    "date_max": "2017-08-08T22:00:00",
                                    "sort_order": 1,
                                    "localizable": false,
                                    "scopable": false,
                                    "labels": {
                                      "en_US": "Sale date",
                                      "fr_FR": "Date des soldes"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      },
                      "_links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the current page of resources"
                              }
                            }
                          },
                          "first": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the first page of resources"
                              }
                            }
                          },
                          "previous": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the previous page of resources"
                              }
                            }
                          },
                          "next": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the next page of resources"
                              }
                            }
                          }
                        }
                      },
                      "current_page": {
                        "type": "integer",
                        "description": "Current page number"
                      }
                    }
                  }
                },
                "_links": {
                  "example": {
                    "self": {
                      "href": "https://demo.akeneo.com/api/rest/v1/attributes?page=3&limit=3"
                    },
                    "first": {
                      "href": "https://demo.akeneo.com/api/rest/v1/attributes?page=1&limit=3"
                    },
                    "previous": {
                      "href": "https://demo.akeneo.com/api/rest/v1/attributes?page=2&limit=3"
                    },
                    "next": {
                      "href": "https://demo.akeneo.com/api/rest/v1/attributes?page=4&limit=3"
                    }
                  }
                },
                "current_page": {
                  "example": 3
                },
                "_embedded": {
                  "example": {
                    "items": [
                      {
                        "_links": {
                          "self": {
                            "href": "https://demo.akeneo.com/api/rest/v1/attributes/sku"
                          }
                        },
                        "code": "sku",
                        "type": "pim_catalog_identifier",
                        "group": "other",
                        "group_labels": {
                          "en_US": "Other",
                          "fr_FR": "Autre"
                        },
                        "unique": true,
                        "useable_as_grid_filter": true,
                        "allowed_extensions": [],
                        "available_locales": [],
                        "wysiwyg_enabled": false,
                        "decimals_allowed": false,
                        "negative_allowed": false,
                        "sort_order": 1,
                        "localizable": false,
                        "scopable": false,
                        "labels": {
                          "en_US": "Identifier",
                          "fr_FR": "Identifiant"
                        }
                      },
                      {
                        "_links": {
                          "self": {
                            "href": "https://demo.akeneo.com/api/rest/v1/attributes/release_date"
                          }
                        },
                        "code": "release_date",
                        "type": "pim_catalog_date",
                        "group": "marketing",
                        "unique": false,
                        "useable_as_grid_filter": true,
                        "allowed_extensions": [],
                        "available_locales": [],
                        "wysiwyg_enabled": false,
                        "decimals_allowed": false,
                        "negative_allowed": false,
                        "date_min": "2017-06-28T08:00:00",
                        "date_max": "2017-08-08T22:00:00",
                        "sort_order": 1,
                        "localizable": false,
                        "scopable": false,
                        "labels": {
                          "en_US": "Sale date",
                          "fr_FR": "Date des soldes"
                        }
                      },
                      {
                        "_links": {
                          "self": {
                            "href": "http://localhost:8080/api/rest/v1/attributes/food_composition"
                          }
                        },
                        "code": "food_composition",
                        "type": "pim_catalog_table",
                        "group": "product",
                        "unique": false,
                        "useable_as_grid_filter": false,
                        "allowed_extensions": [],
                        "available_locales": [],
                        "sort_order": 0,
                        "localizable": false,
                        "scopable": false,
                        "labels": {
                          "en_US": "Composition",
                          "fr_FR": "Composition"
                        },
                        "guidelines": {},
                        "table_configuration": [
                          {
                            "code": "ingredient",
                            "data_type": "select",
                            "labels": {
                              "en_US": "Ingredient",
                              "fr_FR": "Ingrédient"
                            },
                            "validations": {},
                            "is_required_for_completeness": true
                          },
                          {
                            "code": "percentage",
                            "data_type": "number",
                            "labels": {
                              "en_US": "%",
                              "fr_FR": "%"
                            },
                            "validations": {
                              "max": 100,
                              "min": 0,
                              "decimals_allowed": true
                            },
                            "is_required_for_completeness": true
                          },
                          {
                            "code": "allergen",
                            "data_type": "boolean",
                            "labels": {
                              "en_US": "Allergen",
                              "fr_FR": "Allergène"
                            },
                            "validations": {},
                            "is_required_for_completeness": false
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "406": {
              "description": "Not Acceptable",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 406
                },
                "message": {
                  "example": "`xxx’ in `Accept` header is not valid. Only `application/json` is allowed."
                }
              },
              "x-details": "The `Accept` header is not `application/json` but it should"
            }
          },
          "x-versions": [
            "1.7",
            "2.x",
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ]
        },
        "post": {
          "tags": [
            "Attribute"
          ],
          "summary": "Create a new attribute",
          "description": "This endpoint allows you to create a new attribute.",
          "operationId": "post_attributes",
          "requestBody": {
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "code",
                    "group",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Attribute code",
                      "x-immutable": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Attribute type. See <a href='/concepts/catalog-structure.html#attribute'>type</a> section for more details.",
                      "enum": [
                        "pim_catalog_identifier",
                        "pim_catalog_metric",
                        "pim_catalog_number",
                        "pim_catalog_reference_data_multi_select",
                        "pim_catalog_reference_data_simple_select",
                        "pim_catalog_simpleselect",
                        "pim_catalog_multiselect",
                        "pim_catalog_date",
                        "pim_catalog_textarea",
                        "pim_catalog_text",
                        "pim_catalog_file",
                        "pim_catalog_image",
                        "pim_catalog_price_collection",
                        "pim_catalog_boolean",
                        "akeneo_reference_entity",
                        "akeneo_reference_entity_collection",
                        "pim_catalog_asset_collection"
                      ],
                      "x-validation-rules": "The type is one of the following values",
                      "x-immutable": true
                    },
                    "labels": {
                      "type": "object",
                      "properties": {
                        "localeCode": {
                          "type": "string",
                          "description": "Attribute label for the locale `localeCode`"
                        }
                      },
                      "description": "Attribute labels for each locale",
                      "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                    },
                    "group": {
                      "type": "string",
                      "description": "Attribute group",
                      "x-validation-rules": "It is the code of an existing group"
                    },
                    "group_labels": {
                      "type": "object",
                      "properties": {
                        "localeCode": {
                          "type": "string",
                          "description": "Group label for the locale `localeCode`"
                        }
                      },
                      "description": "Group labels for each locale",
                      "x-validation-rules": "The `localeCode` is the code of an existing and activated locale",
                      "x-read-only": true
                    },
                    "sort_order": {
                      "type": "integer",
                      "description": "Order of the attribute in its group",
                      "x-validation-rules": "It is a positive integer"
                    },
                    "localizable": {
                      "type": "boolean",
                      "description": "Whether the attribute is localizable, i.e. can have one value by locale",
                      "default": false,
                      "x-immutable": true
                    },
                    "scopable": {
                      "type": "boolean",
                      "description": "Whether the attribute is scopable, i.e. can have one value by channel",
                      "default": false,
                      "x-immutable": true
                    },
                    "available_locales": {
                      "type": "array",
                      "description": "To make the attribute locale specfic, specify here for which locales it is specific",
                      "items": {
                        "type": "string"
                      },
                      "x-validation-rules": "Each string of the array is an existing and activated locale"
                    },
                    "unique": {
                      "type": "boolean",
                      "description": "Whether two values for the attribute cannot be the same",
                      "x-immutable": true
                    },
                    "useable_as_grid_filter": {
                      "type": "boolean",
                      "description": "Whether the attribute can be used as a filter for the product grid in the PIM user interface"
                    },
                    "max_characters": {
                      "type": "integer",
                      "description": "Number maximum of characters allowed for the value of the attribute when the attribute type is `pim_catalog_text`, `pim_catalog_textarea` or `pim_catalog_identifier`",
                      "x-warning": "Only for `pim_catalog_text`, `pim_catalog_textarea` or `pim_catalog_identifier` attribute types"
                    },
                    "validation_rule": {
                      "type": "string",
                      "description": "Validation rule type used to validate any attribute value when the attribute type is `pim_catalog_text` or `pim_catalog_identifier`",
                      "x-validation-rules": "Equal to `regexp` when the attribute type is equal to `pim_catalog_identifier`",
                      "x-warning": "Only for `pim_catalog_text` or `pim_catalog_identifier` attribute types"
                    },
                    "validation_regexp": {
                      "type": "string",
                      "description": "Regexp expression used to validate any attribute value when the attribute type is `pim_catalog_text` or `pim_catalog_identifier`",
                      "x-validation-rules": "Required when the property `validation_rule` is equal to `regexp`",
                      "x-warning": "Only for `pim_catalog_text` or `pim_catalog_identifier` attribute types"
                    },
                    "wysiwyg_enabled": {
                      "type": "boolean",
                      "description": "Whether the WYSIWYG interface is shown when the attribute type is `pim_catalog_textarea`",
                      "x-warning": "Only for `pim_catalog_textarea` attribute type"
                    },
                    "number_min": {
                      "type": "string",
                      "description": "Minimum integer value allowed when the attribute type is `pim_catalog_metric`, `pim_catalog_price` or `pim_catalog_number`",
                      "x-warning": "Only for `pim_catalog_metric`, `pim_catalog_price_collection` or `pim_catalog_number` attribute types"
                    },
                    "number_max": {
                      "type": "string",
                      "description": "Maximum integer value allowed when the attribute type is `pim_catalog_metric`, `pim_catalog_price` or `pim_catalog_number`",
                      "x-warning": "Only for `pim_catalog_metric`, `pim_catalog_price_collection` or `pim_catalog_number` attribute types"
                    },
                    "decimals_allowed": {
                      "type": "boolean",
                      "description": "Whether decimals are allowed when the attribute type is `pim_catalog_metric`, `pim_catalog_price` or `pim_catalog_number`",
                      "x-warning": "Only for `pim_catalog_metric`, `pim_catalog_price_collection` or `pim_catalog_number` attribute types"
                    },
                    "negative_allowed": {
                      "type": "boolean",
                      "description": "Whether negative values are allowed when the attribute type is `pim_catalog_metric` or `pim_catalog_number`",
                      "x-warning": "Only for `pim_catalog_metric` or `pim_catalog_number` attribute types"
                    },
                    "metric_family": {
                      "type": "string",
                      "description": "Metric family when the attribute type is `pim_catalog_metric`",
                      "x-validation-rules": "Required for `pim_catalog_metric` attribute type",
                      "x-immutable": true,
                      "x-warning": "Only for `pim_catalog_metric` attribute type"
                    },
                    "default_metric_unit": {
                      "type": "string",
                      "description": "Default metric unit when the attribute type is `pim_catalog_metric`",
                      "x-validation-rules": "Required for `pim_catalog_metric` attribute type",
                      "x-warning": "Only for `pim_catalog_metric` attribute type"
                    },
                    "date_min": {
                      "type": "string",
                      "description": "Minimum date allowed when the attribute type is `pim_catalog_date`",
                      "format": "date-time",
                      "x-validation-rules": "The datetime format follows the ISO-8601 norm",
                      "x-warning": "Only for `pim_catalog_date` attribute type"
                    },
                    "date_max": {
                      "type": "string",
                      "description": "Maximum date allowed when the attribute type is `pim_catalog_date`",
                      "format": "date-time",
                      "x-validation-rules": "The datetime format follows the ISO-8601 norm",
                      "x-warning": "Only for `pim_catalog_date` attribute type"
                    },
                    "allowed_extensions": {
                      "type": "array",
                      "description": "Extensions allowed when the attribute type is `pim_catalog_file` or `pim_catalog_image`",
                      "items": {
                        "type": "string"
                      },
                      "x-warning": "Only for `pim_catalog_file` or `pim_catalog_image` attribute types"
                    },
                    "max_file_size": {
                      "type": "string",
                      "description": "Max file size in MB when the attribute type is `pim_catalog_file` or `pim_catalog_image`",
                      "x-warning": "Only for `pim_catalog_file` or `pim_catalog_image` attribute types"
                    },
                    "reference_data_name": {
                      "type": "string",
                      "description": "Reference entity code when the attribute type is `akeneo_reference_entity` or `akeneo_reference_entity_collection` OR Asset family code when the attribute type is `pim_catalog_asset_collection`",
                      "x-validation-rules": "Required only for `akeneo_reference_entity` or `akeneo_reference_entity_collection` or `pim_catalog_asset_collection` attribute types",
                      "x-warning": "Only for `akeneo_reference_entity` or `akeneo_reference_entity_collection` or `pim_catalog_asset_collection` attribute types"
                    },
                    "default_value": {
                      "type": "boolean",
                      "description": "Default value for a Yes/No attribute, applied when creating a new product or product model (only available since the 5.0)",
                      "x-warning": "Only for `pim_catalog_boolean` attribute type",
                      "x-from-version": "5.0"
                    },
                    "table_configuration": {
                      "type": "array",
                      "description": "Configuration of the Table attribute (columns)",
                      "items": {
                        "required": [
                          "code",
                          "data_type"
                        ],
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string",
                            "description": "Column code"
                          },
                          "data_type": {
                            "type": "string",
                            "description": "Column data type",
                            "enum": [
                              "select",
                              "text",
                              "number",
                              "boolean"
                            ]
                          },
                          "validations": {
                            "type": "object",
                            "properties": {
                              "min": {
                                "type": "number",
                                "description": "minimum value of a numeric cell",
                                "x-validation-rules": "only for `number` data type columns"
                              },
                              "max": {
                                "type": "number",
                                "description": "maximum value of a numeric cell",
                                "x-validation-rules": "only for `number` data type columns"
                              },
                              "decimals_allowed": {
                                "type": "boolean",
                                "description": "whether the value of a numeric cell can hold a decimal part",
                                "x-validation-rules": "only for `number` data type columns"
                              },
                              "max_length": {
                                "type": "number",
                                "description": "maximum length of a text cell",
                                "x-validation-rules": "only for `text` data type columns"
                              }
                            },
                            "description": "User defined validation constraints on the cell content"
                          },
                          "labels": {
                            "type": "object",
                            "properties": {
                              "localeCode": {
                                "type": "string",
                                "description": "Column label for the locale `localeCode`"
                              }
                            },
                            "description": "Column labels for each locale",
                            "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                          },
                          "is_required_for_completeness": {
                            "type": "boolean",
                            "description": "Defines if the column should be entirely filled for the attribute to be considered complete",
                            "default": false,
                            "x-warning": "This value is always true for the first column in a table configuration"
                          }
                        }
                      },
                      "x-validation-rules": "Required only for `pim_catalog_table` attribute type",
                      "x-warning": "Only for `pim_catalog_table` attribute type"
                    }
                  },
                  "example": {
                    "code": "release_date",
                    "type": "pim_catalog_date",
                    "group": "marketing",
                    "group_labels": {
                      "en_US": "Marketing",
                      "fr_FR": "Marketing"
                    },
                    "unique": false,
                    "useable_as_grid_filter": true,
                    "allowed_extensions": [],
                    "available_locales": [],
                    "date_min": "2017-06-28T08:00:00",
                    "date_max": "2017-08-08T22:00:00",
                    "sort_order": 1,
                    "localizable": false,
                    "scopable": false,
                    "labels": {
                      "en_US": "Sale date",
                      "fr_FR": "Date des soldes"
                    }
                  }
                }
              }
            },
            "required": false
          },
          "responses": {
            "201": {
              "description": "Created",
              "headers": {
                "Location": {
                  "description": "URI of the created resource",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {},
              "x-details": "Means that the creation was successful"
            },
            "400": {
              "description": "Bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 400
                },
                "message": {
                  "example": "Invalid JSON message received"
                }
              },
              "x-details": "Can be caused by a malformed JSON request"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "415": {
              "description": "Unsupported Media type",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 415
                },
                "message": {
                  "example": "`xxx’ in `Content-Type’ header is not valid.  Only `application/json’ is allowed."
                }
              },
              "x-details": "The `Content-Type` header has to be `application/json`"
            },
            "422": {
              "description": "Unprocessable entity",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 422
                },
                "message": {
                  "example": "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
                },
                "_links": {
                  "example": {
                    "documentation": {
                      "href": "http://api.akeneo.com/api-reference.html"
                    }
                  }
                }
              },
              "x-details": "The validation of the entity given in the body of the request failed"
            }
          },
          "x-versions": [
            "1.7",
            "2.x",
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-codegen-request-body-name": "body"
        },
        "patch": {
          "tags": [
            "Attribute"
          ],
          "summary": "Update/create several attributes",
          "description": "This endpoint allows you to update and/or create several attributes at once.",
          "operationId": "patch_attributes",
          "requestBody": {
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "code",
                    "group",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Attribute code",
                      "x-immutable": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Attribute type. See <a href='/concepts/catalog-structure.html#attribute'>type</a> section for more details.",
                      "enum": [
                        "pim_catalog_identifier",
                        "pim_catalog_metric",
                        "pim_catalog_number",
                        "pim_catalog_reference_data_multi_select",
                        "pim_catalog_reference_data_simple_select",
                        "pim_catalog_simpleselect",
                        "pim_catalog_multiselect",
                        "pim_catalog_date",
                        "pim_catalog_textarea",
                        "pim_catalog_text",
                        "pim_catalog_file",
                        "pim_catalog_image",
                        "pim_catalog_price_collection",
                        "pim_catalog_boolean",
                        "akeneo_reference_entity",
                        "akeneo_reference_entity_collection",
                        "pim_catalog_asset_collection"
                      ],
                      "x-validation-rules": "The type is one of the following values",
                      "x-immutable": true
                    },
                    "labels": {
                      "type": "object",
                      "properties": {
                        "localeCode": {
                          "type": "string",
                          "description": "Attribute label for the locale `localeCode`"
                        }
                      },
                      "description": "Attribute labels for each locale",
                      "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                    },
                    "group": {
                      "type": "string",
                      "description": "Attribute group",
                      "x-validation-rules": "It is the code of an existing group"
                    },
                    "group_labels": {
                      "type": "object",
                      "properties": {
                        "localeCode": {
                          "type": "string",
                          "description": "Group label for the locale `localeCode`"
                        }
                      },
                      "description": "Group labels for each locale",
                      "x-validation-rules": "The `localeCode` is the code of an existing and activated locale",
                      "x-read-only": true
                    },
                    "sort_order": {
                      "type": "integer",
                      "description": "Order of the attribute in its group",
                      "x-validation-rules": "It is a positive integer"
                    },
                    "localizable": {
                      "type": "boolean",
                      "description": "Whether the attribute is localizable, i.e. can have one value by locale",
                      "default": false,
                      "x-immutable": true
                    },
                    "scopable": {
                      "type": "boolean",
                      "description": "Whether the attribute is scopable, i.e. can have one value by channel",
                      "default": false,
                      "x-immutable": true
                    },
                    "available_locales": {
                      "type": "array",
                      "description": "To make the attribute locale specfic, specify here for which locales it is specific",
                      "items": {
                        "type": "string"
                      },
                      "x-validation-rules": "Each string of the array is an existing and activated locale"
                    },
                    "unique": {
                      "type": "boolean",
                      "description": "Whether two values for the attribute cannot be the same",
                      "x-immutable": true
                    },
                    "useable_as_grid_filter": {
                      "type": "boolean",
                      "description": "Whether the attribute can be used as a filter for the product grid in the PIM user interface"
                    },
                    "max_characters": {
                      "type": "integer",
                      "description": "Number maximum of characters allowed for the value of the attribute when the attribute type is `pim_catalog_text`, `pim_catalog_textarea` or `pim_catalog_identifier`",
                      "x-warning": "Only for `pim_catalog_text`, `pim_catalog_textarea` or `pim_catalog_identifier` attribute types"
                    },
                    "validation_rule": {
                      "type": "string",
                      "description": "Validation rule type used to validate any attribute value when the attribute type is `pim_catalog_text` or `pim_catalog_identifier`",
                      "x-validation-rules": "Equal to `regexp` when the attribute type is equal to `pim_catalog_identifier`",
                      "x-warning": "Only for `pim_catalog_text` or `pim_catalog_identifier` attribute types"
                    },
                    "validation_regexp": {
                      "type": "string",
                      "description": "Regexp expression used to validate any attribute value when the attribute type is `pim_catalog_text` or `pim_catalog_identifier`",
                      "x-validation-rules": "Required when the property `validation_rule` is equal to `regexp`",
                      "x-warning": "Only for `pim_catalog_text` or `pim_catalog_identifier` attribute types"
                    },
                    "wysiwyg_enabled": {
                      "type": "boolean",
                      "description": "Whether the WYSIWYG interface is shown when the attribute type is `pim_catalog_textarea`",
                      "x-warning": "Only for `pim_catalog_textarea` attribute type"
                    },
                    "number_min": {
                      "type": "string",
                      "description": "Minimum integer value allowed when the attribute type is `pim_catalog_metric`, `pim_catalog_price` or `pim_catalog_number`",
                      "x-warning": "Only for `pim_catalog_metric`, `pim_catalog_price_collection` or `pim_catalog_number` attribute types"
                    },
                    "number_max": {
                      "type": "string",
                      "description": "Maximum integer value allowed when the attribute type is `pim_catalog_metric`, `pim_catalog_price` or `pim_catalog_number`",
                      "x-warning": "Only for `pim_catalog_metric`, `pim_catalog_price_collection` or `pim_catalog_number` attribute types"
                    },
                    "decimals_allowed": {
                      "type": "boolean",
                      "description": "Whether decimals are allowed when the attribute type is `pim_catalog_metric`, `pim_catalog_price` or `pim_catalog_number`",
                      "x-warning": "Only for `pim_catalog_metric`, `pim_catalog_price_collection` or `pim_catalog_number` attribute types"
                    },
                    "negative_allowed": {
                      "type": "boolean",
                      "description": "Whether negative values are allowed when the attribute type is `pim_catalog_metric` or `pim_catalog_number`",
                      "x-warning": "Only for `pim_catalog_metric` or `pim_catalog_number` attribute types"
                    },
                    "metric_family": {
                      "type": "string",
                      "description": "Metric family when the attribute type is `pim_catalog_metric`",
                      "x-validation-rules": "Required for `pim_catalog_metric` attribute type",
                      "x-immutable": true,
                      "x-warning": "Only for `pim_catalog_metric` attribute type"
                    },
                    "default_metric_unit": {
                      "type": "string",
                      "description": "Default metric unit when the attribute type is `pim_catalog_metric`",
                      "x-validation-rules": "Required for `pim_catalog_metric` attribute type",
                      "x-warning": "Only for `pim_catalog_metric` attribute type"
                    },
                    "date_min": {
                      "type": "string",
                      "description": "Minimum date allowed when the attribute type is `pim_catalog_date`",
                      "format": "date-time",
                      "x-validation-rules": "The datetime format follows the ISO-8601 norm",
                      "x-warning": "Only for `pim_catalog_date` attribute type"
                    },
                    "date_max": {
                      "type": "string",
                      "description": "Maximum date allowed when the attribute type is `pim_catalog_date`",
                      "format": "date-time",
                      "x-validation-rules": "The datetime format follows the ISO-8601 norm",
                      "x-warning": "Only for `pim_catalog_date` attribute type"
                    },
                    "allowed_extensions": {
                      "type": "array",
                      "description": "Extensions allowed when the attribute type is `pim_catalog_file` or `pim_catalog_image`",
                      "items": {
                        "type": "string"
                      },
                      "x-warning": "Only for `pim_catalog_file` or `pim_catalog_image` attribute types"
                    },
                    "max_file_size": {
                      "type": "string",
                      "description": "Max file size in MB when the attribute type is `pim_catalog_file` or `pim_catalog_image`",
                      "x-warning": "Only for `pim_catalog_file` or `pim_catalog_image` attribute types"
                    },
                    "reference_data_name": {
                      "type": "string",
                      "description": "Reference entity code when the attribute type is `akeneo_reference_entity` or `akeneo_reference_entity_collection` OR Asset family code when the attribute type is `pim_catalog_asset_collection`",
                      "x-validation-rules": "Required only for `akeneo_reference_entity` or `akeneo_reference_entity_collection` or `pim_catalog_asset_collection` attribute types",
                      "x-warning": "Only for `akeneo_reference_entity` or `akeneo_reference_entity_collection` or `pim_catalog_asset_collection` attribute types"
                    },
                    "default_value": {
                      "type": "boolean",
                      "description": "Default value for a Yes/No attribute, applied when creating a new product or product model (only available since the 5.0)",
                      "x-warning": "Only for `pim_catalog_boolean` attribute type",
                      "x-from-version": "5.0"
                    },
                    "table_configuration": {
                      "type": "array",
                      "description": "Configuration of the Table attribute (columns)",
                      "items": {
                        "required": [
                          "code",
                          "data_type"
                        ],
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string",
                            "description": "Column code"
                          },
                          "data_type": {
                            "type": "string",
                            "description": "Column data type",
                            "enum": [
                              "select",
                              "text",
                              "number",
                              "boolean"
                            ]
                          },
                          "validations": {
                            "type": "object",
                            "properties": {
                              "min": {
                                "type": "number",
                                "description": "minimum value of a numeric cell",
                                "x-validation-rules": "only for `number` data type columns"
                              },
                              "max": {
                                "type": "number",
                                "description": "maximum value of a numeric cell",
                                "x-validation-rules": "only for `number` data type columns"
                              },
                              "decimals_allowed": {
                                "type": "boolean",
                                "description": "whether the value of a numeric cell can hold a decimal part",
                                "x-validation-rules": "only for `number` data type columns"
                              },
                              "max_length": {
                                "type": "number",
                                "description": "maximum length of a text cell",
                                "x-validation-rules": "only for `text` data type columns"
                              }
                            },
                            "description": "User defined validation constraints on the cell content"
                          },
                          "labels": {
                            "type": "object",
                            "properties": {
                              "localeCode": {
                                "type": "string",
                                "description": "Column label for the locale `localeCode`"
                              }
                            },
                            "description": "Column labels for each locale",
                            "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                          },
                          "is_required_for_completeness": {
                            "type": "boolean",
                            "description": "Defines if the column should be entirely filled for the attribute to be considered complete",
                            "default": false,
                            "x-warning": "This value is always true for the first column in a table configuration"
                          }
                        }
                      },
                      "x-validation-rules": "Required only for `pim_catalog_table` attribute type",
                      "x-warning": "Only for `pim_catalog_table` attribute type"
                    }
                  },
                  "example": {
                    "code": "release_date",
                    "type": "pim_catalog_date",
                    "group": "marketing",
                    "group_labels": {
                      "en_US": "Marketing",
                      "fr_FR": "Marketing"
                    },
                    "unique": false,
                    "useable_as_grid_filter": true,
                    "allowed_extensions": [],
                    "available_locales": [],
                    "date_min": "2017-06-28T08:00:00",
                    "date_max": "2017-08-08T22:00:00",
                    "sort_order": 1,
                    "localizable": false,
                    "scopable": false,
                    "labels": {
                      "en_US": "Sale date",
                      "fr_FR": "Date des soldes"
                    }
                  },
                  "x-examples": {
                    "x-example-1": "{\"code\":\"description\",\"useable_as_grid_filter\":true}",
                    "x-example-2": "{\"code\":\"short_description\",\"group\":\"marketig\"}",
                    "x-example-3": "{\"code\":\"release_date\",\"date_min\":\"2017-06-28T08:00:00\"}"
                  }
                }
              }
            },
            "required": false
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "line": {
                        "type": "integer",
                        "description": "Line number"
                      },
                      "identifier": {
                        "type": "string",
                        "description": "Resource identifier, only filled when the resource is a product"
                      },
                      "code": {
                        "type": "string",
                        "description": "Resource code, only filled when the resource is not a product"
                      },
                      "status_code": {
                        "type": "integer",
                        "description": "HTTP status code, see <a href=\"/documentation/responses.html#client-errors\">Client errors</a> to understand the meaning of each code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "x-example-1": {
                  "example": "{\"line\":1,\"code\":\"description\",\"status_code\":201}"
                },
                "x-example-2": {
                  "example": "{\"line\":2,\"code\":\"short_description\",\"status_code\":422,\"message\":\"Group \"marketig\" does not exist.\"}"
                },
                "x-example-3": {
                  "example": "{\"line\":3,\"code\":\"release_date\",\"status_code\":204}"
                }
              },
              "x-details": "Returns a plain text response whose lines are JSON containing the status of each update or creation",
              "x-no-entity": true
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "413": {
              "description": "Request Entity Too Large",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 413
                },
                "message": {
                  "example": "Too many resources to process, 100 is the maximum allowed."
                }
              },
              "x-details": "There are too many resources to process (max 100) or the line of JSON is too long (max 1 000 000 characters)"
            },
            "415": {
              "description": "Unsupported Media type",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 415
                },
                "message": {
                  "example": "`xxx’ in `Content-Type’ header is not valid.  Only `application/vnd.akeneo.collection+json’ is allowed."
                }
              },
              "x-details": "The `Content-Type` header has to be `application/vnd.akeneo.collection+json`"
            }
          },
          "x-versions": [
            "1.7",
            "2.x",
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-body-by-line": "Contains several lines, each line is an attribute in JSON standard format",
          "x-codegen-request-body-name": "body"
        }
      },
      "/api/rest/v1/attributes/{code}": {
        "get": {
          "tags": [
            "Attribute"
          ],
          "summary": "Get an attribute",
          "description": "This endpoint allows you to get the information about a given attribute.",
          "operationId": "get_attributes__code_",
          "parameters": [
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "with_table_select_options",
              "in": "query",
              "description": "Return the options of 'select' column types (of a table attribute) in the response. (Only available since the 7.0 version)",
              "schema": {
                "type": "boolean",
                "default": false,
                "x-from-version": "7.0"
              },
              "x-from-version": "7.0"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "required": [
                      "code",
                      "group",
                      "type"
                    ],
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Attribute code",
                        "x-immutable": true
                      },
                      "type": {
                        "type": "string",
                        "description": "Attribute type. See <a href='/concepts/catalog-structure.html#attribute'>type</a> section for more details.",
                        "enum": [
                          "pim_catalog_identifier",
                          "pim_catalog_metric",
                          "pim_catalog_number",
                          "pim_catalog_reference_data_multi_select",
                          "pim_catalog_reference_data_simple_select",
                          "pim_catalog_simpleselect",
                          "pim_catalog_multiselect",
                          "pim_catalog_date",
                          "pim_catalog_textarea",
                          "pim_catalog_text",
                          "pim_catalog_file",
                          "pim_catalog_image",
                          "pim_catalog_price_collection",
                          "pim_catalog_boolean",
                          "akeneo_reference_entity",
                          "akeneo_reference_entity_collection",
                          "pim_catalog_asset_collection"
                        ],
                        "x-validation-rules": "The type is one of the following values",
                        "x-immutable": true
                      },
                      "labels": {
                        "type": "object",
                        "properties": {
                          "localeCode": {
                            "type": "string",
                            "description": "Attribute label for the locale `localeCode`"
                          }
                        },
                        "description": "Attribute labels for each locale",
                        "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                      },
                      "group": {
                        "type": "string",
                        "description": "Attribute group",
                        "x-validation-rules": "It is the code of an existing group"
                      },
                      "group_labels": {
                        "type": "object",
                        "properties": {
                          "localeCode": {
                            "type": "string",
                            "description": "Group label for the locale `localeCode`"
                          }
                        },
                        "description": "Group labels for each locale",
                        "x-validation-rules": "The `localeCode` is the code of an existing and activated locale",
                        "x-read-only": true
                      },
                      "sort_order": {
                        "type": "integer",
                        "description": "Order of the attribute in its group",
                        "x-validation-rules": "It is a positive integer"
                      },
                      "localizable": {
                        "type": "boolean",
                        "description": "Whether the attribute is localizable, i.e. can have one value by locale",
                        "default": false,
                        "x-immutable": true
                      },
                      "scopable": {
                        "type": "boolean",
                        "description": "Whether the attribute is scopable, i.e. can have one value by channel",
                        "default": false,
                        "x-immutable": true
                      },
                      "available_locales": {
                        "type": "array",
                        "description": "To make the attribute locale specfic, specify here for which locales it is specific",
                        "items": {
                          "type": "string"
                        },
                        "x-validation-rules": "Each string of the array is an existing and activated locale"
                      },
                      "unique": {
                        "type": "boolean",
                        "description": "Whether two values for the attribute cannot be the same",
                        "x-immutable": true
                      },
                      "useable_as_grid_filter": {
                        "type": "boolean",
                        "description": "Whether the attribute can be used as a filter for the product grid in the PIM user interface"
                      },
                      "max_characters": {
                        "type": "integer",
                        "description": "Number maximum of characters allowed for the value of the attribute when the attribute type is `pim_catalog_text`, `pim_catalog_textarea` or `pim_catalog_identifier`",
                        "x-warning": "Only for `pim_catalog_text`, `pim_catalog_textarea` or `pim_catalog_identifier` attribute types"
                      },
                      "validation_rule": {
                        "type": "string",
                        "description": "Validation rule type used to validate any attribute value when the attribute type is `pim_catalog_text` or `pim_catalog_identifier`",
                        "x-validation-rules": "Equal to `regexp` when the attribute type is equal to `pim_catalog_identifier`",
                        "x-warning": "Only for `pim_catalog_text` or `pim_catalog_identifier` attribute types"
                      },
                      "validation_regexp": {
                        "type": "string",
                        "description": "Regexp expression used to validate any attribute value when the attribute type is `pim_catalog_text` or `pim_catalog_identifier`",
                        "x-validation-rules": "Required when the property `validation_rule` is equal to `regexp`",
                        "x-warning": "Only for `pim_catalog_text` or `pim_catalog_identifier` attribute types"
                      },
                      "wysiwyg_enabled": {
                        "type": "boolean",
                        "description": "Whether the WYSIWYG interface is shown when the attribute type is `pim_catalog_textarea`",
                        "x-warning": "Only for `pim_catalog_textarea` attribute type"
                      },
                      "number_min": {
                        "type": "string",
                        "description": "Minimum integer value allowed when the attribute type is `pim_catalog_metric`, `pim_catalog_price` or `pim_catalog_number`",
                        "x-warning": "Only for `pim_catalog_metric`, `pim_catalog_price_collection` or `pim_catalog_number` attribute types"
                      },
                      "number_max": {
                        "type": "string",
                        "description": "Maximum integer value allowed when the attribute type is `pim_catalog_metric`, `pim_catalog_price` or `pim_catalog_number`",
                        "x-warning": "Only for `pim_catalog_metric`, `pim_catalog_price_collection` or `pim_catalog_number` attribute types"
                      },
                      "decimals_allowed": {
                        "type": "boolean",
                        "description": "Whether decimals are allowed when the attribute type is `pim_catalog_metric`, `pim_catalog_price` or `pim_catalog_number`",
                        "x-warning": "Only for `pim_catalog_metric`, `pim_catalog_price_collection` or `pim_catalog_number` attribute types"
                      },
                      "negative_allowed": {
                        "type": "boolean",
                        "description": "Whether negative values are allowed when the attribute type is `pim_catalog_metric` or `pim_catalog_number`",
                        "x-warning": "Only for `pim_catalog_metric` or `pim_catalog_number` attribute types"
                      },
                      "metric_family": {
                        "type": "string",
                        "description": "Metric family when the attribute type is `pim_catalog_metric`",
                        "x-validation-rules": "Required for `pim_catalog_metric` attribute type",
                        "x-immutable": true,
                        "x-warning": "Only for `pim_catalog_metric` attribute type"
                      },
                      "default_metric_unit": {
                        "type": "string",
                        "description": "Default metric unit when the attribute type is `pim_catalog_metric`",
                        "x-validation-rules": "Required for `pim_catalog_metric` attribute type",
                        "x-warning": "Only for `pim_catalog_metric` attribute type"
                      },
                      "date_min": {
                        "type": "string",
                        "description": "Minimum date allowed when the attribute type is `pim_catalog_date`",
                        "format": "date-time",
                        "x-validation-rules": "The datetime format follows the ISO-8601 norm",
                        "x-warning": "Only for `pim_catalog_date` attribute type"
                      },
                      "date_max": {
                        "type": "string",
                        "description": "Maximum date allowed when the attribute type is `pim_catalog_date`",
                        "format": "date-time",
                        "x-validation-rules": "The datetime format follows the ISO-8601 norm",
                        "x-warning": "Only for `pim_catalog_date` attribute type"
                      },
                      "allowed_extensions": {
                        "type": "array",
                        "description": "Extensions allowed when the attribute type is `pim_catalog_file` or `pim_catalog_image`",
                        "items": {
                          "type": "string"
                        },
                        "x-warning": "Only for `pim_catalog_file` or `pim_catalog_image` attribute types"
                      },
                      "max_file_size": {
                        "type": "string",
                        "description": "Max file size in MB when the attribute type is `pim_catalog_file` or `pim_catalog_image`",
                        "x-warning": "Only for `pim_catalog_file` or `pim_catalog_image` attribute types"
                      },
                      "reference_data_name": {
                        "type": "string",
                        "description": "Reference entity code when the attribute type is `akeneo_reference_entity` or `akeneo_reference_entity_collection` OR Asset family code when the attribute type is `pim_catalog_asset_collection`",
                        "x-validation-rules": "Required only for `akeneo_reference_entity` or `akeneo_reference_entity_collection` or `pim_catalog_asset_collection` attribute types",
                        "x-warning": "Only for `akeneo_reference_entity` or `akeneo_reference_entity_collection` or `pim_catalog_asset_collection` attribute types"
                      },
                      "default_value": {
                        "type": "boolean",
                        "description": "Default value for a Yes/No attribute, applied when creating a new product or product model (only available since the 5.0)",
                        "x-warning": "Only for `pim_catalog_boolean` attribute type",
                        "x-from-version": "5.0"
                      },
                      "table_configuration": {
                        "type": "array",
                        "description": "Configuration of the Table attribute (columns)",
                        "items": {
                          "required": [
                            "code",
                            "data_type"
                          ],
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "description": "Column code"
                            },
                            "data_type": {
                              "type": "string",
                              "description": "Column data type",
                              "enum": [
                                "select",
                                "text",
                                "number",
                                "boolean"
                              ]
                            },
                            "validations": {
                              "type": "object",
                              "properties": {
                                "min": {
                                  "type": "number",
                                  "description": "minimum value of a numeric cell",
                                  "x-validation-rules": "only for `number` data type columns"
                                },
                                "max": {
                                  "type": "number",
                                  "description": "maximum value of a numeric cell",
                                  "x-validation-rules": "only for `number` data type columns"
                                },
                                "decimals_allowed": {
                                  "type": "boolean",
                                  "description": "whether the value of a numeric cell can hold a decimal part",
                                  "x-validation-rules": "only for `number` data type columns"
                                },
                                "max_length": {
                                  "type": "number",
                                  "description": "maximum length of a text cell",
                                  "x-validation-rules": "only for `text` data type columns"
                                }
                              },
                              "description": "User defined validation constraints on the cell content"
                            },
                            "labels": {
                              "type": "object",
                              "properties": {
                                "localeCode": {
                                  "type": "string",
                                  "description": "Column label for the locale `localeCode`"
                                }
                              },
                              "description": "Column labels for each locale",
                              "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                            },
                            "is_required_for_completeness": {
                              "type": "boolean",
                              "description": "Defines if the column should be entirely filled for the attribute to be considered complete",
                              "default": false,
                              "x-warning": "This value is always true for the first column in a table configuration"
                            }
                          }
                        },
                        "x-validation-rules": "Required only for `pim_catalog_table` attribute type",
                        "x-warning": "Only for `pim_catalog_table` attribute type"
                      }
                    },
                    "example": {
                      "code": "release_date",
                      "type": "pim_catalog_date",
                      "group": "marketing",
                      "group_labels": {
                        "en_US": "Marketing",
                        "fr_FR": "Marketing"
                      },
                      "unique": false,
                      "useable_as_grid_filter": true,
                      "allowed_extensions": [],
                      "available_locales": [],
                      "date_min": "2017-06-28T08:00:00",
                      "date_max": "2017-08-08T22:00:00",
                      "sort_order": 1,
                      "localizable": false,
                      "scopable": false,
                      "labels": {
                        "en_US": "Sale date",
                        "fr_FR": "Date des soldes"
                      }
                    }
                  }
                }
              },
              "x-details": "Returns the content of the attribute in JSON standard format"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "404": {
              "description": "Resource not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 404
                },
                "message": {
                  "example": "Resource `my_resource_code` does not exist."
                }
              },
              "x-details": "The resource code given in the URI does not correspond to any existing PIM resource"
            },
            "406": {
              "description": "Not Acceptable",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 406
                },
                "message": {
                  "example": "`xxx’ in `Accept` header is not valid. Only `application/json` is allowed."
                }
              },
              "x-details": "The `Accept` header is not `application/json` but it should"
            }
          },
          "x-versions": [
            "1.7",
            "2.x",
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ]
        },
        "patch": {
          "tags": [
            "Attribute"
          ],
          "summary": "Update/create an attribute",
          "description": "This endpoint allows you to update a given attribute. Know more about <a href=\"/documentation/update.html#update-behavior\">Update behavior</a>. Note that if no attribute exists for the given code, it creates it.",
          "operationId": "patch_attributes__code_",
          "parameters": [
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "code",
                    "group",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Attribute code",
                      "x-immutable": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Attribute type. See <a href='/concepts/catalog-structure.html#attribute'>type</a> section for more details.",
                      "enum": [
                        "pim_catalog_identifier",
                        "pim_catalog_metric",
                        "pim_catalog_number",
                        "pim_catalog_reference_data_multi_select",
                        "pim_catalog_reference_data_simple_select",
                        "pim_catalog_simpleselect",
                        "pim_catalog_multiselect",
                        "pim_catalog_date",
                        "pim_catalog_textarea",
                        "pim_catalog_text",
                        "pim_catalog_file",
                        "pim_catalog_image",
                        "pim_catalog_price_collection",
                        "pim_catalog_boolean",
                        "akeneo_reference_entity",
                        "akeneo_reference_entity_collection",
                        "pim_catalog_asset_collection"
                      ],
                      "x-validation-rules": "The type is one of the following values",
                      "x-immutable": true
                    },
                    "labels": {
                      "type": "object",
                      "properties": {
                        "localeCode": {
                          "type": "string",
                          "description": "Attribute label for the locale `localeCode`"
                        }
                      },
                      "description": "Attribute labels for each locale",
                      "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                    },
                    "group": {
                      "type": "string",
                      "description": "Attribute group",
                      "x-validation-rules": "It is the code of an existing group"
                    },
                    "group_labels": {
                      "type": "object",
                      "properties": {
                        "localeCode": {
                          "type": "string",
                          "description": "Group label for the locale `localeCode`"
                        }
                      },
                      "description": "Group labels for each locale",
                      "x-validation-rules": "The `localeCode` is the code of an existing and activated locale",
                      "x-read-only": true
                    },
                    "sort_order": {
                      "type": "integer",
                      "description": "Order of the attribute in its group",
                      "x-validation-rules": "It is a positive integer"
                    },
                    "localizable": {
                      "type": "boolean",
                      "description": "Whether the attribute is localizable, i.e. can have one value by locale",
                      "default": false,
                      "x-immutable": true
                    },
                    "scopable": {
                      "type": "boolean",
                      "description": "Whether the attribute is scopable, i.e. can have one value by channel",
                      "default": false,
                      "x-immutable": true
                    },
                    "available_locales": {
                      "type": "array",
                      "description": "To make the attribute locale specfic, specify here for which locales it is specific",
                      "items": {
                        "type": "string"
                      },
                      "x-validation-rules": "Each string of the array is an existing and activated locale"
                    },
                    "unique": {
                      "type": "boolean",
                      "description": "Whether two values for the attribute cannot be the same",
                      "x-immutable": true
                    },
                    "useable_as_grid_filter": {
                      "type": "boolean",
                      "description": "Whether the attribute can be used as a filter for the product grid in the PIM user interface"
                    },
                    "max_characters": {
                      "type": "integer",
                      "description": "Number maximum of characters allowed for the value of the attribute when the attribute type is `pim_catalog_text`, `pim_catalog_textarea` or `pim_catalog_identifier`",
                      "x-warning": "Only for `pim_catalog_text`, `pim_catalog_textarea` or `pim_catalog_identifier` attribute types"
                    },
                    "validation_rule": {
                      "type": "string",
                      "description": "Validation rule type used to validate any attribute value when the attribute type is `pim_catalog_text` or `pim_catalog_identifier`",
                      "x-validation-rules": "Equal to `regexp` when the attribute type is equal to `pim_catalog_identifier`",
                      "x-warning": "Only for `pim_catalog_text` or `pim_catalog_identifier` attribute types"
                    },
                    "validation_regexp": {
                      "type": "string",
                      "description": "Regexp expression used to validate any attribute value when the attribute type is `pim_catalog_text` or `pim_catalog_identifier`",
                      "x-validation-rules": "Required when the property `validation_rule` is equal to `regexp`",
                      "x-warning": "Only for `pim_catalog_text` or `pim_catalog_identifier` attribute types"
                    },
                    "wysiwyg_enabled": {
                      "type": "boolean",
                      "description": "Whether the WYSIWYG interface is shown when the attribute type is `pim_catalog_textarea`",
                      "x-warning": "Only for `pim_catalog_textarea` attribute type"
                    },
                    "number_min": {
                      "type": "string",
                      "description": "Minimum integer value allowed when the attribute type is `pim_catalog_metric`, `pim_catalog_price` or `pim_catalog_number`",
                      "x-warning": "Only for `pim_catalog_metric`, `pim_catalog_price_collection` or `pim_catalog_number` attribute types"
                    },
                    "number_max": {
                      "type": "string",
                      "description": "Maximum integer value allowed when the attribute type is `pim_catalog_metric`, `pim_catalog_price` or `pim_catalog_number`",
                      "x-warning": "Only for `pim_catalog_metric`, `pim_catalog_price_collection` or `pim_catalog_number` attribute types"
                    },
                    "decimals_allowed": {
                      "type": "boolean",
                      "description": "Whether decimals are allowed when the attribute type is `pim_catalog_metric`, `pim_catalog_price` or `pim_catalog_number`",
                      "x-warning": "Only for `pim_catalog_metric`, `pim_catalog_price_collection` or `pim_catalog_number` attribute types"
                    },
                    "negative_allowed": {
                      "type": "boolean",
                      "description": "Whether negative values are allowed when the attribute type is `pim_catalog_metric` or `pim_catalog_number`",
                      "x-warning": "Only for `pim_catalog_metric` or `pim_catalog_number` attribute types"
                    },
                    "metric_family": {
                      "type": "string",
                      "description": "Metric family when the attribute type is `pim_catalog_metric`",
                      "x-validation-rules": "Required for `pim_catalog_metric` attribute type",
                      "x-immutable": true,
                      "x-warning": "Only for `pim_catalog_metric` attribute type"
                    },
                    "default_metric_unit": {
                      "type": "string",
                      "description": "Default metric unit when the attribute type is `pim_catalog_metric`",
                      "x-validation-rules": "Required for `pim_catalog_metric` attribute type",
                      "x-warning": "Only for `pim_catalog_metric` attribute type"
                    },
                    "date_min": {
                      "type": "string",
                      "description": "Minimum date allowed when the attribute type is `pim_catalog_date`",
                      "format": "date-time",
                      "x-validation-rules": "The datetime format follows the ISO-8601 norm",
                      "x-warning": "Only for `pim_catalog_date` attribute type"
                    },
                    "date_max": {
                      "type": "string",
                      "description": "Maximum date allowed when the attribute type is `pim_catalog_date`",
                      "format": "date-time",
                      "x-validation-rules": "The datetime format follows the ISO-8601 norm",
                      "x-warning": "Only for `pim_catalog_date` attribute type"
                    },
                    "allowed_extensions": {
                      "type": "array",
                      "description": "Extensions allowed when the attribute type is `pim_catalog_file` or `pim_catalog_image`",
                      "items": {
                        "type": "string"
                      },
                      "x-warning": "Only for `pim_catalog_file` or `pim_catalog_image` attribute types"
                    },
                    "max_file_size": {
                      "type": "string",
                      "description": "Max file size in MB when the attribute type is `pim_catalog_file` or `pim_catalog_image`",
                      "x-warning": "Only for `pim_catalog_file` or `pim_catalog_image` attribute types"
                    },
                    "reference_data_name": {
                      "type": "string",
                      "description": "Reference entity code when the attribute type is `akeneo_reference_entity` or `akeneo_reference_entity_collection` OR Asset family code when the attribute type is `pim_catalog_asset_collection`",
                      "x-validation-rules": "Required only for `akeneo_reference_entity` or `akeneo_reference_entity_collection` or `pim_catalog_asset_collection` attribute types",
                      "x-warning": "Only for `akeneo_reference_entity` or `akeneo_reference_entity_collection` or `pim_catalog_asset_collection` attribute types"
                    },
                    "default_value": {
                      "type": "boolean",
                      "description": "Default value for a Yes/No attribute, applied when creating a new product or product model (only available since the 5.0)",
                      "x-warning": "Only for `pim_catalog_boolean` attribute type",
                      "x-from-version": "5.0"
                    },
                    "table_configuration": {
                      "type": "array",
                      "description": "Configuration of the Table attribute (columns)",
                      "items": {
                        "required": [
                          "code",
                          "data_type"
                        ],
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string",
                            "description": "Column code"
                          },
                          "data_type": {
                            "type": "string",
                            "description": "Column data type",
                            "enum": [
                              "select",
                              "text",
                              "number",
                              "boolean"
                            ]
                          },
                          "validations": {
                            "type": "object",
                            "properties": {
                              "min": {
                                "type": "number",
                                "description": "minimum value of a numeric cell",
                                "x-validation-rules": "only for `number` data type columns"
                              },
                              "max": {
                                "type": "number",
                                "description": "maximum value of a numeric cell",
                                "x-validation-rules": "only for `number` data type columns"
                              },
                              "decimals_allowed": {
                                "type": "boolean",
                                "description": "whether the value of a numeric cell can hold a decimal part",
                                "x-validation-rules": "only for `number` data type columns"
                              },
                              "max_length": {
                                "type": "number",
                                "description": "maximum length of a text cell",
                                "x-validation-rules": "only for `text` data type columns"
                              }
                            },
                            "description": "User defined validation constraints on the cell content"
                          },
                          "labels": {
                            "type": "object",
                            "properties": {
                              "localeCode": {
                                "type": "string",
                                "description": "Column label for the locale `localeCode`"
                              }
                            },
                            "description": "Column labels for each locale",
                            "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                          },
                          "is_required_for_completeness": {
                            "type": "boolean",
                            "description": "Defines if the column should be entirely filled for the attribute to be considered complete",
                            "default": false,
                            "x-warning": "This value is always true for the first column in a table configuration"
                          }
                        }
                      },
                      "x-validation-rules": "Required only for `pim_catalog_table` attribute type",
                      "x-warning": "Only for `pim_catalog_table` attribute type"
                    }
                  },
                  "example": {
                    "code": "release_date",
                    "type": "pim_catalog_date",
                    "group": "marketing",
                    "group_labels": {
                      "en_US": "Marketing",
                      "fr_FR": "Marketing"
                    },
                    "unique": false,
                    "useable_as_grid_filter": true,
                    "allowed_extensions": [],
                    "available_locales": [],
                    "date_min": "2017-06-28T08:00:00",
                    "date_max": "2017-08-08T22:00:00",
                    "sort_order": 1,
                    "localizable": false,
                    "scopable": false,
                    "labels": {
                      "en_US": "Sale date",
                      "fr_FR": "Date des soldes"
                    }
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "Created",
              "headers": {
                "Location": {
                  "description": "URI of the created resource",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {},
              "x-details": "Means that the creation was successful"
            },
            "204": {
              "description": "No content to return",
              "headers": {
                "Location": {
                  "description": "URI of the updated resource",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {},
              "x-details": "Means that the update was successful"
            },
            "400": {
              "description": "Bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 400
                },
                "message": {
                  "example": "Invalid JSON message received"
                }
              },
              "x-details": "Can be caused by a malformed JSON request"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "415": {
              "description": "Unsupported Media type",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 415
                },
                "message": {
                  "example": "`xxx’ in `Content-Type’ header is not valid.  Only `application/json’ is allowed."
                }
              },
              "x-details": "The `Content-Type` header has to be `application/json`"
            },
            "422": {
              "description": "Unprocessable entity",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 422
                },
                "message": {
                  "example": "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
                },
                "_links": {
                  "example": {
                    "documentation": {
                      "href": "http://api.akeneo.com/api-reference.html"
                    }
                  }
                }
              },
              "x-details": "The validation of the entity given in the body of the request failed"
            }
          },
          "x-versions": [
            "1.7",
            "2.x",
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-codegen-request-body-name": "body"
        }
      },
      "/api/rest/v1/attributes/{attribute_code}/options": {
        "get": {
          "tags": [
            "Attribute option"
          ],
          "summary": "Get list of attribute options",
          "description": "This endpoint allows you to get a list of attribute options. Attribute options are paginated and sorted by code.",
          "operationId": "get_attributes__attribute_code__options",
          "parameters": [
            {
              "name": "attribute_code",
              "in": "path",
              "description": "Code of the attribute",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page",
              "in": "query",
              "description": "Number of the page to retrieve when using the `page` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html#pagination\">Pagination</a> section",
              "schema": {
                "type": "integer",
                "default": 1
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
              "schema": {
                "maximum": 100,
                "minimum": 1,
                "type": "integer",
                "default": 10
              }
            },
            {
              "name": "with_count",
              "in": "query",
              "description": "Return the count of items in the response. Be carefull with that, on a big catalog, it can decrease performance in a significative way",
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Return attribute options paginated",
              "content": {
                "application/json": {
                  "schema": {
                    "title": "Attribute Options",
                    "type": "object",
                    "properties": {
                      "_embedded": {
                        "type": "object",
                        "properties": {
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "_links": {
                                      "type": "object",
                                      "properties": {
                                        "self": {
                                          "type": "object",
                                          "properties": {
                                            "href": {
                                              "type": "string",
                                              "description": "URI of the resource"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "required": [
                                    "code"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "string",
                                      "description": "Code of option"
                                    },
                                    "attribute": {
                                      "type": "string",
                                      "description": "Code of attribute related to the attribute option",
                                      "x-validation-rules": "It is the same attribute code as the one given as path parameter"
                                    },
                                    "sort_order": {
                                      "type": "integer",
                                      "description": "Order of attribute option",
                                      "x-validation-rules": "It is a positive integer"
                                    },
                                    "labels": {
                                      "type": "object",
                                      "properties": {
                                        "localeCode": {
                                          "type": "string",
                                          "description": "Attribute option label for the locale `localeCode`"
                                        }
                                      },
                                      "description": "Attribute option labels for each locale",
                                      "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                                    }
                                  },
                                  "example": {
                                    "code": "black",
                                    "attribute": "a_simple_select",
                                    "sort_order": 2,
                                    "labels": {
                                      "en_US": "Black",
                                      "fr_FR": "Noir"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      },
                      "_links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the current page of resources"
                              }
                            }
                          },
                          "first": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the first page of resources"
                              }
                            }
                          },
                          "previous": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the previous page of resources"
                              }
                            }
                          },
                          "next": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the next page of resources"
                              }
                            }
                          }
                        }
                      },
                      "current_page": {
                        "type": "integer",
                        "description": "Current page number"
                      }
                    }
                  }
                },
                "_links": {
                  "example": {
                    "self": {
                      "href": "https://demo.akeneo.com/api/rest/v1/attributes/color/options?page=3&limit=3"
                    },
                    "first": {
                      "href": "https://demo.akeneo.com/api/rest/v1/attributes/color/options?page=1&limit=3"
                    },
                    "previous": {
                      "href": "https://demo.akeneo.com/api/rest/v1/attributes/color/options?page=2&limit=3"
                    },
                    "next": {
                      "href": "https://demo.akeneo.com/api/rest/v1/attributes/color/options?page=4&limit=3"
                    }
                  }
                },
                "current_page": {
                  "example": 3
                },
                "_embedded": {
                  "example": {
                    "items": [
                      {
                        "_links": {
                          "self": {
                            "href": "https://demo.akeneo.com/api/rest/v1/attributes/color/options/red"
                          }
                        },
                        "code": "red",
                        "attribute": "a_simple_select",
                        "sort_order": 1,
                        "labels": {
                          "en_US": "Red",
                          "fr_FR": "Rouge"
                        }
                      },
                      {
                        "_links": {
                          "self": {
                            "href": "https://demo.akeneo.com/api/rest/v1/attributes/color/options/black"
                          }
                        },
                        "code": "black",
                        "attribute": "a_simple_select",
                        "sort_order": 2,
                        "labels": {
                          "en_US": "Black",
                          "fr_FR": "Noir"
                        }
                      },
                      {
                        "_links": {
                          "self": {
                            "href": "https://demo.akeneo.com/api/rest/v1/attributes/color/options/purple"
                          }
                        },
                        "code": "purple",
                        "attribute": "a_simple_select",
                        "sort_order": 3,
                        "labels": {
                          "en_US": "Purple",
                          "fr_FR": "Violet"
                        }
                      }
                    ]
                  }
                }
              }
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "406": {
              "description": "Not Acceptable",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 406
                },
                "message": {
                  "example": "`xxx’ in `Accept` header is not valid. Only `application/json` is allowed."
                }
              },
              "x-details": "The `Accept` header is not `application/json` but it should"
            }
          },
          "x-versions": [
            "1.7",
            "2.x",
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ]
        },
        "post": {
          "tags": [
            "Attribute option"
          ],
          "summary": "Create a new attribute option",
          "description": "This endpoint allows you to create a new attribute option.",
          "operationId": "post_attributes__attribute_code__options",
          "parameters": [
            {
              "name": "attribute_code",
              "in": "path",
              "description": "Code of the attribute",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "code"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Code of option"
                    },
                    "attribute": {
                      "type": "string",
                      "description": "Code of attribute related to the attribute option",
                      "x-validation-rules": "It is the same attribute code as the one given as path parameter"
                    },
                    "sort_order": {
                      "type": "integer",
                      "description": "Order of attribute option",
                      "x-validation-rules": "It is a positive integer"
                    },
                    "labels": {
                      "type": "object",
                      "properties": {
                        "localeCode": {
                          "type": "string",
                          "description": "Attribute option label for the locale `localeCode`"
                        }
                      },
                      "description": "Attribute option labels for each locale",
                      "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                    }
                  },
                  "example": {
                    "code": "black",
                    "attribute": "a_simple_select",
                    "sort_order": 2,
                    "labels": {
                      "en_US": "Black",
                      "fr_FR": "Noir"
                    }
                  }
                }
              }
            },
            "required": false
          },
          "responses": {
            "201": {
              "description": "Created",
              "headers": {
                "Location": {
                  "description": "URI of the created resource",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {},
              "x-details": "Means that the creation was successful"
            },
            "400": {
              "description": "Bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 400
                },
                "message": {
                  "example": "Invalid JSON message received"
                }
              },
              "x-details": "Can be caused by a malformed JSON request"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "415": {
              "description": "Unsupported Media type",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 415
                },
                "message": {
                  "example": "`xxx’ in `Content-Type’ header is not valid.  Only `application/json’ is allowed."
                }
              },
              "x-details": "The `Content-Type` header has to be `application/json`"
            },
            "422": {
              "description": "Unprocessable entity",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 422
                },
                "message": {
                  "example": "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
                },
                "_links": {
                  "example": {
                    "documentation": {
                      "href": "http://api.akeneo.com/api-reference.html"
                    }
                  }
                }
              },
              "x-details": "The validation of the entity given in the body of the request failed"
            }
          },
          "x-versions": [
            "1.7",
            "2.x",
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-codegen-request-body-name": "body"
        },
        "patch": {
          "tags": [
            "Attribute option"
          ],
          "summary": "Update/create several attribute options",
          "description": "This endpoint allows you to update several attribute options at once.",
          "operationId": "patch_attributes__attribute_code__options",
          "parameters": [
            {
              "name": "attribute_code",
              "in": "path",
              "description": "Code of the attribute",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "code"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Code of option"
                    },
                    "attribute": {
                      "type": "string",
                      "description": "Code of attribute related to the attribute option",
                      "x-validation-rules": "It is the same attribute code as the one given as path parameter"
                    },
                    "sort_order": {
                      "type": "integer",
                      "description": "Order of attribute option",
                      "x-validation-rules": "It is a positive integer"
                    },
                    "labels": {
                      "type": "object",
                      "properties": {
                        "localeCode": {
                          "type": "string",
                          "description": "Attribute option label for the locale `localeCode`"
                        }
                      },
                      "description": "Attribute option labels for each locale",
                      "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                    }
                  },
                  "example": {
                    "code": "black",
                    "attribute": "a_simple_select",
                    "sort_order": 2,
                    "labels": {
                      "en_US": "Black",
                      "fr_FR": "Noir"
                    }
                  },
                  "x-examples": {
                    "x-example-1": "{\"code\":\"black\", \"attribute\":\"a_simple_select\", \"labels\":{\"en_US\": \"Black\",\"fr_FR\": \"Noir\"}}",
                    "x-example-2": "{\"code\":\"red\", \"label\":{\"en_US\": \"Red\",\"fr_FR\": \"Rouge\"}}",
                    "x-example-3": "{\"code\":\"yellow\", \"labels\":{\"en_US\": \"Yellow\",\"fr_FR\": \"Jaune\"}}"
                  }
                }
              }
            },
            "required": false
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "line": {
                        "type": "integer",
                        "description": "Line number"
                      },
                      "identifier": {
                        "type": "string",
                        "description": "Resource identifier, only filled when the resource is a product"
                      },
                      "code": {
                        "type": "string",
                        "description": "Resource code, only filled when the resource is not a product"
                      },
                      "status_code": {
                        "type": "integer",
                        "description": "HTTP status code, see <a href=\"/documentation/responses.html#client-errors\">Client errors</a> to understand the meaning of each code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "x-example-1": {
                  "example": "{\"line\":1,\"code\":\"black\",\"status_code\":201}"
                },
                "x-example-2": {
                  "example": "{\"line\":2,\"code\":\"red\",\"status_code\":422,\"message\":\"Property \"label\" does not exist. Check the API format documentation.\"}"
                },
                "x-example-3": {
                  "example": "{\"line\":3,\"code\":\"yellow\",\"status_code\":204}"
                }
              },
              "x-details": "Returns a plain text response whose lines are JSON containing the status of each update or creation",
              "x-no-entity": true
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "413": {
              "description": "Request Entity Too Large",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 413
                },
                "message": {
                  "example": "Too many resources to process, 100 is the maximum allowed."
                }
              },
              "x-details": "There are too many resources to process (max 100) or the line of JSON is too long (max 1 000 000 characters)"
            },
            "415": {
              "description": "Unsupported Media type",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 415
                },
                "message": {
                  "example": "`xxx’ in `Content-Type’ header is not valid.  Only `application/vnd.akeneo.collection+json’ is allowed."
                }
              },
              "x-details": "The `Content-Type` header has to be `application/vnd.akeneo.collection+json`"
            }
          },
          "x-versions": [
            "2.1",
            "2.2",
            "2.3",
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-body-by-line": "Contains several lines, each line is an attribute option in JSON standard format",
          "x-codegen-request-body-name": "body"
        }
      },
      "/api/rest/v1/attributes/{attribute_code}/options/{code}": {
        "get": {
          "tags": [
            "Attribute option"
          ],
          "summary": "Get an attribute option",
          "description": "This endpoint allows you to get the information about a given attribute option.",
          "operationId": "get_attributes__attribute_code__options__code_",
          "parameters": [
            {
              "name": "attribute_code",
              "in": "path",
              "description": "Code of the attribute",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "required": [
                      "code"
                    ],
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Code of option"
                      },
                      "attribute": {
                        "type": "string",
                        "description": "Code of attribute related to the attribute option",
                        "x-validation-rules": "It is the same attribute code as the one given as path parameter"
                      },
                      "sort_order": {
                        "type": "integer",
                        "description": "Order of attribute option",
                        "x-validation-rules": "It is a positive integer"
                      },
                      "labels": {
                        "type": "object",
                        "properties": {
                          "localeCode": {
                            "type": "string",
                            "description": "Attribute option label for the locale `localeCode`"
                          }
                        },
                        "description": "Attribute option labels for each locale",
                        "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                      }
                    },
                    "example": {
                      "code": "black",
                      "attribute": "a_simple_select",
                      "sort_order": 2,
                      "labels": {
                        "en_US": "Black",
                        "fr_FR": "Noir"
                      }
                    }
                  }
                }
              },
              "x-details": "Returns the content of the attribute option in JSON standard format"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "404": {
              "description": "Resource not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 404
                },
                "message": {
                  "example": "Resource `my_resource_code` does not exist."
                }
              },
              "x-details": "The resource code given in the URI does not correspond to any existing PIM resource"
            },
            "406": {
              "description": "Not Acceptable",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 406
                },
                "message": {
                  "example": "`xxx’ in `Accept` header is not valid. Only `application/json` is allowed."
                }
              },
              "x-details": "The `Accept` header is not `application/json` but it should"
            }
          },
          "x-versions": [
            "1.7",
            "2.x",
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ]
        },
        "patch": {
          "tags": [
            "Attribute option"
          ],
          "summary": "Update/create an attribute option",
          "description": "This endpoint allows you to update a given attribute option. Know more about <a href=\"/documentation/update.html#update-behavior\">Update behavior</a>. Note that if no attribute option exists for the given code, it creates it.",
          "operationId": "patch_attributes__attribute_code__options__code_",
          "parameters": [
            {
              "name": "attribute_code",
              "in": "path",
              "description": "Code of the attribute",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "code"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Code of option"
                    },
                    "attribute": {
                      "type": "string",
                      "description": "Code of attribute related to the attribute option",
                      "x-validation-rules": "It is the same attribute code as the one given as path parameter"
                    },
                    "sort_order": {
                      "type": "integer",
                      "description": "Order of attribute option",
                      "x-validation-rules": "It is a positive integer"
                    },
                    "labels": {
                      "type": "object",
                      "properties": {
                        "localeCode": {
                          "type": "string",
                          "description": "Attribute option label for the locale `localeCode`"
                        }
                      },
                      "description": "Attribute option labels for each locale",
                      "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                    }
                  },
                  "example": {
                    "code": "black",
                    "attribute": "a_simple_select",
                    "sort_order": 2,
                    "labels": {
                      "en_US": "Black",
                      "fr_FR": "Noir"
                    }
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "Created",
              "headers": {
                "Location": {
                  "description": "URI of the created resource",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {},
              "x-details": "Means that the creation was successful"
            },
            "204": {
              "description": "No content to return",
              "headers": {
                "Location": {
                  "description": "URI of the updated resource",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {},
              "x-details": "Means that the update was successful"
            },
            "400": {
              "description": "Bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 400
                },
                "message": {
                  "example": "Invalid JSON message received"
                }
              },
              "x-details": "Can be caused by a malformed JSON request"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "415": {
              "description": "Unsupported Media type",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 415
                },
                "message": {
                  "example": "`xxx’ in `Content-Type’ header is not valid.  Only `application/json’ is allowed."
                }
              },
              "x-details": "The `Content-Type` header has to be `application/json`"
            },
            "422": {
              "description": "Unprocessable entity",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 422
                },
                "message": {
                  "example": "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
                },
                "_links": {
                  "example": {
                    "documentation": {
                      "href": "http://api.akeneo.com/api-reference.html"
                    }
                  }
                }
              },
              "x-details": "The validation of the entity given in the body of the request failed"
            }
          },
          "x-versions": [
            "1.7",
            "2.x",
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-codegen-request-body-name": "body"
        }
      },
      "/api/rest/v1/attribute-groups": {
        "get": {
          "tags": [
            "Attribute group"
          ],
          "summary": "Get list of attribute groups",
          "description": "This endpoint allows you to get a list of attribute groups. Attribute groups are paginated and sorted by code.",
          "operationId": "attribute_groups_get_list",
          "parameters": [
            {
              "name": "search",
              "in": "query",
              "description": "Filter attribute groups, for more details see the <a href=\"/documentation/filter.html#filter-attribute-groups\">Filters</a> section.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page",
              "in": "query",
              "description": "Number of the page to retrieve when using the `page` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html#pagination\">Pagination</a> section",
              "schema": {
                "type": "integer",
                "default": 1
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
              "schema": {
                "maximum": 100,
                "minimum": 1,
                "type": "integer",
                "default": 10
              }
            },
            {
              "name": "with_count",
              "in": "query",
              "description": "Return the count of items in the response. Be carefull with that, on a big catalog, it can decrease performance in a significative way",
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Return attribute groups paginated",
              "content": {
                "application/json": {
                  "schema": {
                    "title": "Attribute groups",
                    "type": "object",
                    "properties": {
                      "_embedded": {
                        "type": "object",
                        "properties": {
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "_links": {
                                      "type": "object",
                                      "properties": {
                                        "self": {
                                          "type": "object",
                                          "properties": {
                                            "href": {
                                              "type": "string",
                                              "description": "URI of the resource"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "required": [
                                    "code"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "string",
                                      "description": "Attribute group code",
                                      "x-immutable": true
                                    },
                                    "sort_order": {
                                      "type": "integer",
                                      "description": "Attribute group order among other attribute groups",
                                      "x-validation-rules": "It is a positive integer"
                                    },
                                    "attributes": {
                                      "type": "array",
                                      "description": "Attribute codes that compose the attribute group",
                                      "items": {
                                        "type": "string"
                                      },
                                      "x-validation-rules": "Each string of the array is an existing attribute code, an attribute can only be in one attribute group"
                                    },
                                    "labels": {
                                      "type": "object",
                                      "properties": {
                                        "localeCode": {
                                          "type": "string",
                                          "description": "Attribute group label for the locale `localeCode`"
                                        }
                                      },
                                      "description": "Attribute group labels for each locale",
                                      "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                                    }
                                  },
                                  "example": {
                                    "code": "marketing",
                                    "sort_order": 4,
                                    "attributes": [
                                      "sku",
                                      "name",
                                      "description",
                                      "response_time",
                                      "release_date",
                                      "price"
                                    ],
                                    "labels": {
                                      "en_US": "Marketing",
                                      "fr_FR": "Marketing"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      },
                      "_links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the current page of resources"
                              }
                            }
                          },
                          "first": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the first page of resources"
                              }
                            }
                          },
                          "previous": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the previous page of resources"
                              }
                            }
                          },
                          "next": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the next page of resources"
                              }
                            }
                          }
                        }
                      },
                      "current_page": {
                        "type": "integer",
                        "description": "Current page number"
                      }
                    }
                  }
                },
                "_links": {
                  "example": {
                    "self": {
                      "href": "https://demo.akeneo.com/api/rest/v1/attribute-groups?page=3&limit=2"
                    },
                    "first": {
                      "href": "https://demo.akeneo.com/api/rest/v1/attribute-groups?page=1&limit=2"
                    },
                    "previous": {
                      "href": "https://demo.akeneo.com/api/rest/v1/attribute-groups?page=2&limit=2"
                    },
                    "next": {
                      "href": "https://demo.akeneo.com/api/rest/v1/attribute-groups?page=4&limit=2"
                    }
                  }
                },
                "current_page": {
                  "example": 3
                },
                "_embedded": {
                  "example": {
                    "items": [
                      {
                        "_links": {
                          "self": {
                            "href": "https://demo.akeneo.com/api/rest/v1/attribute-groups/marketing"
                          }
                        },
                        "code": "marketing",
                        "sort_order": 4,
                        "attributes": [
                          "sku",
                          "name",
                          "description",
                          "response_time",
                          "release_date",
                          "price"
                        ],
                        "labels": {
                          "en_US": "Marketing",
                          "fr_FR": "Marketing"
                        }
                      },
                      {
                        "_links": {
                          "self": {
                            "href": "https://demo.akeneo.com/api/rest/v1/attribute-groups/technical"
                          }
                        },
                        "code": "technical",
                        "sort_order": 5,
                        "attributes": [
                          "weight",
                          "maximum_scan_size",
                          "color_scanning",
                          "power_requirements",
                          "maximum_print_size",
                          "sensor_type",
                          "total_megapixels",
                          "optical_zoom",
                          "camera_type"
                        ],
                        "labels": {
                          "en_US": "Technical",
                          "fr_FR": "Technique"
                        }
                      }
                    ]
                  }
                }
              }
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "406": {
              "description": "Not Acceptable",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 406
                },
                "message": {
                  "example": "`xxx’ in `Accept` header is not valid. Only `application/json` is allowed."
                }
              },
              "x-details": "The `Accept` header is not `application/json` but it should"
            }
          },
          "x-versions": [
            "2.x",
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ]
        },
        "post": {
          "tags": [
            "Attribute group"
          ],
          "summary": "Create a new attribute group",
          "description": "This endpoint allows you to create a new attribute group.",
          "operationId": "attribute_groups_post",
          "requestBody": {
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "code"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Attribute group code",
                      "x-immutable": true
                    },
                    "sort_order": {
                      "type": "integer",
                      "description": "Attribute group order among other attribute groups",
                      "x-validation-rules": "It is a positive integer"
                    },
                    "attributes": {
                      "type": "array",
                      "description": "Attribute codes that compose the attribute group",
                      "items": {
                        "type": "string"
                      },
                      "x-validation-rules": "Each string of the array is an existing attribute code, an attribute can only be in one attribute group"
                    },
                    "labels": {
                      "type": "object",
                      "properties": {
                        "localeCode": {
                          "type": "string",
                          "description": "Attribute group label for the locale `localeCode`"
                        }
                      },
                      "description": "Attribute group labels for each locale",
                      "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                    }
                  },
                  "example": {
                    "code": "marketing",
                    "sort_order": 4,
                    "attributes": [
                      "sku",
                      "name",
                      "description",
                      "response_time",
                      "release_date",
                      "price"
                    ],
                    "labels": {
                      "en_US": "Marketing",
                      "fr_FR": "Marketing"
                    }
                  }
                }
              }
            },
            "required": false
          },
          "responses": {
            "201": {
              "description": "Created",
              "headers": {
                "Location": {
                  "description": "URI of the created resource",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {},
              "x-details": "Means that the creation was successful"
            },
            "400": {
              "description": "Bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 400
                },
                "message": {
                  "example": "Invalid JSON message received"
                }
              },
              "x-details": "Can be caused by a malformed JSON request"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "415": {
              "description": "Unsupported Media type",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 415
                },
                "message": {
                  "example": "`xxx’ in `Content-Type’ header is not valid.  Only `application/json’ is allowed."
                }
              },
              "x-details": "The `Content-Type` header has to be `application/json`"
            },
            "422": {
              "description": "Unprocessable entity",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 422
                },
                "message": {
                  "example": "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
                },
                "_links": {
                  "example": {
                    "documentation": {
                      "href": "http://api.akeneo.com/api-reference.html"
                    }
                  }
                }
              },
              "x-details": "The validation of the entity given in the body of the request failed"
            }
          },
          "x-versions": [
            "2.x",
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-codegen-request-body-name": "body"
        },
        "patch": {
          "tags": [
            "Attribute group"
          ],
          "summary": "Update/create several attribute groups",
          "description": "This endpoint allows you to update and/or create several attribute groups at once.",
          "operationId": "several_attribute_groups_patch",
          "requestBody": {
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "code"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Attribute group code",
                      "x-immutable": true
                    },
                    "sort_order": {
                      "type": "integer",
                      "description": "Attribute group order among other attribute groups",
                      "x-validation-rules": "It is a positive integer"
                    },
                    "attributes": {
                      "type": "array",
                      "description": "Attribute codes that compose the attribute group",
                      "items": {
                        "type": "string"
                      },
                      "x-validation-rules": "Each string of the array is an existing attribute code, an attribute can only be in one attribute group"
                    },
                    "labels": {
                      "type": "object",
                      "properties": {
                        "localeCode": {
                          "type": "string",
                          "description": "Attribute group label for the locale `localeCode`"
                        }
                      },
                      "description": "Attribute group labels for each locale",
                      "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                    }
                  },
                  "example": {
                    "code": "marketing",
                    "sort_order": 4,
                    "attributes": [
                      "sku",
                      "name",
                      "description",
                      "response_time",
                      "release_date",
                      "price"
                    ],
                    "labels": {
                      "en_US": "Marketing",
                      "fr_FR": "Marketing"
                    }
                  },
                  "x-examples": {
                    "x-example-1": "{\"code\":\"technical\",\"labels\":{\"en_US\": \"Technical\", \"fr_FR\": \"Technique\"}}",
                    "x-example-2": "{\"code\":\"marketing\",\"type\":\"bar\"}",
                    "x-example-3": "{\"code\":\"design\",\"sort_order\":7}"
                  }
                }
              }
            },
            "required": false
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "line": {
                        "type": "integer",
                        "description": "Line number"
                      },
                      "identifier": {
                        "type": "string",
                        "description": "Resource identifier, only filled when the resource is a product"
                      },
                      "code": {
                        "type": "string",
                        "description": "Resource code, only filled when the resource is not a product"
                      },
                      "status_code": {
                        "type": "integer",
                        "description": "HTTP status code, see <a href=\"/documentation/responses.html#client-errors\">Client errors</a> to understand the meaning of each code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "x-example-1": {
                  "example": "{\"line\":1,\"code\":\"technical\",\"status_code\":201}"
                },
                "x-example-2": {
                  "example": "{\"line\":2,\"code\":\"marketing\",\"status_code\":422,\"message\":\"Property \\\"type\\\" does not exist. Check the standard format documentation.\",\"_links\":{\"documentation\":{\"href\":\"http:\\/\\/api.akeneo.com\\/api-reference.html#patch_attribute_groups__code_\"}"
                },
                "x-example-3": {
                  "example": "{\"line\":3,\"code\":\"design\",\"status_code\":204}"
                }
              },
              "x-details": "Returns a plain text response whose lines are JSON containing the status of each update or creation"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "413": {
              "description": "Request Entity Too Large",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 413
                },
                "message": {
                  "example": "Too many resources to process, 100 is the maximum allowed."
                }
              },
              "x-details": "There are too many resources to process (max 100) or the line of JSON is too long (max 1 000 000 characters)"
            },
            "415": {
              "description": "Unsupported Media type",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 415
                },
                "message": {
                  "example": "`xxx’ in `Content-Type’ header is not valid.  Only `application/vnd.akeneo.collection+json’ is allowed."
                }
              },
              "x-details": "The `Content-Type` header has to be `application/vnd.akeneo.collection+json`"
            }
          },
          "x-versions": [
            "2.x",
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-body-by-line": "Contains several lines, each line is an attribute group in JSON standard format",
          "x-codegen-request-body-name": "body"
        }
      },
      "/api/rest/v1/attribute-groups/{code}": {
        "get": {
          "tags": [
            "Attribute group"
          ],
          "summary": "Get an attribute group",
          "description": "This endpoint allows you to get the information about a given attribute group.",
          "operationId": "attribute_groups_get",
          "parameters": [
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "required": [
                      "code"
                    ],
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Attribute group code",
                        "x-immutable": true
                      },
                      "sort_order": {
                        "type": "integer",
                        "description": "Attribute group order among other attribute groups",
                        "x-validation-rules": "It is a positive integer"
                      },
                      "attributes": {
                        "type": "array",
                        "description": "Attribute codes that compose the attribute group",
                        "items": {
                          "type": "string"
                        },
                        "x-validation-rules": "Each string of the array is an existing attribute code, an attribute can only be in one attribute group"
                      },
                      "labels": {
                        "type": "object",
                        "properties": {
                          "localeCode": {
                            "type": "string",
                            "description": "Attribute group label for the locale `localeCode`"
                          }
                        },
                        "description": "Attribute group labels for each locale",
                        "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                      }
                    },
                    "example": {
                      "code": "marketing",
                      "sort_order": 4,
                      "attributes": [
                        "sku",
                        "name",
                        "description",
                        "response_time",
                        "release_date",
                        "price"
                      ],
                      "labels": {
                        "en_US": "Marketing",
                        "fr_FR": "Marketing"
                      }
                    }
                  }
                }
              },
              "x-details": "Returns the content of the attribute group in JSON standard format"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "404": {
              "description": "Resource not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 404
                },
                "message": {
                  "example": "Resource `my_resource_code` does not exist."
                }
              },
              "x-details": "The resource code given in the URI does not correspond to any existing PIM resource"
            },
            "406": {
              "description": "Not Acceptable",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 406
                },
                "message": {
                  "example": "`xxx’ in `Accept` header is not valid. Only `application/json` is allowed."
                }
              },
              "x-details": "The `Accept` header is not `application/json` but it should"
            }
          },
          "x-versions": [
            "2.x",
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ]
        },
        "patch": {
          "tags": [
            "Attribute group"
          ],
          "summary": "Update/create an attribute group",
          "description": "This endpoint allows you to update a given attribute group. Know more about <a href=\"/documentation/update.html#update-behavior\">Update behavior</a>. Note that if no attribute group exists for the given code, it creates it.",
          "operationId": "attribute_groups_patch",
          "parameters": [
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "code"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Attribute group code",
                      "x-immutable": true
                    },
                    "sort_order": {
                      "type": "integer",
                      "description": "Attribute group order among other attribute groups",
                      "x-validation-rules": "It is a positive integer"
                    },
                    "attributes": {
                      "type": "array",
                      "description": "Attribute codes that compose the attribute group",
                      "items": {
                        "type": "string"
                      },
                      "x-validation-rules": "Each string of the array is an existing attribute code, an attribute can only be in one attribute group"
                    },
                    "labels": {
                      "type": "object",
                      "properties": {
                        "localeCode": {
                          "type": "string",
                          "description": "Attribute group label for the locale `localeCode`"
                        }
                      },
                      "description": "Attribute group labels for each locale",
                      "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                    }
                  },
                  "example": {
                    "code": "marketing",
                    "sort_order": 4,
                    "attributes": [
                      "sku",
                      "name",
                      "description",
                      "response_time",
                      "release_date",
                      "price"
                    ],
                    "labels": {
                      "en_US": "Marketing",
                      "fr_FR": "Marketing"
                    }
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "Created",
              "headers": {
                "Location": {
                  "description": "URI of the created resource",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {},
              "x-details": "Means that the creation was successful"
            },
            "204": {
              "description": "No content to return",
              "headers": {
                "Location": {
                  "description": "URI of the updated resource",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {},
              "x-details": "Means that the update was successful"
            },
            "400": {
              "description": "Bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 400
                },
                "message": {
                  "example": "Invalid JSON message received"
                }
              },
              "x-details": "Can be caused by a malformed JSON request"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "415": {
              "description": "Unsupported Media type",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 415
                },
                "message": {
                  "example": "`xxx’ in `Content-Type’ header is not valid.  Only `application/json’ is allowed."
                }
              },
              "x-details": "The `Content-Type` header has to be `application/json`"
            },
            "422": {
              "description": "Unprocessable entity",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 422
                },
                "message": {
                  "example": "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
                },
                "_links": {
                  "example": {
                    "documentation": {
                      "href": "http://api.akeneo.com/api-reference.html"
                    }
                  }
                }
              },
              "x-details": "The validation of the entity given in the body of the request failed"
            }
          },
          "x-versions": [
            "2.x",
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-codegen-request-body-name": "body"
        }
      },
      "/api/rest/v1/association-types": {
        "get": {
          "tags": [
            "Association type"
          ],
          "summary": "Get a list of association types",
          "description": "This endpoint allows you to get a list of association types. Association types are paginated and sorted by code.",
          "operationId": "association_types_get_list",
          "parameters": [
            {
              "name": "page",
              "in": "query",
              "description": "Number of the page to retrieve when using the `page` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html#pagination\">Pagination</a> section",
              "schema": {
                "type": "integer",
                "default": 1
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
              "schema": {
                "maximum": 100,
                "minimum": 1,
                "type": "integer",
                "default": 10
              }
            },
            {
              "name": "with_count",
              "in": "query",
              "description": "Return the count of items in the response. Be carefull with that, on a big catalog, it can decrease performance in a significative way",
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Return association types paginated",
              "content": {
                "application/json": {
                  "schema": {
                    "title": "Association types",
                    "type": "object",
                    "properties": {
                      "_embedded": {
                        "type": "object",
                        "properties": {
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "_links": {
                                      "type": "object",
                                      "properties": {
                                        "self": {
                                          "type": "object",
                                          "properties": {
                                            "href": {
                                              "type": "string",
                                              "description": "URI of the resource"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "required": [
                                    "code"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "string",
                                      "description": "Association type code",
                                      "x-immutable": true
                                    },
                                    "labels": {
                                      "type": "object",
                                      "properties": {
                                        "localeCode": {
                                          "type": "string",
                                          "description": "Association type label for the locale `localeCode`"
                                        }
                                      },
                                      "description": "Association type labels for each locale",
                                      "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                                    },
                                    "is_quantified": {
                                      "type": "boolean",
                                      "description": "When true, the association is a quantified association (Only available in the PIM Serenity version.)",
                                      "default": false,
                                      "x-immutable": true
                                    },
                                    "is_two_way": {
                                      "type": "boolean",
                                      "description": "When true, the association is a two-way association (Only available in the PIM Serenity version.)",
                                      "default": false,
                                      "x-immutable": true
                                    }
                                  },
                                  "example": {
                                    "code": "upsell",
                                    "labels": {
                                      "en_US": "Upsell",
                                      "fr_FR": "Vente incitative"
                                    },
                                    "is_quantified": false,
                                    "is_two_way": false
                                  }
                                }
                              ]
                            }
                          }
                        }
                      },
                      "_links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the current page of resources"
                              }
                            }
                          },
                          "first": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the first page of resources"
                              }
                            }
                          },
                          "previous": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the previous page of resources"
                              }
                            }
                          },
                          "next": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the next page of resources"
                              }
                            }
                          }
                        }
                      },
                      "current_page": {
                        "type": "integer",
                        "description": "Current page number"
                      }
                    }
                  }
                },
                "_links": {
                  "example": {
                    "self": {
                      "href": "https://demo.akeneo.com/api/rest/v1/association-types?page=1&limit=3"
                    },
                    "first": {
                      "href": "https://demo.akeneo.com/api/rest/v1/association-types?page=1&limit=3"
                    }
                  }
                },
                "current_page": {
                  "example": 1
                },
                "_embedded": {
                  "example": {
                    "items": [
                      {
                        "_links": {
                          "self": {
                            "href": "https://demo.akeneo.com/api/rest/v1/association-types/X_SELL"
                          }
                        },
                        "code": "X_SELL",
                        "labels": {
                          "en_US": "Cross sell",
                          "fr_FR": "Vente croisée"
                        },
                        "is_quantified": false,
                        "is_two_way": false
                      },
                      {
                        "_links": {
                          "self": {
                            "href": "https://demo.akeneo.com/api/rest/v1/association-types/UPSELL"
                          }
                        },
                        "code": "UPSELL",
                        "labels": {
                          "en_US": "Upsell",
                          "fr_FR": "Vente incitative"
                        },
                        "is_quantified": false,
                        "is_two_way": false
                      },
                      {
                        "_links": {
                          "self": {
                            "href": "https://demo.akeneo.com/api/rest/v1/association-types/SUBSTITUTION"
                          }
                        },
                        "code": "SUBSTITUTION",
                        "labels": {
                          "en_US": "Substitution",
                          "fr_FR": "Remplacement"
                        },
                        "is_quantified": false,
                        "is_two_way": false
                      }
                    ]
                  }
                }
              }
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "406": {
              "description": "Not Acceptable",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 406
                },
                "message": {
                  "example": "`xxx’ in `Accept` header is not valid. Only `application/json` is allowed."
                }
              },
              "x-details": "The `Accept` header is not `application/json` but it should"
            }
          },
          "x-versions": [
            "2.x",
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ]
        },
        "post": {
          "tags": [
            "Association type"
          ],
          "summary": "Create a new association type",
          "description": "This endpoint allows you to create a new association type.",
          "operationId": "association_types_post",
          "requestBody": {
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "code"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Association type code",
                      "x-immutable": true
                    },
                    "labels": {
                      "type": "object",
                      "properties": {
                        "localeCode": {
                          "type": "string",
                          "description": "Association type label for the locale `localeCode`"
                        }
                      },
                      "description": "Association type labels for each locale",
                      "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                    },
                    "is_quantified": {
                      "type": "boolean",
                      "description": "When true, the association is a quantified association (Only available in the PIM Serenity version.)",
                      "default": false,
                      "x-immutable": true
                    },
                    "is_two_way": {
                      "type": "boolean",
                      "description": "When true, the association is a two-way association (Only available in the PIM Serenity version.)",
                      "default": false,
                      "x-immutable": true
                    }
                  },
                  "example": {
                    "code": "upsell",
                    "labels": {
                      "en_US": "Upsell",
                      "fr_FR": "Vente incitative"
                    },
                    "is_quantified": false,
                    "is_two_way": false
                  }
                }
              }
            },
            "required": false
          },
          "responses": {
            "201": {
              "description": "Created",
              "headers": {
                "Location": {
                  "description": "URI of the created resource",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {},
              "x-details": "Means that the creation was successful"
            },
            "400": {
              "description": "Bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 400
                },
                "message": {
                  "example": "Invalid JSON message received"
                }
              },
              "x-details": "Can be caused by a malformed JSON request"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "415": {
              "description": "Unsupported Media type",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 415
                },
                "message": {
                  "example": "`xxx’ in `Content-Type’ header is not valid.  Only `application/json’ is allowed."
                }
              },
              "x-details": "The `Content-Type` header has to be `application/json`"
            },
            "422": {
              "description": "Unprocessable entity",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 422
                },
                "message": {
                  "example": "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
                },
                "_links": {
                  "example": {
                    "documentation": {
                      "href": "http://api.akeneo.com/api-reference.html"
                    }
                  }
                }
              },
              "x-details": "The validation of the entity given in the body of the request failed"
            }
          },
          "x-versions": [
            "2.x",
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-codegen-request-body-name": "body"
        },
        "patch": {
          "tags": [
            "Association type"
          ],
          "summary": "Update/create several association types",
          "description": "This endpoint allows you to update and/or create several association types at once.",
          "operationId": "several_association_types_patch",
          "requestBody": {
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "code"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Association type code",
                      "x-immutable": true
                    },
                    "labels": {
                      "type": "object",
                      "properties": {
                        "localeCode": {
                          "type": "string",
                          "description": "Association type label for the locale `localeCode`"
                        }
                      },
                      "description": "Association type labels for each locale",
                      "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                    },
                    "is_quantified": {
                      "type": "boolean",
                      "description": "When true, the association is a quantified association (Only available in the PIM Serenity version.)",
                      "default": false,
                      "x-immutable": true
                    },
                    "is_two_way": {
                      "type": "boolean",
                      "description": "When true, the association is a two-way association (Only available in the PIM Serenity version.)",
                      "default": false,
                      "x-immutable": true
                    }
                  },
                  "example": {
                    "code": "upsell",
                    "labels": {
                      "en_US": "Upsell",
                      "fr_FR": "Vente incitative"
                    },
                    "is_quantified": false,
                    "is_two_way": false
                  },
                  "x-examples": {
                    "x-example-1": "{\"code\":\"new_sell\"}",
                    "x-example-2": "{\"code\":\"substitution\", \"type\":\"bar\"}",
                    "x-example-3": "{\"code\":\"x_cross_sell\", \"is_two_way\": true, \"is_quantified\": false}"
                  }
                }
              }
            },
            "required": false
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "line": {
                        "type": "integer",
                        "description": "Line number"
                      },
                      "identifier": {
                        "type": "string",
                        "description": "Resource identifier, only filled when the resource is a product"
                      },
                      "code": {
                        "type": "string",
                        "description": "Resource code, only filled when the resource is not a product"
                      },
                      "status_code": {
                        "type": "integer",
                        "description": "HTTP status code, see <a href=\"/documentation/responses.html#client-errors\">Client errors</a> to understand the meaning of each code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "x-example-1": {
                  "example": "{\"line\":1,\"code\":\"new_sell\",\"status_code\":201}"
                },
                "x-example-2": {
                  "example": "{\"line\":2,\"code\":\"substitution\",\"status_code\":422,\"message\":\"Property \\\"type\\\" does not exist. Check the standard format documentation.\",\"_links\":{\"documentation\":{\"href\":\"http:\\/\\/api.akeneo.com\\/api-reference.html#patch_association_types__code_\"}"
                },
                "x-example-3": {
                  "example": "{\"line\":3,\"code\":\"x_cross_sell\",\"status_code\":204}"
                }
              },
              "x-details": "Returns a plain text response whose lines are JSON containing the status of each update or creation"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "413": {
              "description": "Request Entity Too Large",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 413
                },
                "message": {
                  "example": "Too many resources to process, 100 is the maximum allowed."
                }
              },
              "x-details": "There are too many resources to process (max 100) or the line of JSON is too long (max 1 000 000 characters)"
            },
            "415": {
              "description": "Unsupported Media type",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 415
                },
                "message": {
                  "example": "`xxx’ in `Content-Type’ header is not valid.  Only `application/vnd.akeneo.collection+json’ is allowed."
                }
              },
              "x-details": "The `Content-Type` header has to be `application/vnd.akeneo.collection+json`"
            }
          },
          "x-versions": [
            "2.x",
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-body-by-line": "Contains several lines, each line is an association type in JSON standard format",
          "x-codegen-request-body-name": "body"
        }
      },
      "/api/rest/v1/association-types/{code}": {
        "get": {
          "tags": [
            "Association type"
          ],
          "summary": "Get an association type",
          "description": "This endpoint allows you to get the information about a given association type.",
          "operationId": "association_types_get",
          "parameters": [
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "required": [
                      "code"
                    ],
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Association type code",
                        "x-immutable": true
                      },
                      "labels": {
                        "type": "object",
                        "properties": {
                          "localeCode": {
                            "type": "string",
                            "description": "Association type label for the locale `localeCode`"
                          }
                        },
                        "description": "Association type labels for each locale",
                        "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                      },
                      "is_quantified": {
                        "type": "boolean",
                        "description": "When true, the association is a quantified association (Only available in the PIM Serenity version.)",
                        "default": false,
                        "x-immutable": true
                      },
                      "is_two_way": {
                        "type": "boolean",
                        "description": "When true, the association is a two-way association (Only available in the PIM Serenity version.)",
                        "default": false,
                        "x-immutable": true
                      }
                    },
                    "example": {
                      "code": "upsell",
                      "labels": {
                        "en_US": "Upsell",
                        "fr_FR": "Vente incitative"
                      },
                      "is_quantified": false,
                      "is_two_way": false
                    }
                  }
                }
              },
              "x-details": "Returns the content of the association type in JSON standard format"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "404": {
              "description": "Resource not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 404
                },
                "message": {
                  "example": "Resource `my_resource_code` does not exist."
                }
              },
              "x-details": "The resource code given in the URI does not correspond to any existing PIM resource"
            },
            "406": {
              "description": "Not Acceptable",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 406
                },
                "message": {
                  "example": "`xxx’ in `Accept` header is not valid. Only `application/json` is allowed."
                }
              },
              "x-details": "The `Accept` header is not `application/json` but it should"
            }
          },
          "x-versions": [
            "2.x",
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ]
        },
        "patch": {
          "tags": [
            "Association type"
          ],
          "summary": "Update/create an association type",
          "description": "This endpoint allows you to update a given association type. Know more about <a href=\"/documentation/update.html#update-behavior\">Update behavior</a>. Note that if no association type exists for the given code, it creates it.",
          "operationId": "association_types_patch",
          "parameters": [
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "code"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Association type code",
                      "x-immutable": true
                    },
                    "labels": {
                      "type": "object",
                      "properties": {
                        "localeCode": {
                          "type": "string",
                          "description": "Association type label for the locale `localeCode`"
                        }
                      },
                      "description": "Association type labels for each locale",
                      "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                    },
                    "is_quantified": {
                      "type": "boolean",
                      "description": "When true, the association is a quantified association (Only available in the PIM Serenity version.)",
                      "default": false,
                      "x-immutable": true
                    },
                    "is_two_way": {
                      "type": "boolean",
                      "description": "When true, the association is a two-way association (Only available in the PIM Serenity version.)",
                      "default": false,
                      "x-immutable": true
                    }
                  },
                  "example": {
                    "code": "upsell",
                    "labels": {
                      "en_US": "Upsell",
                      "fr_FR": "Vente incitative"
                    },
                    "is_quantified": false,
                    "is_two_way": false
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "Created",
              "headers": {
                "Location": {
                  "description": "URI of the created resource",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {},
              "x-details": "Means that the creation was successful"
            },
            "204": {
              "description": "No content to return",
              "headers": {
                "Location": {
                  "description": "URI of the updated resource",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {},
              "x-details": "Means that the update was successful"
            },
            "400": {
              "description": "Bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 400
                },
                "message": {
                  "example": "Invalid JSON message received"
                }
              },
              "x-details": "Can be caused by a malformed JSON request"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "415": {
              "description": "Unsupported Media type",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 415
                },
                "message": {
                  "example": "`xxx’ in `Content-Type’ header is not valid.  Only `application/json’ is allowed."
                }
              },
              "x-details": "The `Content-Type` header has to be `application/json`"
            },
            "422": {
              "description": "Unprocessable entity",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 422
                },
                "message": {
                  "example": "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
                },
                "_links": {
                  "example": {
                    "documentation": {
                      "href": "http://api.akeneo.com/api-reference.html"
                    }
                  }
                }
              },
              "x-details": "The validation of the entity given in the body of the request failed"
            }
          },
          "x-versions": [
            "2.x",
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-codegen-request-body-name": "body"
        }
      },
      "/api/rest/v1/channels": {
        "get": {
          "tags": [
            "Channel"
          ],
          "summary": "Get a list of channels",
          "description": "This endpoint allows you to get a list of channels. Channels are paginated and sorted by code.",
          "operationId": "get_channels",
          "parameters": [
            {
              "name": "page",
              "in": "query",
              "description": "Number of the page to retrieve when using the `page` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html#pagination\">Pagination</a> section",
              "schema": {
                "type": "integer",
                "default": 1
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
              "schema": {
                "maximum": 100,
                "minimum": 1,
                "type": "integer",
                "default": 10
              }
            },
            {
              "name": "with_count",
              "in": "query",
              "description": "Return the count of items in the response. Be carefull with that, on a big catalog, it can decrease performance in a significative way",
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Return channels paginated",
              "content": {
                "application/json": {
                  "schema": {
                    "title": "Channels",
                    "type": "object",
                    "properties": {
                      "_embedded": {
                        "type": "object",
                        "properties": {
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "_links": {
                                      "type": "object",
                                      "properties": {
                                        "self": {
                                          "type": "object",
                                          "properties": {
                                            "href": {
                                              "type": "string",
                                              "description": "URI of the resource"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "required": [
                                    "category_tree",
                                    "code",
                                    "currencies",
                                    "locales"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "string",
                                      "description": "Channel code",
                                      "x-immutable": true
                                    },
                                    "locales": {
                                      "type": "array",
                                      "description": "Codes of activated locales for the channel",
                                      "items": {
                                        "type": "string"
                                      },
                                      "x-validation-rules": "&bull; Each string of the array is an existing locale code &#10;&bull; At least one locale in the array"
                                    },
                                    "currencies": {
                                      "type": "array",
                                      "description": "Codes of activated currencies for the channel",
                                      "items": {
                                        "type": "string"
                                      },
                                      "x-validation-rules": "&bull; Each string of the array is an existing currency code &#10;&bull; At least one currency in the array"
                                    },
                                    "category_tree": {
                                      "type": "string",
                                      "description": "Code of the category tree linked to the channel",
                                      "x-validation-rules": "It is the code of an existing category code that is a tree (a category without parent)"
                                    },
                                    "conversion_units": {
                                      "type": "object",
                                      "properties": {
                                        "attributeCode": {
                                          "type": "string",
                                          "description": "Conversion unit code used to convert the values of the attribute `attributeCode` when exporting via the channel"
                                        }
                                      },
                                      "description": "Units to which the given metric attributes should be converted when exporting products",
                                      "x-validation-rules": "&bull; The `attributeCode` is the code of an existing attribute whose type is `pim_catalog_metric` &#10;&bull; The strings are existing unit codes."
                                    },
                                    "labels": {
                                      "type": "object",
                                      "properties": {
                                        "localeCode": {
                                          "type": "string",
                                          "description": "Channel label for the locale `localeCode`"
                                        }
                                      },
                                      "description": "Channel labels for each locale",
                                      "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                                    }
                                  },
                                  "example": {
                                    "code": "ecommerce",
                                    "currencies": [
                                      "USD",
                                      "EUR"
                                    ],
                                    "locales": [
                                      "de_DE",
                                      "en_US",
                                      "fr_FR"
                                    ],
                                    "category_tree": "master",
                                    "conversion_units": {
                                      "weight": "KILOGRAM"
                                    },
                                    "labels": {
                                      "en_US": "Ecommerce",
                                      "de_DE": "Ecommerce",
                                      "fr_FR": "Ecommerce"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      },
                      "_links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the current page of resources"
                              }
                            }
                          },
                          "first": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the first page of resources"
                              }
                            }
                          },
                          "previous": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the previous page of resources"
                              }
                            }
                          },
                          "next": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the next page of resources"
                              }
                            }
                          }
                        }
                      },
                      "current_page": {
                        "type": "integer",
                        "description": "Current page number"
                      }
                    }
                  }
                },
                "_links": {
                  "example": {
                    "self": {
                      "href": "https://demo.akeneo.com/api/rest/v1/channels?page=1&limit=3"
                    },
                    "first": {
                      "href": "https://demo.akeneo.com/api/rest/v1/channels?page=1&limit=3"
                    }
                  }
                },
                "current_page": {
                  "example": 1
                },
                "_embedded": {
                  "example": {
                    "items": [
                      {
                        "_links": {
                          "self": {
                            "href": "https://demo.akeneo.com/api/rest/v1/channels/ecommerce"
                          }
                        },
                        "code": "ecommerce",
                        "currencies": [
                          "USD",
                          "EUR"
                        ],
                        "locales": [
                          "en_US",
                          "fr_FR",
                          "de_DE"
                        ],
                        "category_tree": "master",
                        "conversion_units": {
                          "a_metric": "KILOWATT",
                          "a_metric_negative": "CELSIUS"
                        },
                        "labels": {
                          "en_US": "Ecommerce",
                          "fr_FR": "E-commerce",
                          "de_DE": "E-commerce"
                        }
                      },
                      {
                        "_links": {
                          "self": {
                            "href": "https://demo.akeneo.com/api/rest/v1/channels/mobile"
                          }
                        },
                        "code": "mobile",
                        "currencies": [
                          "USD",
                          "EUR"
                        ],
                        "locales": [
                          "en_US",
                          "fr_FR",
                          "de_DE"
                        ],
                        "category_tree": "master",
                        "conversion_units": {
                          "a_metric": "KILOWATT",
                          "a_metric_negative": "CELSIUS"
                        },
                        "labels": {
                          "en_US": "Mobile",
                          "fr_FR": "Mobile",
                          "de_DE": "Mobile"
                        }
                      },
                      {
                        "_links": {
                          "self": {
                            "href": "https://demo.akeneo.com/api/rest/v1/channels/print"
                          }
                        },
                        "code": "print",
                        "currencies": [
                          "USD",
                          "EUR"
                        ],
                        "locales": [
                          "en_US",
                          "fr_FR",
                          "de_DE"
                        ],
                        "category_tree": "master",
                        "conversion_units": {},
                        "labels": {
                          "en_US": "Print",
                          "fr_FR": "Print",
                          "de_DE": "Print"
                        }
                      }
                    ]
                  }
                }
              }
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "406": {
              "description": "Not Acceptable",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 406
                },
                "message": {
                  "example": "`xxx’ in `Accept` header is not valid. Only `application/json` is allowed."
                }
              },
              "x-details": "The `Accept` header is not `application/json` but it should"
            }
          },
          "x-versions": [
            "1.7",
            "2.x",
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ]
        },
        "post": {
          "tags": [
            "Channel"
          ],
          "summary": "Create a new channel",
          "description": "This endpoint allows you to create a new channel.",
          "operationId": "channels_post",
          "requestBody": {
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "category_tree",
                    "code",
                    "currencies",
                    "locales"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Channel code",
                      "x-immutable": true
                    },
                    "locales": {
                      "type": "array",
                      "description": "Codes of activated locales for the channel",
                      "items": {
                        "type": "string"
                      },
                      "x-validation-rules": "&bull; Each string of the array is an existing locale code &#10;&bull; At least one locale in the array"
                    },
                    "currencies": {
                      "type": "array",
                      "description": "Codes of activated currencies for the channel",
                      "items": {
                        "type": "string"
                      },
                      "x-validation-rules": "&bull; Each string of the array is an existing currency code &#10;&bull; At least one currency in the array"
                    },
                    "category_tree": {
                      "type": "string",
                      "description": "Code of the category tree linked to the channel",
                      "x-validation-rules": "It is the code of an existing category code that is a tree (a category without parent)"
                    },
                    "conversion_units": {
                      "type": "object",
                      "properties": {
                        "attributeCode": {
                          "type": "string",
                          "description": "Conversion unit code used to convert the values of the attribute `attributeCode` when exporting via the channel"
                        }
                      },
                      "description": "Units to which the given metric attributes should be converted when exporting products",
                      "x-validation-rules": "&bull; The `attributeCode` is the code of an existing attribute whose type is `pim_catalog_metric` &#10;&bull; The strings are existing unit codes."
                    },
                    "labels": {
                      "type": "object",
                      "properties": {
                        "localeCode": {
                          "type": "string",
                          "description": "Channel label for the locale `localeCode`"
                        }
                      },
                      "description": "Channel labels for each locale",
                      "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                    }
                  },
                  "example": {
                    "code": "ecommerce",
                    "currencies": [
                      "USD",
                      "EUR"
                    ],
                    "locales": [
                      "de_DE",
                      "en_US",
                      "fr_FR"
                    ],
                    "category_tree": "master",
                    "conversion_units": {
                      "weight": "KILOGRAM"
                    },
                    "labels": {
                      "en_US": "Ecommerce",
                      "de_DE": "Ecommerce",
                      "fr_FR": "Ecommerce"
                    }
                  }
                }
              }
            },
            "required": false
          },
          "responses": {
            "201": {
              "description": "Created",
              "headers": {
                "Location": {
                  "description": "URI of the created resource",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {},
              "x-details": "Means that the creation was successful"
            },
            "400": {
              "description": "Bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 400
                },
                "message": {
                  "example": "Invalid JSON message received"
                }
              },
              "x-details": "Can be caused by a malformed JSON request"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "415": {
              "description": "Unsupported Media type",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 415
                },
                "message": {
                  "example": "`xxx’ in `Content-Type’ header is not valid.  Only `application/json’ is allowed."
                }
              },
              "x-details": "The `Content-Type` header has to be `application/json`"
            },
            "422": {
              "description": "Unprocessable entity",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 422
                },
                "message": {
                  "example": "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
                },
                "_links": {
                  "example": {
                    "documentation": {
                      "href": "http://api.akeneo.com/api-reference.html"
                    }
                  }
                }
              },
              "x-details": "The validation of the entity given in the body of the request failed"
            }
          },
          "x-versions": [
            "2.x",
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-codegen-request-body-name": "body"
        },
        "patch": {
          "tags": [
            "Channel"
          ],
          "summary": "Update/create several channels",
          "description": "This endpoint allows you to update and/or create several channels at once.",
          "operationId": "several_channels_patch",
          "requestBody": {
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "category_tree",
                    "code",
                    "currencies",
                    "locales"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Channel code",
                      "x-immutable": true
                    },
                    "locales": {
                      "type": "array",
                      "description": "Codes of activated locales for the channel",
                      "items": {
                        "type": "string"
                      },
                      "x-validation-rules": "&bull; Each string of the array is an existing locale code &#10;&bull; At least one locale in the array"
                    },
                    "currencies": {
                      "type": "array",
                      "description": "Codes of activated currencies for the channel",
                      "items": {
                        "type": "string"
                      },
                      "x-validation-rules": "&bull; Each string of the array is an existing currency code &#10;&bull; At least one currency in the array"
                    },
                    "category_tree": {
                      "type": "string",
                      "description": "Code of the category tree linked to the channel",
                      "x-validation-rules": "It is the code of an existing category code that is a tree (a category without parent)"
                    },
                    "conversion_units": {
                      "type": "object",
                      "properties": {
                        "attributeCode": {
                          "type": "string",
                          "description": "Conversion unit code used to convert the values of the attribute `attributeCode` when exporting via the channel"
                        }
                      },
                      "description": "Units to which the given metric attributes should be converted when exporting products",
                      "x-validation-rules": "&bull; The `attributeCode` is the code of an existing attribute whose type is `pim_catalog_metric` &#10;&bull; The strings are existing unit codes."
                    },
                    "labels": {
                      "type": "object",
                      "properties": {
                        "localeCode": {
                          "type": "string",
                          "description": "Channel label for the locale `localeCode`"
                        }
                      },
                      "description": "Channel labels for each locale",
                      "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                    }
                  },
                  "example": {
                    "code": "ecommerce",
                    "currencies": [
                      "USD",
                      "EUR"
                    ],
                    "locales": [
                      "de_DE",
                      "en_US",
                      "fr_FR"
                    ],
                    "category_tree": "master",
                    "conversion_units": {
                      "weight": "KILOGRAM"
                    },
                    "labels": {
                      "en_US": "Ecommerce",
                      "de_DE": "Ecommerce",
                      "fr_FR": "Ecommerce"
                    }
                  },
                  "x-examples": {
                    "x-example-1": "{\"code\":\"ecommerce_fr\", \"category_tree\": \"master\", \"currencies\": [\"EUR\"], \"locales\": [\"fr_FR\"], \"labels\":{\"fr_FR\": \"Ecommerce Fr\"}}",
                    "x-example-2": "{\"code\":\"ecommerce_ch\", \"type\":\"bar\"}",
                    "x-example-3": "{\"code\":\"tablet\", \"labels\":{\"en_US\": \"Tablet\", \"fr_FR\": \"Tablette\"}}"
                  }
                }
              }
            },
            "required": false
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "line": {
                        "type": "integer",
                        "description": "Line number"
                      },
                      "identifier": {
                        "type": "string",
                        "description": "Resource identifier, only filled when the resource is a product"
                      },
                      "code": {
                        "type": "string",
                        "description": "Resource code, only filled when the resource is not a product"
                      },
                      "status_code": {
                        "type": "integer",
                        "description": "HTTP status code, see <a href=\"/documentation/responses.html#client-errors\">Client errors</a> to understand the meaning of each code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "x-example-1": {
                  "example": "{\"line\":1,\"code\":\"ecommerce_fr\",\"status_code\":201}"
                },
                "x-example-2": {
                  "example": "{\"line\":2,\"code\":\"ecommerce_ch\",\"status_code\":422,\"message\":\"Property \\\"type\\\" does not exist. Check the standard format documentation.\",\"_links\":{\"documentation\":{\"href\":\"http:\\/\\/api.akeneo.com\\/api-reference.html#patch_channels__code_\"}"
                },
                "x-example-3": {
                  "example": "{\"line\":3,\"code\":\"tablet\",\"status_code\":204}"
                }
              },
              "x-details": "Returns a plain text response whose lines are JSON containing the status of each update or creation"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "413": {
              "description": "Request Entity Too Large",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 413
                },
                "message": {
                  "example": "Too many resources to process, 100 is the maximum allowed."
                }
              },
              "x-details": "There are too many resources to process (max 100) or the line of JSON is too long (max 1 000 000 characters)"
            },
            "415": {
              "description": "Unsupported Media type",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 415
                },
                "message": {
                  "example": "`xxx’ in `Content-Type’ header is not valid.  Only `application/vnd.akeneo.collection+json’ is allowed."
                }
              },
              "x-details": "The `Content-Type` header has to be `application/vnd.akeneo.collection+json`"
            }
          },
          "x-versions": [
            "2.x",
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-body-by-line": "Contains several lines, each line is a channel in JSON standard format",
          "x-codegen-request-body-name": "body"
        }
      },
      "/api/rest/v1/channels/{code}": {
        "get": {
          "tags": [
            "Channel"
          ],
          "summary": "Get a channel",
          "description": "This endpoint allows you to get the information about a given channel.",
          "operationId": "get_channels__code_",
          "parameters": [
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "required": [
                      "category_tree",
                      "code",
                      "currencies",
                      "locales"
                    ],
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Channel code",
                        "x-immutable": true
                      },
                      "locales": {
                        "type": "array",
                        "description": "Codes of activated locales for the channel",
                        "items": {
                          "type": "string"
                        },
                        "x-validation-rules": "&bull; Each string of the array is an existing locale code &#10;&bull; At least one locale in the array"
                      },
                      "currencies": {
                        "type": "array",
                        "description": "Codes of activated currencies for the channel",
                        "items": {
                          "type": "string"
                        },
                        "x-validation-rules": "&bull; Each string of the array is an existing currency code &#10;&bull; At least one currency in the array"
                      },
                      "category_tree": {
                        "type": "string",
                        "description": "Code of the category tree linked to the channel",
                        "x-validation-rules": "It is the code of an existing category code that is a tree (a category without parent)"
                      },
                      "conversion_units": {
                        "type": "object",
                        "properties": {
                          "attributeCode": {
                            "type": "string",
                            "description": "Conversion unit code used to convert the values of the attribute `attributeCode` when exporting via the channel"
                          }
                        },
                        "description": "Units to which the given metric attributes should be converted when exporting products",
                        "x-validation-rules": "&bull; The `attributeCode` is the code of an existing attribute whose type is `pim_catalog_metric` &#10;&bull; The strings are existing unit codes."
                      },
                      "labels": {
                        "type": "object",
                        "properties": {
                          "localeCode": {
                            "type": "string",
                            "description": "Channel label for the locale `localeCode`"
                          }
                        },
                        "description": "Channel labels for each locale",
                        "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                      }
                    },
                    "example": {
                      "code": "ecommerce",
                      "currencies": [
                        "USD",
                        "EUR"
                      ],
                      "locales": [
                        "de_DE",
                        "en_US",
                        "fr_FR"
                      ],
                      "category_tree": "master",
                      "conversion_units": {
                        "weight": "KILOGRAM"
                      },
                      "labels": {
                        "en_US": "Ecommerce",
                        "de_DE": "Ecommerce",
                        "fr_FR": "Ecommerce"
                      }
                    }
                  }
                }
              },
              "x-details": "Returns the content of the channel in JSON standard format"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "404": {
              "description": "Resource not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 404
                },
                "message": {
                  "example": "Resource `my_resource_code` does not exist."
                }
              },
              "x-details": "The resource code given in the URI does not correspond to any existing PIM resource"
            },
            "406": {
              "description": "Not Acceptable",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 406
                },
                "message": {
                  "example": "`xxx’ in `Accept` header is not valid. Only `application/json` is allowed."
                }
              },
              "x-details": "The `Accept` header is not `application/json` but it should"
            }
          },
          "x-versions": [
            "1.7",
            "2.x",
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ]
        },
        "patch": {
          "tags": [
            "Channel"
          ],
          "summary": "Update/create a channel",
          "description": "This endpoint allows you to update a given channel. Know more about <a href=\"/documentation/update.html#update-behavior\">Update behavior</a>. Note that if no channel exists for the given code, it creates it.",
          "operationId": "channels_patch",
          "parameters": [
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "category_tree",
                    "code",
                    "currencies",
                    "locales"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Channel code",
                      "x-immutable": true
                    },
                    "locales": {
                      "type": "array",
                      "description": "Codes of activated locales for the channel",
                      "items": {
                        "type": "string"
                      },
                      "x-validation-rules": "&bull; Each string of the array is an existing locale code &#10;&bull; At least one locale in the array"
                    },
                    "currencies": {
                      "type": "array",
                      "description": "Codes of activated currencies for the channel",
                      "items": {
                        "type": "string"
                      },
                      "x-validation-rules": "&bull; Each string of the array is an existing currency code &#10;&bull; At least one currency in the array"
                    },
                    "category_tree": {
                      "type": "string",
                      "description": "Code of the category tree linked to the channel",
                      "x-validation-rules": "It is the code of an existing category code that is a tree (a category without parent)"
                    },
                    "conversion_units": {
                      "type": "object",
                      "properties": {
                        "attributeCode": {
                          "type": "string",
                          "description": "Conversion unit code used to convert the values of the attribute `attributeCode` when exporting via the channel"
                        }
                      },
                      "description": "Units to which the given metric attributes should be converted when exporting products",
                      "x-validation-rules": "&bull; The `attributeCode` is the code of an existing attribute whose type is `pim_catalog_metric` &#10;&bull; The strings are existing unit codes."
                    },
                    "labels": {
                      "type": "object",
                      "properties": {
                        "localeCode": {
                          "type": "string",
                          "description": "Channel label for the locale `localeCode`"
                        }
                      },
                      "description": "Channel labels for each locale",
                      "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                    }
                  },
                  "example": {
                    "code": "ecommerce",
                    "currencies": [
                      "USD",
                      "EUR"
                    ],
                    "locales": [
                      "de_DE",
                      "en_US",
                      "fr_FR"
                    ],
                    "category_tree": "master",
                    "conversion_units": {
                      "weight": "KILOGRAM"
                    },
                    "labels": {
                      "en_US": "Ecommerce",
                      "de_DE": "Ecommerce",
                      "fr_FR": "Ecommerce"
                    }
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "Created",
              "headers": {
                "Location": {
                  "description": "URI of the created resource",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {},
              "x-details": "Means that the creation was successful"
            },
            "204": {
              "description": "No content to return",
              "headers": {
                "Location": {
                  "description": "URI of the updated resource",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {},
              "x-details": "Means that the update was successful"
            },
            "400": {
              "description": "Bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 400
                },
                "message": {
                  "example": "Invalid JSON message received"
                }
              },
              "x-details": "Can be caused by a malformed JSON request"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "415": {
              "description": "Unsupported Media type",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 415
                },
                "message": {
                  "example": "`xxx’ in `Content-Type’ header is not valid.  Only `application/json’ is allowed."
                }
              },
              "x-details": "The `Content-Type` header has to be `application/json`"
            },
            "422": {
              "description": "Unprocessable entity",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 422
                },
                "message": {
                  "example": "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
                },
                "_links": {
                  "example": {
                    "documentation": {
                      "href": "http://api.akeneo.com/api-reference.html"
                    }
                  }
                }
              },
              "x-details": "The validation of the entity given in the body of the request failed"
            }
          },
          "x-versions": [
            "2.x",
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-codegen-request-body-name": "body"
        }
      },
      "/api/rest/v1/locales": {
        "get": {
          "tags": [
            "Locale"
          ],
          "summary": "Get a list of locales",
          "description": "This endpoint allows you to get a list of locales. Locales are paginated and sorted by code.",
          "operationId": "get_locales",
          "parameters": [
            {
              "name": "search",
              "in": "query",
              "description": "Filter locales, for more details see the <a href=\"/documentation/filter.html\">Filters</a> section",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page",
              "in": "query",
              "description": "Number of the page to retrieve when using the `page` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html#pagination\">Pagination</a> section",
              "schema": {
                "type": "integer",
                "default": 1
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
              "schema": {
                "maximum": 100,
                "minimum": 1,
                "type": "integer",
                "default": 10
              }
            },
            {
              "name": "with_count",
              "in": "query",
              "description": "Return the count of items in the response. Be carefull with that, on a big catalog, it can decrease performance in a significative way",
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Return locales paginated",
              "content": {
                "application/json": {
                  "schema": {
                    "title": "Locales",
                    "type": "object",
                    "properties": {
                      "_embedded": {
                        "type": "object",
                        "properties": {
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "_links": {
                                      "type": "object",
                                      "properties": {
                                        "self": {
                                          "type": "object",
                                          "properties": {
                                            "href": {
                                              "type": "string",
                                              "description": "URI of the resource"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "required": [
                                    "code"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "string",
                                      "description": "Locale code",
                                      "x-immutable": true
                                    },
                                    "enabled": {
                                      "type": "boolean",
                                      "description": "Whether the locale is enabled",
                                      "default": false
                                    }
                                  },
                                  "example": {
                                    "code": "en_US",
                                    "enable": true
                                  }
                                }
                              ]
                            }
                          }
                        }
                      },
                      "_links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the current page of resources"
                              }
                            }
                          },
                          "first": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the first page of resources"
                              }
                            }
                          },
                          "previous": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the previous page of resources"
                              }
                            }
                          },
                          "next": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the next page of resources"
                              }
                            }
                          }
                        }
                      },
                      "current_page": {
                        "type": "integer",
                        "description": "Current page number"
                      }
                    }
                  }
                },
                "_links": {
                  "example": {
                    "self": {
                      "href": "https://demo.akeneo.com/api/rest/v1/locales?page=2&limit=4"
                    },
                    "first": {
                      "href": "https://demo.akeneo.com/api/rest/v1/locales?page=1&limit=4"
                    },
                    "previous": {
                      "href": "https://demo.akeneo.com/api/rest/v1/locales?page=1&limit=4"
                    },
                    "next": {
                      "href": "https://demo.akeneo.com/api/rest/v1/locales?page=2&limit=4"
                    }
                  }
                },
                "current_page": {
                  "example": 2
                },
                "_embedded": {
                  "example": {
                    "items": [
                      {
                        "_links": {
                          "self": {
                            "href": "https://demo.akeneo.com/api/rest/v1/locales/en_US"
                          }
                        },
                        "code": "en_US",
                        "enabled": true
                      },
                      {
                        "_links": {
                          "self": {
                            "href": "https://demo.akeneo.com/api/rest/v1/locales/fr_FR"
                          }
                        },
                        "code": "fr_FR",
                        "enabled": true
                      },
                      {
                        "_links": {
                          "self": {
                            "href": "https://demo.akeneo.com/api/rest/v1/locales/de_DE"
                          }
                        },
                        "code": "de_DE",
                        "enabled": true
                      },
                      {
                        "_links": {
                          "self": {
                            "href": "https://demo.akeneo.com/api/rest/v1/locales/af_ZA"
                          }
                        },
                        "code": "af_ZA",
                        "enabled": false
                      }
                    ]
                  }
                }
              }
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "406": {
              "description": "Not Acceptable",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 406
                },
                "message": {
                  "example": "`xxx’ in `Accept` header is not valid. Only `application/json` is allowed."
                }
              },
              "x-details": "The `Accept` header is not `application/json` but it should"
            }
          },
          "x-versions": [
            "1.7",
            "2.x",
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ]
        }
      },
      "/api/rest/v1/locales/{code}": {
        "get": {
          "tags": [
            "Locale"
          ],
          "summary": "Get a locale",
          "description": "This endpoint allows you to get the information about a given locale.",
          "operationId": "get_locales__code_",
          "parameters": [
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "required": [
                      "code"
                    ],
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Locale code",
                        "x-immutable": true
                      },
                      "enabled": {
                        "type": "boolean",
                        "description": "Whether the locale is enabled",
                        "default": false
                      }
                    },
                    "example": {
                      "code": "en_US",
                      "enable": true
                    }
                  }
                }
              },
              "x-details": "Returns the content of the locale in JSON standard format"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "404": {
              "description": "Resource not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 404
                },
                "message": {
                  "example": "Resource `my_resource_code` does not exist."
                }
              },
              "x-details": "The resource code given in the URI does not correspond to any existing PIM resource"
            },
            "406": {
              "description": "Not Acceptable",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 406
                },
                "message": {
                  "example": "`xxx’ in `Accept` header is not valid. Only `application/json` is allowed."
                }
              },
              "x-details": "The `Accept` header is not `application/json` but it should"
            }
          },
          "x-versions": [
            "1.7",
            "2.x",
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ]
        }
      },
      "/api/rest/v1/categories": {
        "get": {
          "tags": [
            "Category"
          ],
          "summary": "Get list of categories",
          "description": "This endpoint allows you to get a list of categories. Categories are paginated and sorted by `root/left`.",
          "operationId": "get_categories",
          "parameters": [
            {
              "name": "search",
              "in": "query",
              "description": "Filter categories, for more details see the <a href=\"/documentation/filter.html#filter-categories\">Filters</a> section.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page",
              "in": "query",
              "description": "Number of the page to retrieve when using the `page` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html#pagination\">Pagination</a> section",
              "schema": {
                "type": "integer",
                "default": 1
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
              "schema": {
                "maximum": 100,
                "minimum": 1,
                "type": "integer",
                "default": 10
              }
            },
            {
              "name": "with_count",
              "in": "query",
              "description": "Return the count of items in the response. Be carefull with that, on a big catalog, it can decrease performance in a significative way",
              "schema": {
                "type": "boolean",
                "default": false
              }
            },
            {
              "name": "with_position",
              "in": "query",
              "description": "Return information about category position into its category tree (only available since the 7.0 version)",
              "schema": {
                "type": "boolean",
                "x-from-version": "7.0"
              },
              "x-from-version": "7.0"
            },
            {
              "name": "with_enriched_attributes",
              "in": "query",
              "description": "Return attribute values of the category (only available on SaaS platforms)",
              "schema": {
                "type": "boolean",
                "x-from-version": "SaaS"
              },
              "x-from-version": "SaaS"
            }
          ],
          "responses": {
            "200": {
              "description": "Return categories paginated",
              "content": {
                "application/json": {
                  "schema": {
                    "title": "Categories",
                    "type": "object",
                    "properties": {
                      "_embedded": {
                        "type": "object",
                        "properties": {
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "_links": {
                                      "type": "object",
                                      "properties": {
                                        "self": {
                                          "type": "object",
                                          "properties": {
                                            "href": {
                                              "type": "string",
                                              "description": "URI of the resource"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "required": [
                                    "code"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "string",
                                      "description": "Category code",
                                      "x-immutable": true
                                    },
                                    "parent": {
                                      "type": "string",
                                      "description": "Category code of the parent's category",
                                      "default": "null",
                                      "x-validation-rules": "&bull; It is either equal to `null` or to an existing category code. &#10;&bull; If equal to an existing category code, it cannot reference itself."
                                    },
                                    "updated": {
                                      "type": "string",
                                      "description": "Date of the last update",
                                      "format": "dateTime",
                                      "x-read-only": true
                                    },
                                    "position": {
                                      "type": "integer",
                                      "description": "Position of the category in its level, start from 1 (only available since the 7.0 version and when query parameter \"with_position\" is set to \"true\")",
                                      "x-read-only": true
                                    },
                                    "labels": {
                                      "type": "object",
                                      "additionalProperties":{
                                        "type": "string"
                                      },
                                      "description": "Category labels for each locale",
                                      "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                                    },
                                    "values": {
                                      "type": "object",
                                      "properties": {
                                        "additionalProperties|attributeUuid|channelCode|localeCode": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "data": {
                                                "type": "object",
                                                "properties": {},
                                                "description": "Attribute value"
                                              },
                                              "type": {
                                                "type": "string",
                                                "description": "The attribute type"
                                              },
                                              "locale": {
                                                "type": "string",
                                                "description": "<a href='api-reference.html#Locale'>Locale</a> code of the attribute value"
                                              },
                                              "channel": {
                                                "type": "string",
                                                "description": "<a href='api-reference.html#Channel'>Channel</a> code of the attribute value"
                                              },
                                              "attribute_code": {
                                                "type": "string",
                                                "description": "The attribute code with its uuid (additionalProperties|attributeUuid)"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "description": "Attribute values",
                                      "x-read-only": true
                                    }
                                  },
                                  "example": {
                                    "code": "winter_collection",
                                    "updated": "2021-05-22T12:48:00+02:00",
                                    "position": 1,
                                    "labels": {
                                      "en_US": "Winter collection",
                                      "fr_FR": "Collection hiver"
                                    },
                                    "values": {
                                      "description|96b88bf4-c2b7-4b64-a1f9-5d4876c02c26|ecommerce|en_US": {
                                        "data": "<p>Winter collection description</p>\n",
                                        "type": "textarea",
                                        "channel": "ecommerce",
                                        "locale": "en_US",
                                        "attribute_code": "description|96b88bf4-c2b7-4b64-a1f9-5d4876c02c26"
                                      }
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      },
                      "_links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the current page of resources"
                              }
                            }
                          },
                          "first": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the first page of resources"
                              }
                            }
                          },
                          "previous": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the previous page of resources"
                              }
                            }
                          },
                          "next": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the next page of resources"
                              }
                            }
                          }
                        }
                      },
                      "current_page": {
                        "type": "integer",
                        "description": "Current page number"
                      }
                    }
                  }
                },
                "_links": {
                  "example": {
                    "self": {
                      "href": "https://demo.akeneo.com/api/rest/v1/categories?page=2&limit=5"
                    },
                    "first": {
                      "href": "https://demo.akeneo.com/api/rest/v1/categories?page=1&limit=5"
                    },
                    "previous": {
                      "href": "https://demo.akeneo.com/api/rest/v1/categories?page=1&limit=5"
                    },
                    "next": {
                      "href": "https://demo.akeneo.com/api/rest/v1/categories?page=3&limit=5"
                    }
                  }
                },
                "current_page": {
                  "example": 2
                },
                "_embedded": {
                  "example": {
                    "items": [
                      {
                        "_links": {
                          "self": {
                            "href": "https://demo.akeneo.com/api/rest/v1/categories/winter_collection"
                          }
                        },
                        "code": "winter_collection",
                        "updated": "2021-05-21T11:32:00+02:00",
                        "position": 1,
                        "labels": {
                          "en_US": "Winter collection",
                          "fr_FR": "Collection hiver",
                          "de_DE": "Winter-Kollektion"
                        },
                        "values": {
                          "description|96b88bf4-c2b7-4b64-a1f9-5d4876c02c26|ecommerce|en_US": {
                            "data": "<p>Winter collection description</p>\n",
                            "type": "textarea",
                            "channel": "ecommerce",
                            "locale": "en_US",
                            "attribute_code": "description|96b88bf4-c2b7-4b64-a1f9-5d4876c02c26"
                          }
                        }
                      },
                      {
                        "_links": {
                          "self": {
                            "href": "https://demo.akeneo.com/api/rest/v1/categories/woman"
                          }
                        },
                        "code": "woman",
                        "parent": "winter_collection",
                        "updated": "2021-04-21T10:41:02+02:00",
                        "position": 1,
                        "labels": {
                          "en_US": "Woman",
                          "fr_FR": "Femme",
                          "de_DE": "Damen"
                        },
                        "values": {}
                      },
                      {
                        "_links": {
                          "self": {
                            "href": "https://demo.akeneo.com/api/rest/v1/categories/man"
                          }
                        },
                        "code": "man",
                        "parent": "winter_collection",
                        "updated": "2021-03-02T12:59:59+02:00",
                        "position": 2,
                        "labels": {
                          "en_US": "Man",
                          "fr_FR": "Homme",
                          "de_DE": "Herren"
                        },
                        "values": {}
                      },
                      {
                        "_links": {
                          "self": {
                            "href": "https://demo.akeneo.com/api/rest/v1/categories/kids"
                          }
                        },
                        "code": "kids",
                        "parent": "winter_collection",
                        "updated": "2021-01-03T12:40:00+02:00",
                        "position": 3,
                        "labels": {
                          "en_US": "Kids",
                          "fr_FR": "Enfant",
                          "de_DE": "Kinder"
                        },
                        "values": {}
                      },
                      {
                        "_links": {
                          "self": {
                            "href": "https://demo.akeneo.com/api/rest/v1/categories/summer_collection"
                          }
                        },
                        "code": "summer_collection",
                        "updated": "2021-04-04T09:42:00+02:00",
                        "position": 1,
                        "labels": {
                          "en_US": "Summer collection",
                          "fr_FR": "Collection été",
                          "de_DE": "Sommer-Kollektion"
                        },
                        "values": {}
                      }
                    ]
                  }
                }
              }
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "406": {
              "description": "Not Acceptable",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 406
                },
                "message": {
                  "example": "`xxx’ in `Accept` header is not valid. Only `application/json` is allowed."
                }
              },
              "x-details": "The `Accept` header is not `application/json` but it should"
            }
          },
          "x-versions": [
            "1.7",
            "2.x",
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ]
        },
        "post": {
          "tags": [
            "Category"
          ],
          "summary": "Create a new category",
          "description": "This endpoint allows you to create a new category.",
          "operationId": "post_categories",
          "requestBody": {
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "code"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Category code",
                      "x-immutable": true
                    },
                    "parent": {
                      "type": "string",
                      "description": "Category code of the parent's category",
                      "default": "null",
                      "x-validation-rules": "&bull; It is either equal to `null` or to an existing category code. &#10;&bull; If equal to an existing category code, it cannot reference itself."
                    },
                    "updated": {
                      "type": "string",
                      "description": "Date of the last update",
                      "format": "dateTime",
                      "x-read-only": true
                    },
                    "position": {
                      "type": "integer",
                      "description": "Position of the category in its level, start from 1 (only available since the 7.0 version and when query parameter \"with_position\" is set to \"true\")",
                      "x-read-only": true
                    },
                    "labels": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Category labels for each locale",
                      "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                    },
                    "values": {
                      "type": "object",
                      "properties": {
                        "additionalProperties|attributeUuid|channelCode|localeCode": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "object",
                                "properties": {},
                                "description": "Attribute value"
                              },
                              "type": {
                                "type": "string",
                                "description": "The attribute type"
                              },
                              "locale": {
                                "type": "string",
                                "description": "<a href='api-reference.html#Locale'>Locale</a> code of the attribute value"
                              },
                              "channel": {
                                "type": "string",
                                "description": "<a href='api-reference.html#Channel'>Channel</a> code of the attribute value"
                              },
                              "attribute_code": {
                                "type": "string",
                                "description": "The attribute code with its uuid (additionalProperties|attributeUuid)"
                              }
                            }
                          }
                        }
                      },
                      "description": "Attribute values",
                      "x-read-only": true
                    }
                  },
                  "example": {
                    "code": "winter_collection",
                    "updated": "2021-05-22T12:48:00+02:00",
                    "position": 1,
                    "labels": {
                      "en_US": "Winter collection",
                      "fr_FR": "Collection hiver"
                    },
                    "values": {
                      "description|96b88bf4-c2b7-4b64-a1f9-5d4876c02c26|ecommerce|en_US": {
                        "data": "<p>Winter collection description</p>\n",
                        "type": "textarea",
                        "channel": "ecommerce",
                        "locale": "en_US",
                        "attribute_code": "description|96b88bf4-c2b7-4b64-a1f9-5d4876c02c26"
                      }
                    }
                  }
                }
              }
            },
            "required": false
          },
          "responses": {
            "201": {
              "description": "Created",
              "headers": {
                "Location": {
                  "description": "URI of the created resource",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {},
              "x-details": "Means that the creation was successful"
            },
            "400": {
              "description": "Bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 400
                },
                "message": {
                  "example": "Invalid JSON message received"
                }
              },
              "x-details": "Can be caused by a malformed JSON request"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "415": {
              "description": "Unsupported Media type",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 415
                },
                "message": {
                  "example": "`xxx’ in `Content-Type’ header is not valid.  Only `application/json’ is allowed."
                }
              },
              "x-details": "The `Content-Type` header has to be `application/json`"
            },
            "422": {
              "description": "Unprocessable entity",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 422
                },
                "message": {
                  "example": "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
                },
                "_links": {
                  "example": {
                    "documentation": {
                      "href": "http://api.akeneo.com/api-reference.html"
                    }
                  }
                }
              },
              "x-details": "The validation of the entity given in the body of the request failed"
            }
          },
          "x-versions": [
            "1.7",
            "2.x",
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-codegen-request-body-name": "body"
        },
        "patch": {
          "tags": [
            "Category"
          ],
          "summary": "Update/create several categories",
          "description": "This endpoint allows you to update several categories at once.",
          "operationId": "patch_categories",
          "requestBody": {
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "code"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Category code",
                      "x-immutable": true
                    },
                    "parent": {
                      "type": "string",
                      "description": "Category code of the parent's category",
                      "default": "null",
                      "x-validation-rules": "&bull; It is either equal to `null` or to an existing category code. &#10;&bull; If equal to an existing category code, it cannot reference itself."
                    },
                    "updated": {
                      "type": "string",
                      "description": "Date of the last update",
                      "format": "dateTime",
                      "x-read-only": true
                    },
                    "position": {
                      "type": "integer",
                      "description": "Position of the category in its level, start from 1 (only available since the 7.0 version and when query parameter \"with_position\" is set to \"true\")",
                      "x-read-only": true
                    },
                    "labels": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Category labels for each locale",
                      "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                    },
                    "values": {
                      "type": "object",
                      "properties": {
                        "additionalProperties|attributeUuid|channelCode|localeCode": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "object",
                                "properties": {},
                                "description": "Attribute value"
                              },
                              "type": {
                                "type": "string",
                                "description": "The attribute type"
                              },
                              "locale": {
                                "type": "string",
                                "description": "<a href='api-reference.html#Locale'>Locale</a> code of the attribute value"
                              },
                              "channel": {
                                "type": "string",
                                "description": "<a href='api-reference.html#Channel'>Channel</a> code of the attribute value"
                              },
                              "attribute_code": {
                                "type": "string",
                                "description": "The attribute code with its uuid (additionalProperties|attributeUuid)"
                              }
                            }
                          }
                        }
                      },
                      "description": "Attribute values",
                      "x-read-only": true
                    }
                  },
                  "example": {
                    "code": "winter_collection",
                    "updated": "2021-05-22T12:48:00+02:00",
                    "position": 1,
                    "labels": {
                      "en_US": "Winter collection",
                      "fr_FR": "Collection hiver"
                    },
                    "values": {
                      "description|96b88bf4-c2b7-4b64-a1f9-5d4876c02c26|ecommerce|en_US": {
                        "data": "<p>Winter collection description</p>\n",
                        "type": "textarea",
                        "channel": "ecommerce",
                        "locale": "en_US",
                        "attribute_code": "description|96b88bf4-c2b7-4b64-a1f9-5d4876c02c26"
                      }
                    }
                  },
                  "x-examples": {
                    "x-example-1": "{\"code\":\"spring_collection\",\"parent\":null}",
                    "x-example-2": "{\"code\":\"woman\",\"parent\":\"spring_collectionn\"}",
                    "x-example-3": "{\"code\":\"man\",\"parent\":\"spring_collection\"}"
                  }
                }
              }
            },
            "required": false
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "line": {
                        "type": "integer",
                        "description": "Line number"
                      },
                      "identifier": {
                        "type": "string",
                        "description": "Resource identifier, only filled when the resource is a product"
                      },
                      "code": {
                        "type": "string",
                        "description": "Resource code, only filled when the resource is not a product"
                      },
                      "status_code": {
                        "type": "integer",
                        "description": "HTTP status code, see <a href=\"/documentation/responses.html#client-errors\">Client errors</a> to understand the meaning of each code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "x-example-1": {
                  "example": "{\"line\":1,\"code\":\"spring_collection\",\"status_code\":201}"
                },
                "x-example-2": {
                  "example": "{\"line\":2,\"code\":\"woman\",\"status_code\":422,\"message\":\"Category \"spring_collectionn\" does not exist.\"}"
                },
                "x-example-3": {
                  "example": "{\"line\":3,\"code\":\"man\",\"status_code\":204}"
                }
              },
              "x-details": "Returns a plain text response whose lines are JSON containing the status of each update or creation",
              "x-no-entity": true
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "413": {
              "description": "Request Entity Too Large",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 413
                },
                "message": {
                  "example": "Too many resources to process, 100 is the maximum allowed."
                }
              },
              "x-details": "There are too many resources to process (max 100) or the line of JSON is too long (max 1 000 000 characters)"
            },
            "415": {
              "description": "Unsupported Media type",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 415
                },
                "message": {
                  "example": "`xxx’ in `Content-Type’ header is not valid.  Only `application/vnd.akeneo.collection+json’ is allowed."
                }
              },
              "x-details": "The `Content-Type` header has to be `application/vnd.akeneo.collection+json`"
            }
          },
          "x-versions": [
            "1.7",
            "2.x",
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-body-by-line": "Contains several lines, each line is a category in JSON standard format",
          "x-codegen-request-body-name": "body"
        }
      },
      "/api/rest/v1/categories/{code}": {
        "get": {
          "tags": [
            "Category"
          ],
          "summary": "Get a category",
          "description": "This endpoint allows you to get the information about a given category.",
          "operationId": "get_categories__code_",
          "parameters": [
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "with_position",
              "in": "query",
              "description": "Return information about category position into its category tree (only available since the 7.0 version)",
              "schema": {
                "type": "boolean",
                "x-from-version": "7.0"
              },
              "x-from-version": "7.0"
            },
            {
              "name": "with_enriched_attributes",
              "in": "query",
              "description": "Return attribute values of the category (only available on SaaS platforms) <strong>[COMING SOON]<strong>",
              "schema": {
                "type": "boolean",
                "x-from-version": "SaaS"
              },
              "x-from-version": "SaaS"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "required": [
                      "code"
                    ],
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Category code",
                        "x-immutable": true
                      },
                      "parent": {
                        "type": "string",
                        "description": "Category code of the parent's category",
                        "default": "null",
                        "x-validation-rules": "&bull; It is either equal to `null` or to an existing category code. &#10;&bull; If equal to an existing category code, it cannot reference itself."
                      },
                      "updated": {
                        "type": "string",
                        "description": "Date of the last update",
                        "format": "dateTime",
                        "x-read-only": true
                      },
                      "position": {
                        "type": "integer",
                        "description": "Position of the category in its level, start from 1 (only available since the 7.0 version and when query parameter \"with_position\" is set to \"true\")",
                        "x-read-only": true
                      },
                      "labels": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "Category labels for each locale",
                        "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                      },
                      "values": {
                        "type": "object",
                        "properties": {
                          "additionalProperties|attributeUuid|channelCode|localeCode": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "data": {
                                  "type": "object",
                                  "properties": {},
                                  "description": "Attribute value"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The attribute type"
                                },
                                "locale": {
                                  "type": "string",
                                  "description": "<a href='api-reference.html#Locale'>Locale</a> code of the attribute value"
                                },
                                "channel": {
                                  "type": "string",
                                  "description": "<a href='api-reference.html#Channel'>Channel</a> code of the attribute value"
                                },
                                "attribute_code": {
                                  "type": "string",
                                  "description": "The attribute code with its uuid (additionalProperties|attributeUuid)"
                                }
                              }
                            }
                          }
                        },
                        "description": "Attribute values",
                        "x-read-only": true
                      }
                    },
                    "example": {
                      "code": "winter_collection",
                      "updated": "2021-05-22T12:48:00+02:00",
                      "position": 1,
                      "labels": {
                        "en_US": "Winter collection",
                        "fr_FR": "Collection hiver"
                      },
                      "values": {
                        "description|96b88bf4-c2b7-4b64-a1f9-5d4876c02c26|ecommerce|en_US": {
                          "data": "<p>Winter collection description</p>\n",
                          "type": "textarea",
                          "channel": "ecommerce",
                          "locale": "en_US",
                          "attribute_code": "description|96b88bf4-c2b7-4b64-a1f9-5d4876c02c26"
                        }
                      }
                    }
                  }
                }
              },
              "x-details": "Returns the content of the category in JSON standard format"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "404": {
              "description": "Resource not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 404
                },
                "message": {
                  "example": "Resource `my_resource_code` does not exist."
                }
              },
              "x-details": "The resource code given in the URI does not correspond to any existing PIM resource"
            },
            "406": {
              "description": "Not Acceptable",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 406
                },
                "message": {
                  "example": "`xxx’ in `Accept` header is not valid. Only `application/json` is allowed."
                }
              },
              "x-details": "The `Accept` header is not `application/json` but it should"
            }
          },
          "x-versions": [
            "1.7",
            "2.x",
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ]
        },
        "patch": {
          "tags": [
            "Category"
          ],
          "summary": "Update/create a category",
          "description": "This endpoint allows you to update a given category. Know more about <a href=\"/documentation/update.html#update-behavior\">Update behavior</a>. Note that if no category exists for the given code, it creates it.",
          "operationId": "patch_categories__code_",
          "parameters": [
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "code"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Category code",
                      "x-immutable": true
                    },
                    "parent": {
                      "type": "string",
                      "description": "Category code of the parent's category",
                      "default": "null",
                      "x-validation-rules": "&bull; It is either equal to `null` or to an existing category code. &#10;&bull; If equal to an existing category code, it cannot reference itself."
                    },
                    "updated": {
                      "type": "string",
                      "description": "Date of the last update",
                      "format": "dateTime",
                      "x-read-only": true
                    },
                    "position": {
                      "type": "integer",
                      "description": "Position of the category in its level, start from 1 (only available since the 7.0 version and when query parameter \"with_position\" is set to \"true\")",
                      "x-read-only": true
                    },
                    "labels": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Category labels for each locale",
                      "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                    },
                    "values": {
                      "type": "object",
                      "properties": {
                        "additionalProperties|attributeUuid|channelCode|localeCode": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "object",
                                "properties": {},
                                "description": "Attribute value"
                              },
                              "type": {
                                "type": "string",
                                "description": "The attribute type"
                              },
                              "locale": {
                                "type": "string",
                                "description": "<a href='api-reference.html#Locale'>Locale</a> code of the attribute value"
                              },
                              "channel": {
                                "type": "string",
                                "description": "<a href='api-reference.html#Channel'>Channel</a> code of the attribute value"
                              },
                              "attribute_code": {
                                "type": "string",
                                "description": "The attribute code with its uuid (additionalProperties|attributeUuid)"
                              }
                            }
                          }
                        }
                      },
                      "description": "Attribute values",
                      "x-read-only": true
                    }
                  },
                  "example": {
                    "code": "winter_collection",
                    "updated": "2021-05-22T12:48:00+02:00",
                    "position": 1,
                    "labels": {
                      "en_US": "Winter collection",
                      "fr_FR": "Collection hiver"
                    },
                    "values": {
                      "description|96b88bf4-c2b7-4b64-a1f9-5d4876c02c26|ecommerce|en_US": {
                        "data": "<p>Winter collection description</p>\n",
                        "type": "textarea",
                        "channel": "ecommerce",
                        "locale": "en_US",
                        "attribute_code": "description|96b88bf4-c2b7-4b64-a1f9-5d4876c02c26"
                      }
                    }
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "Created",
              "headers": {
                "Location": {
                  "description": "URI of the created resource",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {},
              "x-details": "Means that the creation was successful"
            },
            "204": {
              "description": "No content to return",
              "headers": {
                "Location": {
                  "description": "URI of the updated resource",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {},
              "x-details": "Means that the update was successful"
            },
            "400": {
              "description": "Bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 400
                },
                "message": {
                  "example": "Invalid JSON message received"
                }
              },
              "x-details": "Can be caused by a malformed JSON request"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "415": {
              "description": "Unsupported Media type",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 415
                },
                "message": {
                  "example": "`xxx’ in `Content-Type’ header is not valid.  Only `application/json’ is allowed."
                }
              },
              "x-details": "The `Content-Type` header has to be `application/json`"
            },
            "422": {
              "description": "Unprocessable entity",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 422
                },
                "message": {
                  "example": "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
                },
                "_links": {
                  "example": {
                    "documentation": {
                      "href": "http://api.akeneo.com/api-reference.html"
                    }
                  }
                }
              },
              "x-details": "The validation of the entity given in the body of the request failed"
            }
          },
          "x-versions": [
            "1.7",
            "2.x",
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-codegen-request-body-name": "body"
        }
      },
      "/api/rest/v1/category-media-files/{code}/download": {
        "get": {
          "tags": [
            "Category"
          ],
          "summary": "Download a category media file [COMING SOON]",
          "description": "This endpoint allows you to download a given media file that is used as an attribute value of a enriched category.",
          "operationId": "get_category_media_files__code__download",
          "parameters": [
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {},
              "x-details": "Returns the binary of the media file",
              "x-content-type": "Mime-type of the media file"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "404": {
              "description": "Resource not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 404
                },
                "message": {
                  "example": "Resource `my_resource_code` does not exist."
                }
              },
              "x-details": "The resource code given in the URI does not correspond to any existing PIM resource"
            }
          },
          "x-content-type": "Mime-type of the media file",
          "x-versions": [
            "SaaS"
          ]
        }
      },
      "/api/rest/v1/currencies": {
        "get": {
          "tags": [
            "Currency"
          ],
          "summary": "Get a list of currencies",
          "description": "This endpoint allows you to get a list of currencies. Currencies are paginated and sorted by code.",
          "operationId": "currencies_get_list",
          "parameters": [
            {
              "name": "page",
              "in": "query",
              "description": "Number of the page to retrieve when using the `page` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html#pagination\">Pagination</a> section",
              "schema": {
                "type": "integer",
                "default": 1
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
              "schema": {
                "maximum": 100,
                "minimum": 1,
                "type": "integer",
                "default": 10
              }
            },
            {
              "name": "with_count",
              "in": "query",
              "description": "Return the count of items in the response. Be carefull with that, on a big catalog, it can decrease performance in a significative way",
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Return currencies paginated",
              "content": {
                "application/json": {
                  "schema": {
                    "title": "Currencies",
                    "type": "object",
                    "properties": {
                      "_embedded": {
                        "type": "object",
                        "properties": {
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "_links": {
                                      "type": "object",
                                      "properties": {
                                        "self": {
                                          "type": "object",
                                          "properties": {
                                            "href": {
                                              "type": "string",
                                              "description": "URI of the resource"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "required": [
                                    "code"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "string",
                                      "description": "Currency code",
                                      "x-immutable": true
                                    },
                                    "enabled": {
                                      "type": "boolean",
                                      "description": "Whether the currency is enabled"
                                    }
                                  },
                                  "example": {
                                    "code": "EUR",
                                    "enabled": true
                                  }
                                }
                              ]
                            }
                          }
                        }
                      },
                      "_links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the current page of resources"
                              }
                            }
                          },
                          "first": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the first page of resources"
                              }
                            }
                          },
                          "previous": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the previous page of resources"
                              }
                            }
                          },
                          "next": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the next page of resources"
                              }
                            }
                          }
                        }
                      },
                      "current_page": {
                        "type": "integer",
                        "description": "Current page number"
                      }
                    }
                  }
                },
                "_links": {
                  "example": {
                    "self": {
                      "href": "https://demo.akeneo.com/api/rest/v1/currencies?page=1&limit=3"
                    },
                    "first": {
                      "href": "https://demo.akeneo.com/api/rest/v1/currencies?page=1&limit=3"
                    }
                  }
                },
                "current_page": {
                  "example": 1
                },
                "_embedded": {
                  "example": {
                    "items": [
                      {
                        "_links": {
                          "self": {
                            "href": "https://demo.akeneo.com/api/rest/v1/currencies/ADP"
                          }
                        },
                        "code": "ADP",
                        "enabled": true
                      },
                      {
                        "_links": {
                          "self": {
                            "href": "https://demo.akeneo.com/api/rest/v1/currencies/AED"
                          }
                        },
                        "code": "AED",
                        "enabled": true
                      },
                      {
                        "_links": {
                          "self": {
                            "href": "https://demo.akeneo.com/api/rest/v1/currencies/AFA"
                          }
                        },
                        "code": "AFA",
                        "enabled": false
                      }
                    ]
                  }
                }
              }
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "406": {
              "description": "Not Acceptable",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 406
                },
                "message": {
                  "example": "`xxx’ in `Accept` header is not valid. Only `application/json` is allowed."
                }
              },
              "x-details": "The `Accept` header is not `application/json` but it should"
            }
          },
          "x-versions": [
            "2.x",
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ]
        }
      },
      "/api/rest/v1/currencies/{code}": {
        "get": {
          "tags": [
            "Currency"
          ],
          "summary": "Get a currency",
          "description": "This endpoint allows you to get the information about a given currency.",
          "operationId": "currencies_get",
          "parameters": [
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "required": [
                      "code"
                    ],
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Currency code",
                        "x-immutable": true
                      },
                      "enabled": {
                        "type": "boolean",
                        "description": "Whether the currency is enabled"
                      }
                    },
                    "example": {
                      "code": "EUR",
                      "enabled": true
                    }
                  }
                }
              },
              "x-details": "Returns the content of the currency in JSON standard format"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "404": {
              "description": "Resource not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 404
                },
                "message": {
                  "example": "Resource `my_resource_code` does not exist."
                }
              },
              "x-details": "The resource code given in the URI does not correspond to any existing PIM resource"
            },
            "406": {
              "description": "Not Acceptable",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 406
                },
                "message": {
                  "example": "`xxx’ in `Accept` header is not valid. Only `application/json` is allowed."
                }
              },
              "x-details": "The `Accept` header is not `application/json` but it should"
            }
          },
          "x-versions": [
            "2.x",
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ]
        }
      },
      "/api/rest/v1/measure-families": {
        "get": {
          "tags": [
            "Measure family"
          ],
          "summary": "Get list of measure familiy",
          "description": "This endpoint allows you to get a list of measure families. Measure families are paginated and sorted by code.",
          "operationId": "measure_families_get_list",
          "responses": {
            "200": {
              "description": "Return measure families paginated",
              "content": {
                "application/json": {
                  "schema": {
                    "title": "Measure Families",
                    "type": "object",
                    "properties": {
                      "_embedded": {
                        "type": "object",
                        "properties": {
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "_links": {
                                      "type": "object",
                                      "properties": {
                                        "self": {
                                          "type": "object",
                                          "properties": {
                                            "href": {
                                              "type": "string",
                                              "description": "URI of the resource"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "required": [
                                    "code"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "string",
                                      "description": "Measure family code",
                                      "x-immutable": true
                                    },
                                    "standard": {
                                      "type": "string",
                                      "description": "Measure family standard",
                                      "x-immutable": true
                                    },
                                    "units": {
                                      "type": "array",
                                      "description": "Family units",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "code": {
                                            "type": "string",
                                            "description": "Measure code",
                                            "x-immutable": true
                                          },
                                          "convert": {
                                            "type": "object",
                                            "properties": {},
                                            "description": "Mathematic operation to convert the unit into the standard unit"
                                          },
                                          "symbol": {
                                            "type": "string",
                                            "description": "Measure symbol",
                                            "x-immutable": true
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "example": {
                                    "code": "Area",
                                    "standard": "SQUARE_METER",
                                    "units": [
                                      {
                                        "code": "SQUARE_MILLIMETER",
                                        "convert": {
                                          "mul": "0.001"
                                        },
                                        "symbol": "mm²"
                                      },
                                      {
                                        "code": "SQUARE_CENTIMETER",
                                        "convert": {
                                          "mul": "0.001"
                                        },
                                        "symbol": "cm²"
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        }
                      },
                      "_links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the current page of resources"
                              }
                            }
                          },
                          "first": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the first page of resources"
                              }
                            }
                          },
                          "previous": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the previous page of resources"
                              }
                            }
                          },
                          "next": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the next page of resources"
                              }
                            }
                          }
                        }
                      },
                      "current_page": {
                        "type": "integer",
                        "description": "Current page number"
                      }
                    }
                  }
                },
                "_links": {
                  "example": {
                    "self": {
                      "href": "https://demo.akeneo.com/api/rest/v1/measure-families?page=1&limit=1"
                    },
                    "first": {
                      "href": "https://demo.akeneo.com/api/rest/v1/measure-families?page=1&limit=1"
                    }
                  }
                },
                "current_page": {
                  "example": 1
                },
                "_embedded": {
                  "example": {
                    "items": [
                      {
                        "_links": {
                          "self": {
                            "href": "https://demo.akeneo.com/api/rest/v1/measure-families/Area"
                          }
                        },
                        "code": "Area",
                        "standard": "SQUARE_METER",
                        "units": [
                          {
                            "code": "SQUARE_MILLIMETER",
                            "convert": {
                              "mul": "0.000001"
                            },
                            "symbol": "mm²"
                          },
                          {
                            "code": "SQUARE_CENTIMETER",
                            "convert": {
                              "mul": "0.0001"
                            },
                            "symbol": "cm²"
                          },
                          {
                            "code": "SQUARE_DECIMETER",
                            "convert": {
                              "mul": "0.01"
                            },
                            "symbol": "dm²"
                          },
                          {
                            "code": "SQUARE_METER",
                            "convert": {
                              "mul": "1"
                            },
                            "symbol": "m²"
                          },
                          {
                            "code": "CENTIARE",
                            "convert": {
                              "mul": "1"
                            },
                            "symbol": "ca"
                          },
                          {
                            "code": "SQUARE_DEKAMETER",
                            "convert": {
                              "mul": "100"
                            },
                            "symbol": "dam²"
                          },
                          {
                            "code": "ARE",
                            "convert": {
                              "mul": "100"
                            },
                            "symbol": "a"
                          },
                          {
                            "code": "SQUARE_HECTOMETER",
                            "convert": {
                              "mul": "10000"
                            },
                            "symbol": "hm²"
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "406": {
              "description": "Not Acceptable",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 406
                },
                "message": {
                  "example": "`xxx’ in `Accept` header is not valid. Only `application/json` is allowed."
                }
              },
              "x-details": "The `Accept` header is not `application/json` but it should"
            }
          },
          "x-versions": [
            "2.x",
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ]
        }
      },
      "/api/rest/v1/measure-families/{code}": {
        "get": {
          "tags": [
            "Measure family"
          ],
          "summary": "Get a measure family",
          "description": "This endpoint allows you to get the information about a given measure family.",
          "operationId": "measure_families_get",
          "parameters": [
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "required": [
                      "code"
                    ],
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Measure family code",
                        "x-immutable": true
                      },
                      "standard": {
                        "type": "string",
                        "description": "Measure family standard",
                        "x-immutable": true
                      },
                      "units": {
                        "type": "array",
                        "description": "Family units",
                        "items": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "description": "Measure code",
                              "x-immutable": true
                            },
                            "convert": {
                              "type": "object",
                              "properties": {},
                              "description": "Mathematic operation to convert the unit into the standard unit"
                            },
                            "symbol": {
                              "type": "string",
                              "description": "Measure symbol",
                              "x-immutable": true
                            }
                          }
                        }
                      }
                    },
                    "example": {
                      "code": "Area",
                      "standard": "SQUARE_METER",
                      "units": [
                        {
                          "code": "SQUARE_MILLIMETER",
                          "convert": {
                            "mul": "0.001"
                          },
                          "symbol": "mm²"
                        },
                        {
                          "code": "SQUARE_CENTIMETER",
                          "convert": {
                            "mul": "0.001"
                          },
                          "symbol": "cm²"
                        }
                      ]
                    }
                  }
                }
              },
              "x-details": "Returns the content of the measure family in JSON standard format"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "404": {
              "description": "Resource not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 404
                },
                "message": {
                  "example": "Resource `my_resource_code` does not exist."
                }
              },
              "x-details": "The resource code given in the URI does not correspond to any existing PIM resource"
            },
            "406": {
              "description": "Not Acceptable",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 406
                },
                "message": {
                  "example": "`xxx’ in `Accept` header is not valid. Only `application/json` is allowed."
                }
              },
              "x-details": "The `Accept` header is not `application/json` but it should"
            }
          },
          "x-versions": [
            "2.x",
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ]
        }
      },
      "/api/rest/v1/measurement-families": {
        "get": {
          "tags": [
            "Measurement family"
          ],
          "summary": "Get list of measurement families",
          "description": "This endpoint allows you to get a list of measurement families.",
          "operationId": "measurement_families_get_list",
          "responses": {
            "200": {
              "description": "Return the measurement families",
              "content": {
                "application/json": {
                  "schema": {
                    "required": [
                      "code",
                      "standard_unit_code",
                      "units"
                    ],
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Measurement family code",
                        "x-immutable": true
                      },
                      "labels": {
                        "type": "object",
                        "properties": {
                          "localeCode": {
                            "type": "string",
                            "description": "Measurement family label for the locale `localeCode`"
                          }
                        },
                        "description": "Measurement family labels for each locale",
                        "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                      },
                      "standard_unit_code": {
                        "type": "string",
                        "description": "Unit code used as the standard unit for this measurement family",
                        "x-validation-rules": "The unit code exists in the list of the property `units`",
                        "x-immutable": true
                      },
                      "units": {
                        "type": "object",
                        "properties": {
                          "unitCode": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string",
                                "description": "Measurement unit code. More details <a href='/concepts/target-market-settings.html#focus-on-the-units'>here</a>.",
                                "x-immutable": true
                              },
                              "labels": {
                                "type": "object",
                                "properties": {
                                  "localeCode": {
                                    "type": "string",
                                    "description": "Unit label for the locale `localeCode`"
                                  }
                                },
                                "description": "Unit labels for each locale. More details <a href='/concepts/target-market-settings.html#focus-on-the-units'>here</a>.",
                                "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                              },
                              "convert_from_standard": {
                                "type": "array",
                                "description": "Calculation to convert the unit from the standard unit. More details <a href='/concepts/target-market-settings.html#focus-on-the-units'>here</a>.",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "operator": {
                                      "type": "string",
                                      "description": "Operator for a conversion operation to convert the unit in the standard unit",
                                      "enum": [
                                        "mul",
                                        "div",
                                        "add",
                                        "sub"
                                      ],
                                      "x-validation-rules": "The operator is one of the following values"
                                    },
                                    "value": {
                                      "type": "string",
                                      "description": "Value for a conversion operation to convert the unit in the standard unit"
                                    }
                                  }
                                },
                                "x-validation-rules": "&bull; The conversion operations can't be updated when a product attribute is linked to this measurement family &#10;&bull; At least one conversion operation per unit is required"
                              },
                              "symbol": {
                                "type": "string",
                                "description": "Measurement unit symbol. More details <a href='/concepts/target-market-settings.html#focus-on-the-units'>here</a>."
                              }
                            }
                          }
                        },
                        "description": "Measurement units for this family with their conversion operations. More details <a href='/concepts/target-market-settings.html#focus-on-the-units'>here</a>.",
                        "x-validation-rules": "A unit can't be added when a product attribute is linked to this measurement family"
                      }
                    },
                    "example": {
                      "code": "AREA",
                      "labels": {
                        "en_US": "Area",
                        "fr_FR": "Surface"
                      },
                      "standard_unit_code": "SQUARE_METER",
                      "units": {
                        "SQUARE_MILLIMETER": {
                          "code": "SQUARE_MILLIMETER",
                          "labels": {
                            "en_US": "Square millimeter",
                            "fr_FR": "Millimètre carré"
                          },
                          "convert_from_standard": [
                            {
                              "operator": "mul",
                              "value": "0.000001"
                            }
                          ],
                          "symbol": "mm²"
                        },
                        "SQUARE_CENTIMETER": {
                          "code": "SQUARE_CENTIMETER",
                          "labels": {
                            "en_US": "Square centimeter",
                            "fr_FR": "Centimètre carré"
                          },
                          "convert_from_standard": [
                            {
                              "operator": "mul",
                              "value": "0.0001"
                            }
                          ],
                          "symbol": "cm²"
                        },
                        "SQUARE_METER": {
                          "code": "SQUARE_METER",
                          "labels": {
                            "en_US": "Square meter",
                            "fr_FR": "Mètre carré"
                          },
                          "convert_from_standard": [
                            {
                              "operator": "mul",
                              "value": "1"
                            }
                          ],
                          "symbol": "m²"
                        }
                      }
                    }
                  }
                }
              },
              "x-no-entity": true
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "406": {
              "description": "Not Acceptable",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 406
                },
                "message": {
                  "example": "`xxx’ in `Accept` header is not valid. Only `application/json` is allowed."
                }
              },
              "x-details": "The `Accept` header is not `application/json` but it should"
            }
          },
          "x-versions": [
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ]
        },
        "patch": {
          "tags": [
            "Measurement family"
          ],
          "summary": "Update/create several measurement families",
          "description": "This endpoint allows you to update and/or create several measurement families at once.",
          "operationId": "patch_measurement_families",
          "requestBody": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "example": [
                    {
                      "code": "AREA",
                      "labels": {
                        "en_US": "Area",
                        "fr_FR": "Surface"
                      },
                      "standard_unit_code": "SQUARE_METER",
                      "units": {
                        "SQUARE_MILLIMETER": {
                          "code": "SQUARE_MILLIMETER",
                          "labels": {
                            "en_US": "Square millimeter",
                            "fr_FR": "Millimètre carré"
                          },
                          "convert_from_standard": [
                            {
                              "operator": "mul",
                              "value": "0.000001"
                            }
                          ],
                          "symbol": "mm²"
                        },
                        "SQUARE_CENTIMETER": {
                          "code": "SQUARE_CENTIMETER",
                          "labels": {
                            "en_US": "Square centimeter",
                            "fr_FR": "Centimètre carré"
                          },
                          "convert_from_standard": [
                            {
                              "operator": "mul",
                              "value": "0.0001"
                            }
                          ],
                          "symbol": "cm²"
                        },
                        "SQUARE_METER": {
                          "code": "SQUARE_METER",
                          "labels": {
                            "en_US": "Square meter",
                            "fr_FR": "Mètre carré"
                          },
                          "convert_from_standard": [
                            {
                              "operator": "mul",
                              "value": "1"
                            }
                          ],
                          "symbol": "m²"
                        }
                      }
                    }
                  ],
                  "items": {
                    "required": [
                      "code",
                      "standard_unit_code",
                      "units"
                    ],
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Measurement family code",
                        "x-immutable": true
                      },
                      "labels": {
                        "type": "object",
                        "properties": {
                          "localeCode": {
                            "type": "string",
                            "description": "Measurement family label for the locale `localeCode`"
                          }
                        },
                        "description": "Measurement family labels for each locale",
                        "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                      },
                      "standard_unit_code": {
                        "type": "string",
                        "description": "Unit code used as the standard unit for this measurement family",
                        "x-validation-rules": "The unit code exists in the list of the property `units`",
                        "x-immutable": true
                      },
                      "units": {
                        "type": "object",
                        "properties": {
                          "unitCode": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string",
                                "description": "Measurement unit code. More details <a href='/concepts/target-market-settings.html#focus-on-the-units'>here</a>.",
                                "x-immutable": true
                              },
                              "labels": {
                                "type": "object",
                                "properties": {
                                  "localeCode": {
                                    "type": "string",
                                    "description": "Unit label for the locale `localeCode`"
                                  }
                                },
                                "description": "Unit labels for each locale. More details <a href='/concepts/target-market-settings.html#focus-on-the-units'>here</a>.",
                                "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                              },
                              "convert_from_standard": {
                                "type": "array",
                                "description": "Calculation to convert the unit from the standard unit. More details <a href='/concepts/target-market-settings.html#focus-on-the-units'>here</a>.",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "operator": {
                                      "type": "string",
                                      "description": "Operator for a conversion operation to convert the unit in the standard unit",
                                      "enum": [
                                        "mul",
                                        "div",
                                        "add",
                                        "sub"
                                      ],
                                      "x-validation-rules": "The operator is one of the following values"
                                    },
                                    "value": {
                                      "type": "string",
                                      "description": "Value for a conversion operation to convert the unit in the standard unit"
                                    }
                                  }
                                },
                                "x-validation-rules": "&bull; The conversion operations can't be updated when a product attribute is linked to this measurement family &#10;&bull; At least one conversion operation per unit is required"
                              },
                              "symbol": {
                                "type": "string",
                                "description": "Measurement unit symbol. More details <a href='/concepts/target-market-settings.html#focus-on-the-units'>here</a>."
                              }
                            }
                          }
                        },
                        "description": "Measurement units for this family with their conversion operations. More details <a href='/concepts/target-market-settings.html#focus-on-the-units'>here</a>.",
                        "x-validation-rules": "A unit can't be added when a product attribute is linked to this measurement family"
                      }
                    },
                    "example": {
                      "code": "AREA",
                      "labels": {
                        "en_US": "Area",
                        "fr_FR": "Surface"
                      },
                      "standard_unit_code": "SQUARE_METER",
                      "units": {
                        "SQUARE_MILLIMETER": {
                          "code": "SQUARE_MILLIMETER",
                          "labels": {
                            "en_US": "Square millimeter",
                            "fr_FR": "Millimètre carré"
                          },
                          "convert_from_standard": [
                            {
                              "operator": "mul",
                              "value": "0.000001"
                            }
                          ],
                          "symbol": "mm²"
                        },
                        "SQUARE_CENTIMETER": {
                          "code": "SQUARE_CENTIMETER",
                          "labels": {
                            "en_US": "Square centimeter",
                            "fr_FR": "Centimètre carré"
                          },
                          "convert_from_standard": [
                            {
                              "operator": "mul",
                              "value": "0.0001"
                            }
                          ],
                          "symbol": "cm²"
                        },
                        "SQUARE_METER": {
                          "code": "SQUARE_METER",
                          "labels": {
                            "en_US": "Square meter",
                            "fr_FR": "Mètre carré"
                          },
                          "convert_from_standard": [
                            {
                              "operator": "mul",
                              "value": "1"
                            }
                          ],
                          "symbol": "m²"
                        }
                      }
                    }
                  }
                }
              }
            },
            "required": false
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Resource code"
                        },
                        "status_code": {
                          "type": "integer",
                          "description": "HTTP status code, see <a href=\"/documentation/responses.html#client-errors\">Client errors</a> to understand the meaning of each code"
                        },
                        "message": {
                          "type": "string",
                          "description": "Message explaining the error"
                        },
                        "errors": {
                          "type": "array",
                          "description": "List of errors",
                          "items": {
                            "type": "object",
                            "properties": {
                              "property": {
                                "type": "string"
                              },
                              "message": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "x-details": "Returns a JSON containing the status of each update or creation",
              "x-no-entity": true
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "413": {
              "description": "Request Entity Too Large",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 413
                },
                "message": {
                  "example": "Too many resources to process, 100 is the maximum allowed."
                }
              },
              "x-details": "There are too many resources to process (max 100) or the line of JSON is too long (max 1 000 000 characters)"
            },
            "415": {
              "description": "Unsupported Media type",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 415
                },
                "message": {
                  "example": "`xxx’ in `Content-Type’ header is not valid.  Only `application/vnd.akeneo.collection+json’ is allowed."
                }
              },
              "x-details": "The `Content-Type` header has to be `application/vnd.akeneo.collection+json`"
            }
          },
          "x-versions": [
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-codegen-request-body-name": "body"
        }
      },
      "/api/rest/v1/reference-entities": {
        "get": {
          "tags": [
            "Reference entity"
          ],
          "summary": "Get list of reference entities",
          "description": "This endpoint allows you to get a list of reference entities. Reference entities are paginated.",
          "operationId": "get_reference_entities",
          "parameters": [
            {
              "name": "search_after",
              "in": "query",
              "description": "Cursor when using the `search_after` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
              "schema": {
                "type": "string",
                "default": "cursor to the first page"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Return reference entities paginated",
              "content": {
                "application/json": {
                  "schema": {
                    "title": "Reference Entities",
                    "type": "object",
                    "properties": {
                      "_embedded": {
                        "type": "object",
                        "properties": {
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "_links": {
                                      "type": "object",
                                      "properties": {
                                        "self": {
                                          "type": "object",
                                          "properties": {
                                            "href": {
                                              "type": "string",
                                              "description": "URI of the resource"
                                            }
                                          }
                                        },
                                        "image_download": {
                                          "type": "object",
                                          "properties": {
                                            "href": {
                                              "type": "string",
                                              "description": "URI to download the binaries of the reference entity image file"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "required": [
                                    "code"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "string",
                                      "description": "Reference entity code",
                                      "x-immutable": true
                                    },
                                    "labels": {
                                      "type": "object",
                                      "properties": {
                                        "localeCode": {
                                          "type": "string",
                                          "description": "Reference entity label for the locale `localeCode`"
                                        }
                                      },
                                      "description": "Reference entity labels for each locale",
                                      "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                                    },
                                    "image": {
                                      "type": "string",
                                      "description": "Code of the reference entity image",
                                      "default": "null"
                                    }
                                  },
                                  "example": {
                                    "code": "brands",
                                    "labels": {
                                      "en_US": "Brands",
                                      "fr_FR": "Marques"
                                    },
                                    "image": "0/2/d/6/54d81dc888ba1501a8g765f3ab5797569f3bv756c_ref_img.png"
                                  }
                                }
                              ]
                            }
                          }
                        }
                      },
                      "_links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the current page of resources"
                              }
                            }
                          },
                          "first": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the first page of resources"
                              }
                            }
                          },
                          "next": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the next page of resources"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "_links": {
                  "example": {
                    "self": {
                      "href": "https://demo.akeneo.com/api/rest/v1/reference-entities"
                    },
                    "first": {
                      "href": "https://demo.akeneo.com/api/rest/v1/reference-entities"
                    },
                    "next": {
                      "href": "https://demo.akeneo.com/api/rest/v1/reference-entities?search_after=2x055w%3D%3D"
                    }
                  }
                },
                "_embedded": {
                  "example": {
                    "items": [
                      {
                        "_links": {
                          "self": {
                            "href": "https://demo.akeneo.com/api/rest/v1/reference-entities/brands"
                          },
                          "image_download": {
                            "href": "https://demo.akeneo.com/api/rest/v1/reference-entities-media-files/0/2/d/6/54d81dc888ba1501a8g765f3ab5797569f3bv756c_ref_img.png"
                          }
                        },
                        "code": "brands",
                        "labels": {
                          "en_US": "Brands",
                          "fr_FR": "Marque"
                        },
                        "image": "0/2/d/6/54d81dc888ba1501a8g765f3ab5797569f3bv756c_ref_img.png"
                      },
                      {
                        "_links": {
                          "self": {
                            "href": "https://demo.akeneo.com/api/rest/v1/reference-entities/designers"
                          }
                        },
                        "code": "designers",
                        "labels": {
                          "en_US": "Designers",
                          "fr_FR": "Designers"
                        }
                      },
                      {
                        "_links": {
                          "self": {
                            "href": "https://demo.akeneo.com/api/rest/v1/reference-entities/colors"
                          }
                        },
                        "code": "colors",
                        "labels": {
                          "en_US": "Colors",
                          "fr_FR": "Couleurs"
                        }
                      }
                    ]
                  }
                }
              }
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "406": {
              "description": "Not Acceptable",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 406
                },
                "message": {
                  "example": "`xxx’ in `Accept` header is not valid. Only `application/json` is allowed."
                }
              },
              "x-details": "The `Accept` header is not `application/json` but it should"
            }
          },
          "x-versions": [
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-ee": true
        }
      },
      "/api/rest/v1/reference-entities/{code}": {
        "get": {
          "tags": [
            "Reference entity"
          ],
          "summary": "Get a reference entity",
          "description": "This endpoint allows you to get the information about a given reference entity.",
          "operationId": "get_reference_entities__code_",
          "parameters": [
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "required": [
                      "code"
                    ],
                    "type": "object",
                    "properties": {
                      "_links": {
                        "type": "object",
                        "properties": {
                          "image_download": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI to download the binaries of the reference entity image file"
                              }
                            }
                          }
                        },
                        "x-read-only": true
                      },
                      "code": {
                        "type": "string",
                        "description": "Reference entity code",
                        "x-immutable": true
                      },
                      "image": {
                        "type": "string",
                        "description": "Code of the reference entity image",
                        "default": "null"
                      },
                      "labels": {
                        "type": "object",
                        "properties": {
                          "localeCode": {
                            "type": "string",
                            "description": "Reference entity label for the locale `localeCode`"
                          }
                        },
                        "description": "Reference entity labels for each locale",
                        "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                      }
                    },
                    "example": {
                      "_links": {
                        "image_download": {
                          "href": "https://demo.akeneo.com/api/rest/v1/reference-entities-media-files/0/2/d/6/54d81dc888ba1501a8g765f3ab5797569f3bv756c_ref_img.png"
                        }
                      },
                      "code": "brands",
                      "labels": {
                        "en_US": "Brands",
                        "fr_FR": "Marques"
                      },
                      "image": "0/2/d/6/54d81dc888ba1501a8g765f3ab5797569f3bv756c_ref_img.png"
                    }
                  }
                }
              },
              "x-details": "Returns the content of the reference entity in JSON format."
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "404": {
              "description": "Resource not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 404
                },
                "message": {
                  "example": "Resource `my_resource_code` does not exist."
                }
              },
              "x-details": "The resource code given in the URI does not correspond to any existing PIM resource"
            },
            "406": {
              "description": "Not Acceptable",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 406
                },
                "message": {
                  "example": "`xxx’ in `Accept` header is not valid. Only `application/json` is allowed."
                }
              },
              "x-details": "The `Accept` header is not `application/json` but it should"
            }
          },
          "x-versions": [
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-ee": true
        },
        "patch": {
          "tags": [
            "Reference entity"
          ],
          "summary": "Update/create a reference entity",
          "description": "This endpoint allows you to update a given reference entity. Note that if the reference entity does not already exist, it creates it.",
          "operationId": "patch_reference_entity__code_",
          "parameters": [
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "code"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Reference entity code",
                      "x-immutable": true
                    },
                    "labels": {
                      "type": "object",
                      "properties": {
                        "localeCode": {
                          "type": "string",
                          "description": "Reference entity label for the locale `localeCode`"
                        }
                      },
                      "description": "Reference entity labels for each locale",
                      "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                    },
                    "image": {
                      "type": "string",
                      "description": "Code of the reference entity image",
                      "default": "null"
                    }
                  },
                  "example": {
                    "code": "brands",
                    "labels": {
                      "en_US": "Brands",
                      "fr_FR": "Marques"
                    },
                    "image": "0/2/d/6/54d81dc888ba1501a8g765f3ab5797569f3bv756c_ref_img.png"
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "Created",
              "headers": {
                "Location": {
                  "description": "URI of the created resource",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {},
              "x-details": "Means that the creation was successful"
            },
            "204": {
              "description": "No content to return",
              "headers": {
                "Location": {
                  "description": "URI of the updated resource",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {},
              "x-details": "Means that the update was successful"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "415": {
              "description": "Unsupported Media type",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 415
                },
                "message": {
                  "example": "`xxx’ in `Content-Type’ header is not valid.  Only `application/json’ is allowed."
                }
              },
              "x-details": "The `Content-Type` header has to be `application/json`"
            },
            "422": {
              "description": "Unprocessable entity",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 422
                },
                "message": {
                  "example": "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
                },
                "_links": {
                  "example": {
                    "documentation": {
                      "href": "http://api.akeneo.com/api-reference.html"
                    }
                  }
                }
              },
              "x-details": "The validation of the entity given in the body of the request failed"
            }
          },
          "x-versions": [
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-ee": true,
          "x-codegen-request-body-name": "body"
        }
      },
      "/api/rest/v1/reference-entities/{reference_entity_code}/attributes": {
        "get": {
          "tags": [
            "Reference entity attribute"
          ],
          "summary": "Get the list of attributes of a given reference entity",
          "description": "This endpoint allows you to get the list of attributes of a given reference entity.",
          "operationId": "get_reference_entities__code__attributes",
          "parameters": [
            {
              "name": "reference_entity_code",
              "in": "path",
              "description": "Code of the reference entity",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Return the attributes of the given reference entity",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "required": [
                        "code",
                        "type"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Attribute code",
                          "x-immutable": true
                        },
                        "labels": {
                          "type": "object",
                          "properties": {
                            "localeCode": {
                              "type": "string",
                              "description": "Attribute label for the locale `localeCode`"
                            }
                          },
                          "description": "Attribute labels for each locale",
                          "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                        },
                        "type": {
                          "type": "string",
                          "description": "Attribute type. See <a href='/concepts/reference-entities.html#reference-entity-attribute'>type</a> section for more details.",
                          "enum": [
                            "text",
                            "image",
                            "number",
                            "single_option",
                            "multiple_options",
                            "reference_entity_single_link",
                            "reference_entity_multiple_links"
                          ],
                          "x-immutable": true
                        },
                        "value_per_locale": {
                          "type": "boolean",
                          "description": "Whether the attribute is localizable, i.e. can have one value by locale",
                          "default": false,
                          "x-immutable": true
                        },
                        "value_per_channel": {
                          "type": "boolean",
                          "description": "Whether the attribute is scopable, i.e. can have one value by channel",
                          "default": false,
                          "x-immutable": true
                        },
                        "is_required_for_completeness": {
                          "type": "boolean",
                          "description": "Whether the attribute should be part of the record's completeness calculation",
                          "default": false
                        },
                        "max_characters": {
                          "type": "integer",
                          "description": "Maximum number of characters allowed for the value of the attribute when the attribute type is `text`",
                          "x-warning": "Only for `text` attribute type"
                        },
                        "is_textarea": {
                          "type": "boolean",
                          "description": "Whether the UI should display a text area instead of a simple field when the attribute type is `text`",
                          "default": false,
                          "x-warning": "Only for `text` attribute type"
                        },
                        "is_rich_text_editor": {
                          "type": "boolean",
                          "description": "Whether the UI should display a rich text editor instead of a simple text area when the attribute type is `text`",
                          "x-validation-rules": "Required when the property `is_textarea` is equal to `true`",
                          "x-warning": "Only for `text` attribute type"
                        },
                        "validation_rule": {
                          "type": "string",
                          "description": "Validation rule type used to validate the attribute value when the attribute type is `text`",
                          "default": "none",
                          "enum": [
                            "email",
                            "url",
                            "regexp",
                            "none"
                          ],
                          "x-warning": "Only for `text` attribute type"
                        },
                        "validation_regexp": {
                          "type": "string",
                          "description": "Regexp expression used to validate the attribute value when the attribute type is `text`",
                          "default": "null",
                          "x-validation-rules": "Required when the property `validation_rule` is equal to `regexp`",
                          "x-warning": "Only for `text` attribute type"
                        },
                        "allowed_extensions": {
                          "type": "array",
                          "description": "Extensions allowed when the attribute type is `image`",
                          "items": {
                            "type": "string"
                          },
                          "x-warning": "Only for `image` attribute type"
                        },
                        "max_file_size": {
                          "type": "string",
                          "description": "Max file size in MB when the attribute type is `image`",
                          "default": "null",
                          "x-warning": "Only for `image` attribute type"
                        },
                        "reference_entity_code": {
                          "type": "string",
                          "description": "Code of the linked reference entity when the attribute type is `reference_entity_single_link` or `reference_entity_multiple_links`",
                          "default": "null",
                          "x-validation-rules": "Required when the attribute type is either `reference_entity_single_link` or `reference_entity_multiple_links`",
                          "x-immutable": true,
                          "x-warning": "Only for `reference_entity_single_link` and `reference_entity_multiple_links` attribute type"
                        },
                        "decimals_allowed": {
                          "type": "boolean",
                          "description": "Whether decimals are allowed when the attribute type is `number`",
                          "default": false,
                          "x-warning": "Only for `number` attribute type"
                        },
                        "min_value": {
                          "type": "string",
                          "description": "Minimum value allowed when the attribute type is `number`",
                          "default": "null",
                          "x-validation-rules": "The minimum value must be lower than the maximum value",
                          "x-warning": "Only for `number` attribute type"
                        },
                        "max_value": {
                          "type": "string",
                          "description": "Maximum value allowed when the attribute type is `number`",
                          "default": "null",
                          "x-validation-rules": "The maximum value must be greater than the minimum value",
                          "x-warning": "Only for `number` attribute type"
                        }
                      },
                      "example": {
                        "code": "description",
                        "labels": {
                          "en_US": "Description",
                          "fr_FR": "Description"
                        },
                        "type": "text",
                        "value_per_locale": true,
                        "value_per_channel": false,
                        "is_required_for_completeness": true,
                        "max_characters": null,
                        "is_textarea": true,
                        "is_rich_text_editor": true,
                        "validation_rule": "none",
                        "validation_regexp": null
                      }
                    }
                  }
                }
              },
              "x-no-entity": true
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "406": {
              "description": "Not Acceptable",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 406
                },
                "message": {
                  "example": "`xxx’ in `Accept` header is not valid. Only `application/json` is allowed."
                }
              },
              "x-details": "The `Accept` header is not `application/json` but it should"
            }
          },
          "x-versions": [
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-ee": true
        }
      },
      "/api/rest/v1/reference-entities/{reference_entity_code}/attributes/{code}": {
        "get": {
          "tags": [
            "Reference entity attribute"
          ],
          "summary": "Get an attribute of a given reference entity",
          "description": "This endpoint allows you to get the information about a given attribute for a given reference entity.",
          "operationId": "get_reference_entity_attributes__code_",
          "parameters": [
            {
              "name": "reference_entity_code",
              "in": "path",
              "description": "Code of the reference entity",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "required": [
                      "code",
                      "type"
                    ],
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Attribute code",
                        "x-immutable": true
                      },
                      "labels": {
                        "type": "object",
                        "properties": {
                          "localeCode": {
                            "type": "string",
                            "description": "Attribute label for the locale `localeCode`"
                          }
                        },
                        "description": "Attribute labels for each locale",
                        "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                      },
                      "type": {
                        "type": "string",
                        "description": "Attribute type. See <a href='/concepts/reference-entities.html#reference-entity-attribute'>type</a> section for more details.",
                        "enum": [
                          "text",
                          "image",
                          "number",
                          "single_option",
                          "multiple_options",
                          "reference_entity_single_link",
                          "reference_entity_multiple_links"
                        ],
                        "x-immutable": true
                      },
                      "value_per_locale": {
                        "type": "boolean",
                        "description": "Whether the attribute is localizable, i.e. can have one value by locale",
                        "default": false,
                        "x-immutable": true
                      },
                      "value_per_channel": {
                        "type": "boolean",
                        "description": "Whether the attribute is scopable, i.e. can have one value by channel",
                        "default": false,
                        "x-immutable": true
                      },
                      "is_required_for_completeness": {
                        "type": "boolean",
                        "description": "Whether the attribute should be part of the record's completeness calculation",
                        "default": false
                      },
                      "max_characters": {
                        "type": "integer",
                        "description": "Maximum number of characters allowed for the value of the attribute when the attribute type is `text`",
                        "x-warning": "Only for `text` attribute type"
                      },
                      "is_textarea": {
                        "type": "boolean",
                        "description": "Whether the UI should display a text area instead of a simple field when the attribute type is `text`",
                        "default": false,
                        "x-warning": "Only for `text` attribute type"
                      },
                      "is_rich_text_editor": {
                        "type": "boolean",
                        "description": "Whether the UI should display a rich text editor instead of a simple text area when the attribute type is `text`",
                        "x-validation-rules": "Required when the property `is_textarea` is equal to `true`",
                        "x-warning": "Only for `text` attribute type"
                      },
                      "validation_rule": {
                        "type": "string",
                        "description": "Validation rule type used to validate the attribute value when the attribute type is `text`",
                        "default": "none",
                        "enum": [
                          "email",
                          "url",
                          "regexp",
                          "none"
                        ],
                        "x-warning": "Only for `text` attribute type"
                      },
                      "validation_regexp": {
                        "type": "string",
                        "description": "Regexp expression used to validate the attribute value when the attribute type is `text`",
                        "default": "null",
                        "x-validation-rules": "Required when the property `validation_rule` is equal to `regexp`",
                        "x-warning": "Only for `text` attribute type"
                      },
                      "allowed_extensions": {
                        "type": "array",
                        "description": "Extensions allowed when the attribute type is `image`",
                        "items": {
                          "type": "string"
                        },
                        "x-warning": "Only for `image` attribute type"
                      },
                      "max_file_size": {
                        "type": "string",
                        "description": "Max file size in MB when the attribute type is `image`",
                        "default": "null",
                        "x-warning": "Only for `image` attribute type"
                      },
                      "reference_entity_code": {
                        "type": "string",
                        "description": "Code of the linked reference entity when the attribute type is `reference_entity_single_link` or `reference_entity_multiple_links`",
                        "default": "null",
                        "x-validation-rules": "Required when the attribute type is either `reference_entity_single_link` or `reference_entity_multiple_links`",
                        "x-immutable": true,
                        "x-warning": "Only for `reference_entity_single_link` and `reference_entity_multiple_links` attribute type"
                      },
                      "decimals_allowed": {
                        "type": "boolean",
                        "description": "Whether decimals are allowed when the attribute type is `number`",
                        "default": false,
                        "x-warning": "Only for `number` attribute type"
                      },
                      "min_value": {
                        "type": "string",
                        "description": "Minimum value allowed when the attribute type is `number`",
                        "default": "null",
                        "x-validation-rules": "The minimum value must be lower than the maximum value",
                        "x-warning": "Only for `number` attribute type"
                      },
                      "max_value": {
                        "type": "string",
                        "description": "Maximum value allowed when the attribute type is `number`",
                        "default": "null",
                        "x-validation-rules": "The maximum value must be greater than the minimum value",
                        "x-warning": "Only for `number` attribute type"
                      }
                    },
                    "example": {
                      "code": "description",
                      "labels": {
                        "en_US": "Description",
                        "fr_FR": "Description"
                      },
                      "type": "text",
                      "value_per_locale": true,
                      "value_per_channel": false,
                      "is_required_for_completeness": true,
                      "is_textarea": true,
                      "is_rich_text_editor": true,
                      "validation_rule": "none"
                    }
                  }
                }
              },
              "x-details": "Returns the content of the reference entity attribute in JSON format"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "404": {
              "description": "Resource not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 404
                },
                "message": {
                  "example": "Resource `my_resource_code` does not exist."
                }
              },
              "x-details": "The resource code given in the URI does not correspond to any existing PIM resource"
            },
            "406": {
              "description": "Not Acceptable",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 406
                },
                "message": {
                  "example": "`xxx’ in `Accept` header is not valid. Only `application/json` is allowed."
                }
              },
              "x-details": "The `Accept` header is not `application/json` but it should"
            }
          },
          "x-versions": [
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-ee": true
        },
        "patch": {
          "tags": [
            "Reference entity attribute"
          ],
          "summary": "Update/create an attribute of a given reference entity",
          "description": "This endpoint allows you to update a given attribute for a given renference entity. Note that if the attribute does not already exist for the given reference entity, it creates it.",
          "operationId": "patch_reference_entity_attributes__code_",
          "parameters": [
            {
              "name": "reference_entity_code",
              "in": "path",
              "description": "Code of the reference entity",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "code",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Attribute code",
                      "x-immutable": true
                    },
                    "labels": {
                      "type": "object",
                      "properties": {
                        "localeCode": {
                          "type": "string",
                          "description": "Attribute label for the locale `localeCode`"
                        }
                      },
                      "description": "Attribute labels for each locale",
                      "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                    },
                    "type": {
                      "type": "string",
                      "description": "Attribute type. See <a href='/concepts/reference-entities.html#reference-entity-attribute'>type</a> section for more details.",
                      "enum": [
                        "text",
                        "image",
                        "number",
                        "single_option",
                        "multiple_options",
                        "reference_entity_single_link",
                        "reference_entity_multiple_links"
                      ],
                      "x-immutable": true
                    },
                    "value_per_locale": {
                      "type": "boolean",
                      "description": "Whether the attribute is localizable, i.e. can have one value by locale",
                      "default": false,
                      "x-immutable": true
                    },
                    "value_per_channel": {
                      "type": "boolean",
                      "description": "Whether the attribute is scopable, i.e. can have one value by channel",
                      "default": false,
                      "x-immutable": true
                    },
                    "is_required_for_completeness": {
                      "type": "boolean",
                      "description": "Whether the attribute should be part of the record's completeness calculation",
                      "default": false
                    },
                    "max_characters": {
                      "type": "integer",
                      "description": "Maximum number of characters allowed for the value of the attribute when the attribute type is `text`",
                      "x-warning": "Only for `text` attribute type"
                    },
                    "is_textarea": {
                      "type": "boolean",
                      "description": "Whether the UI should display a text area instead of a simple field when the attribute type is `text`",
                      "default": false,
                      "x-warning": "Only for `text` attribute type"
                    },
                    "is_rich_text_editor": {
                      "type": "boolean",
                      "description": "Whether the UI should display a rich text editor instead of a simple text area when the attribute type is `text`",
                      "x-validation-rules": "Required when the property `is_textarea` is equal to `true`",
                      "x-warning": "Only for `text` attribute type"
                    },
                    "validation_rule": {
                      "type": "string",
                      "description": "Validation rule type used to validate the attribute value when the attribute type is `text`",
                      "default": "none",
                      "enum": [
                        "email",
                        "url",
                        "regexp",
                        "none"
                      ],
                      "x-warning": "Only for `text` attribute type"
                    },
                    "validation_regexp": {
                      "type": "string",
                      "description": "Regexp expression used to validate the attribute value when the attribute type is `text`",
                      "default": "null",
                      "x-validation-rules": "Required when the property `validation_rule` is equal to `regexp`",
                      "x-warning": "Only for `text` attribute type"
                    },
                    "allowed_extensions": {
                      "type": "array",
                      "description": "Extensions allowed when the attribute type is `image`",
                      "items": {
                        "type": "string"
                      },
                      "x-warning": "Only for `image` attribute type"
                    },
                    "max_file_size": {
                      "type": "string",
                      "description": "Max file size in MB when the attribute type is `image`",
                      "default": "null",
                      "x-warning": "Only for `image` attribute type"
                    },
                    "reference_entity_code": {
                      "type": "string",
                      "description": "Code of the linked reference entity when the attribute type is `reference_entity_single_link` or `reference_entity_multiple_links`",
                      "default": "null",
                      "x-validation-rules": "Required when the attribute type is either `reference_entity_single_link` or `reference_entity_multiple_links`",
                      "x-immutable": true,
                      "x-warning": "Only for `reference_entity_single_link` and `reference_entity_multiple_links` attribute type"
                    },
                    "decimals_allowed": {
                      "type": "boolean",
                      "description": "Whether decimals are allowed when the attribute type is `number`",
                      "default": false,
                      "x-warning": "Only for `number` attribute type"
                    },
                    "min_value": {
                      "type": "string",
                      "description": "Minimum value allowed when the attribute type is `number`",
                      "default": "null",
                      "x-validation-rules": "The minimum value must be lower than the maximum value",
                      "x-warning": "Only for `number` attribute type"
                    },
                    "max_value": {
                      "type": "string",
                      "description": "Maximum value allowed when the attribute type is `number`",
                      "default": "null",
                      "x-validation-rules": "The maximum value must be greater than the minimum value",
                      "x-warning": "Only for `number` attribute type"
                    }
                  },
                  "example": {
                    "code": "description",
                    "labels": {
                      "en_US": "Description",
                      "fr_FR": "Description"
                    },
                    "type": "text",
                    "value_per_locale": true,
                    "value_per_channel": false,
                    "is_required_for_completeness": true,
                    "is_textarea": true,
                    "is_rich_text_editor": true,
                    "validation_rule": "none"
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "Created",
              "headers": {
                "Location": {
                  "description": "URI of the created resource",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {},
              "x-details": "Means that the creation was successful"
            },
            "204": {
              "description": "No content to return",
              "headers": {
                "Location": {
                  "description": "URI of the updated resource",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {},
              "x-details": "Means that the update was successful"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "415": {
              "description": "Unsupported Media type",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 415
                },
                "message": {
                  "example": "`xxx’ in `Content-Type’ header is not valid.  Only `application/json’ is allowed."
                }
              },
              "x-details": "The `Content-Type` header has to be `application/json`"
            },
            "422": {
              "description": "Unprocessable entity",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 422
                },
                "message": {
                  "example": "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
                },
                "_links": {
                  "example": {
                    "documentation": {
                      "href": "http://api.akeneo.com/api-reference.html"
                    }
                  }
                }
              },
              "x-details": "The validation of the entity given in the body of the request failed"
            }
          },
          "x-versions": [
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-ee": true,
          "x-codegen-request-body-name": "body"
        }
      },
      "/api/rest/v1/reference-entities/{reference_entity_code}/attributes/{attribute_code}/options": {
        "get": {
          "tags": [
            "Reference entity attribute option"
          ],
          "summary": "Get a list of attribute options of a given attribute for a given reference entity",
          "description": "This endpoint allows you to get a list of attribute options for a given reference entity.",
          "operationId": "get_reference_entity_attributes__attribute_code__options",
          "parameters": [
            {
              "name": "reference_entity_code",
              "in": "path",
              "description": "Code of the reference entity",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "attribute_code",
              "in": "path",
              "description": "Code of the attribute",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Return the options of the given attributes of the given reference entity",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "required": [
                        "code"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Attribute's option code",
                          "x-immutable": true
                        },
                        "labels": {
                          "type": "object",
                          "properties": {
                            "localeCode": {
                              "type": "string",
                              "description": "Attribute label for the locale `localeCode`"
                            }
                          },
                          "description": "Attribute labels for each locale",
                          "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                        }
                      },
                      "example": {
                        "code": "global_nomad",
                        "labels": {
                          "en_US": "Global Nomad",
                          "fr_FR": "Nomade du Monde"
                        }
                      }
                    }
                  }
                }
              },
              "x-no-entity": true
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "406": {
              "description": "Not Acceptable",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 406
                },
                "message": {
                  "example": "`xxx’ in `Accept` header is not valid. Only `application/json` is allowed."
                }
              },
              "x-details": "The `Accept` header is not `application/json` but it should"
            }
          },
          "x-versions": [
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-ee": true
        }
      },
      "/api/rest/v1/reference-entities/{reference_entity_code}/attributes/{attribute_code}/options/{code}": {
        "get": {
          "tags": [
            "Reference entity attribute option"
          ],
          "summary": "Get an attribute option for a given attribute of a given reference entity",
          "description": "This endpoint allows you to get the information about a given attribute option.",
          "operationId": "get_reference_entity_attributes__attribute_code__options__code_",
          "parameters": [
            {
              "name": "reference_entity_code",
              "in": "path",
              "description": "Code of the reference entity",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "attribute_code",
              "in": "path",
              "description": "Code of the attribute",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "required": [
                      "code"
                    ],
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Attribute's option code",
                        "x-immutable": true
                      },
                      "labels": {
                        "type": "object",
                        "properties": {
                          "localeCode": {
                            "type": "string",
                            "description": "Attribute label for the locale `localeCode`"
                          }
                        },
                        "description": "Attribute labels for each locale",
                        "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                      }
                    },
                    "example": {
                      "code": "global_nomad",
                      "labels": {
                        "en_US": "Global Nomad",
                        "fr_FR": "Nomade du Monde"
                      }
                    }
                  }
                }
              },
              "x-details": "Returns the content of the reference entity attribute option in JSON format"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "404": {
              "description": "Resource not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 404
                },
                "message": {
                  "example": "Resource `my_resource_code` does not exist."
                }
              },
              "x-details": "The resource code given in the URI does not correspond to any existing PIM resource"
            },
            "406": {
              "description": "Not Acceptable",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 406
                },
                "message": {
                  "example": "`xxx’ in `Accept` header is not valid. Only `application/json` is allowed."
                }
              },
              "x-details": "The `Accept` header is not `application/json` but it should"
            }
          },
          "x-versions": [
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-ee": true
        },
        "patch": {
          "tags": [
            "Reference entity attribute option"
          ],
          "summary": "Update/create a reference entity attribute option",
          "description": "This endpoint allows you to update a given option for a given attribute and a given reference entity. Learn more about <a href=\"/documentation/update.html#patch-reference-entity-record-values\">Update behavior</a>. Note that if the option does not already exist for the given attribute of the given reference entity, it creates it.",
          "operationId": "patch_reference_entity_attributes__attribute_code__options__code_",
          "parameters": [
            {
              "name": "reference_entity_code",
              "in": "path",
              "description": "Code of the reference entity",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "attribute_code",
              "in": "path",
              "description": "Code of the attribute",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "code"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Attribute's option code",
                      "x-immutable": true
                    },
                    "labels": {
                      "type": "object",
                      "properties": {
                        "localeCode": {
                          "type": "string",
                          "description": "Attribute label for the locale `localeCode`"
                        }
                      },
                      "description": "Attribute labels for each locale",
                      "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                    }
                  },
                  "example": {
                    "code": "global_nomad",
                    "labels": {
                      "en_US": "Global Nomad",
                      "fr_FR": "Nomade du Monde"
                    }
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "Created",
              "headers": {
                "Location": {
                  "description": "URI of the created resource",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {},
              "x-details": "Means that the creation was successful"
            },
            "204": {
              "description": "No content to return",
              "headers": {
                "Location": {
                  "description": "URI of the updated resource",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {},
              "x-details": "Means that the update was successful"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "415": {
              "description": "Unsupported Media type",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 415
                },
                "message": {
                  "example": "`xxx’ in `Content-Type’ header is not valid.  Only `application/json’ is allowed."
                }
              },
              "x-details": "The `Content-Type` header has to be `application/json`"
            },
            "422": {
              "description": "Unprocessable entity",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 422
                },
                "message": {
                  "example": "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
                },
                "_links": {
                  "example": {
                    "documentation": {
                      "href": "http://api.akeneo.com/api-reference.html"
                    }
                  }
                }
              },
              "x-details": "The validation of the entity given in the body of the request failed"
            }
          },
          "x-versions": [
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-ee": true,
          "x-codegen-request-body-name": "body"
        }
      },
      "/api/rest/v1/reference-entities/{reference_entity_code}/records": {
        "get": {
          "tags": [
            "Reference entity record"
          ],
          "summary": "Get the list of the records of a reference entity",
          "description": "This endpoint allows you to get a list of records of a given reference entity. Records are paginated and can be filtered.",
          "operationId": "get_reference_entity_records",
          "parameters": [
            {
              "name": "search",
              "in": "query",
              "description": "Filter records of the reference entity, for more details see the <a href=\"/documentation/filter.html#filter-reference-entity-records\">Filters</a> section",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "channel",
              "in": "query",
              "description": "Filter attribute values to return scopable attributes for the given channel as well as the non localizable/non scopable attributes, for more details see the <a href=\"/documentation/filter.html#record-values-by-channel\">Filter attribute values by channel</a> section",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "locales",
              "in": "query",
              "description": "Filter attribute values to return localizable attributes for the given locales as well as the non localizable/non scopable attributes, for more details see the <a href=\"/documentation/filter.html#record-values-by-locale\">Filter attribute values by locale</a> section",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "reference_entity_code",
              "in": "path",
              "description": "Code of the reference entity",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "search_after",
              "in": "query",
              "description": "Cursor when using the `search_after` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
              "schema": {
                "type": "string",
                "default": "cursor to the first page"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Return the records of the given reference entity paginated",
              "content": {
                "application/json": {
                  "schema": {
                    "title": "Reference entity record",
                    "type": "object",
                    "properties": {
                      "_embedded": {
                        "type": "object",
                        "properties": {
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "_links": {
                                      "type": "object",
                                      "properties": {
                                        "self": {
                                          "type": "object",
                                          "properties": {
                                            "href": {
                                              "type": "string",
                                              "description": "URI of the resource"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "required": [
                                    "code"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "string",
                                      "description": "Code of the record",
                                      "x-immutable": true
                                    },
                                    "values": {
                                      "type": "object",
                                      "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "channel": {
                                              "type": "string",
                                              "description": "Channel code of the reference entity record value"
                                            },
                                            "locale": {
                                              "type": "string",
                                              "description": "Locale code of the reference entity record value"
                                            },
                                            "data": {
                                              "type": "object",
                                              "properties": {},
                                              "description": "Reference entity record value. See <a href='/concepts/reference-entities.html#the-data-format'>the `data` format</a> section for more details."
                                            }
                                          }
                                        }
                                      },
                                      "description": "Record attributes values, see <a href='/concepts/reference-entities.html#focus-on-the-reference-entity-record-values'>Reference entity record values</a> section for more details",
                                      "x-validation-rules": "Validation rules detailed in Reference entity record values section"
                                    },
                                    "created": {
                                      "type": "string",
                                      "description": "Date of creation.",
                                      "format": "dateTime",
                                      "default": "null",
                                      "x-immutable": true,
                                      "x-read-only": true,
                                      "x-from-version": "5.0"
                                    },
                                    "updated": {
                                      "type": "string",
                                      "description": "Date of the last update.",
                                      "format": "dateTime",
                                      "default": "null",
                                      "x-read-only": true,
                                      "x-from-version": "5.0"
                                    }
                                  },
                                  "example": {
                                    "code": "kartell",
                                    "values": {
                                      "label": [
                                        {
                                          "locale": "en_US",
                                          "data": "Kartell"
                                        }
                                      ],
                                      "image": [
                                        {
                                          "data": "0/c/b/0/0cb0c0e115dedba676f8d1ad8343ec207ab54c7b_image.jpg"
                                        }
                                      ],
                                      "description": [
                                        {
                                          "locale": "en_US",
                                          "data": "Kartell, the Italian furniture company that sells modern and remarkable pieces of furnitures."
                                        },
                                        {
                                          "locale": "fr_FR",
                                          "data": "Kartell, l'éditeur de meuble italien spécialisé dans la signature de belle pièces au design contemporain."
                                        }
                                      ],
                                      "country": [
                                        {
                                          "data": "italy"
                                        }
                                      ],
                                      "collection_overview": [
                                        {
                                          "data": "5/1/d/8/51d81dc778ba1501a8f998f3ab5797569f3b9e25_img.png"
                                        }
                                      ],
                                      "creation_year": [
                                        {
                                          "data": "1949"
                                        }
                                      ]
                                    },
                                    "created": "2021-01-01T01:23:34+00:00",
                                    "updated": "2021-02-03T23:45:60+00:00"
                                  }
                                }
                              ]
                            }
                          }
                        }
                      },
                      "_links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the current page of resources"
                              }
                            }
                          },
                          "first": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the first page of resources"
                              }
                            }
                          },
                          "next": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the next page of resources"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "_links": {
                  "example": {
                    "self": {
                      "href": "https://demo.akeneo.com/api/rest/v1/reference-entities/brands/records"
                    },
                    "first": {
                      "href": "https://demo.akeneo.com/api/rest/v1/reference-entities/brands/records"
                    },
                    "next": {
                      "href": "https://demo.akeneo.com/api/rest/v1/reference-entities/brands/records?search_after=2x088w%3D%3D"
                    }
                  }
                },
                "_embedded": {
                  "example": {
                    "items": [
                      {
                        "_links": {
                          "self": {
                            "href": "https://demo.akeneo.com/api/rest/v1/reference-entities/brands/records/kartell"
                          }
                        },
                        "code": "kartell",
                        "values": {
                          "label": [
                            {
                              "locale": "en_US",
                              "data": "Kartell"
                            }
                          ],
                          "image": [
                            {
                              "data": "0/c/b/0/0cb0c0e115dedba676f8d1ad8343ec207ab54c7b_image.jpg"
                            }
                          ],
                          "description": [
                            {
                              "data": "The contemporary Italian furniture brand",
                              "locale": "en_US"
                            },
                            {
                              "data": "L'éditeur de meubles comtemporain italien",
                              "locale": "fr_FR"
                            }
                          ],
                          "country": [
                            {
                              "data": "italy"
                            }
                          ]
                        },
                        "created": "2021-01-01T01:23:34+00:00",
                        "updated": "2021-02-03T23:45:60+00:00"
                      },
                      {
                        "_links": {
                          "self": {
                            "href": "https://demo.akeneo.com/api/rest/v1/reference-entities/brands/records/usm"
                          }
                        },
                        "code": "usm",
                        "values": {
                          "label": [
                            {
                              "locale": "en_US",
                              "data": "USM"
                            }
                          ],
                          "image": [
                            {
                              "data": "9/c/g/1/0cb0c0e115dedba76f8d1ad8343ec897abc43bv4_image.jpg"
                            }
                          ],
                          "description": [
                            {
                              "data": "Modular furniture from Switzerland for your home and office",
                              "locale": "en_US"
                            },
                            {
                              "data": "L'éditeur de meubles modulaires suisse pour votre intérieur et pour les entreprises",
                              "locale": "fr_FR"
                            }
                          ],
                          "country": [
                            {
                              "data": "switzerland"
                            }
                          ]
                        },
                        "created": "2021-01-01T01:23:34+00:00",
                        "updated": "2021-02-03T23:45:60+00:00"
                      },
                      {
                        "_links": {
                          "self": {
                            "href": "https://demo.akeneo.com/api/rest/v1/reference-entities/brands/records/ligneroset"
                          }
                        },
                        "code": "ligneroset",
                        "values": {
                          "label": [
                            {
                              "locale": "en_US",
                              "data": "Ligne Roset"
                            }
                          ],
                          "image": [
                            {
                              "data": "4/b/0/1/0cb0c0e115dedde78b8d1ad8343ec980cd5daa54_image.jpg"
                            }
                          ],
                          "description": [
                            {
                              "data": "Very well known French brand of modern and luxury furniture",
                              "locale": "en_US"
                            },
                            {
                              "data": "La marque renommée des meubles de luxe à la française",
                              "locale": "fr_FR"
                            }
                          ],
                          "country": [
                            {
                              "data": "france"
                            }
                          ]
                        },
                        "created": "2021-01-01T01:23:34+00:00",
                        "updated": "2021-02-03T23:45:60+00:00"
                      }
                    ]
                  }
                }
              }
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "406": {
              "description": "Not Acceptable",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 406
                },
                "message": {
                  "example": "`xxx’ in `Accept` header is not valid. Only `application/json` is allowed."
                }
              },
              "x-details": "The `Accept` header is not `application/json` but it should"
            }
          },
          "x-versions": [
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-ee": true
        },
        "patch": {
          "tags": [
            "Reference entity record"
          ],
          "summary": "Update/create several reference entity records",
          "description": "This endpoint allows you to update and/or create several records of one given reference entity at once. Learn more about <a href=\"/documentation/update.html#patch-reference-entity-record-values\">Update behavior</a>. Note that if the record does not already exist for the given reference entity, it creates it.",
          "operationId": "patch_reference_entity_records",
          "parameters": [
            {
              "name": "reference_entity_code",
              "in": "path",
              "description": "Code of the reference entity",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "example": [
                    {
                      "code": "kartell",
                      "values": {
                        "label": [
                          {
                            "locale": "en_US",
                            "data": "Kartell"
                          }
                        ],
                        "image": [
                          {
                            "data": "0/c/b/0/0cb0c0e115dedba676f8d1ad8343ec207ab54c7b_image.jpg"
                          }
                        ],
                        "description": [
                          {
                            "locale": "en_US",
                            "data": "Kartell, the Italian furniture company that sells modern and remarkable pieces of furnitures."
                          },
                          {
                            "locale": "fr_FR",
                            "data": "Kartell, l'éditeur de meuble italien spécialisé dans la signature de belle pièces au design contemporain."
                          }
                        ],
                        "country": [
                          {
                            "data": "italy"
                          }
                        ],
                        "collection_overview": [
                          {
                            "data": "5/1/d/8/51d81dc778ba1501a8f998f3ab5797569f3b9e25_img.png"
                          }
                        ],
                        "creation_year": [
                          {
                            "data": "1949"
                          }
                        ]
                      }
                    },
                    {
                      "code": "ligneroset",
                      "values": {
                        "label": [
                          {
                            "locale": "en_US",
                            "data": "Ligne Roset"
                          }
                        ],
                        "image": [
                          {
                            "data": "4/b/0/1/0cb0c0e115dedde78b8d1ad8343ec980cd5daa54_image.jpg"
                          }
                        ],
                        "description": [
                          {
                            "data": "Very well known French brand of modern and luxury furniture",
                            "locale": "en_US"
                          },
                          {
                            "data": "La marque renommée des meubles de luxe à la française",
                            "locale": "fr_FR"
                          }
                        ],
                        "country": [
                          {
                            "data": "france"
                          }
                        ],
                        "creation_year": [
                          {
                            "data": "1860"
                          }
                        ]
                      }
                    },
                    {
                      "code": "usm",
                      "values": {
                        "label": [
                          {
                            "locale": "en_US",
                            "data": "USM"
                          }
                        ],
                        "image": [
                          {
                            "data": "9/c/g/1/0cb0c0e115dedba76f8d1ad8343ec897abc43bv4_image.jpg"
                          }
                        ],
                        "description": [
                          {
                            "data": "Modular furniture from Switzerland for your home and office",
                            "locale": "en_US"
                          },
                          {
                            "data": "L'éditeur de meubles modulaires suisse pour votre intérieur et pour les entreprises",
                            "locale": "fr_FR"
                          }
                        ],
                        "country": [
                          {
                            "data": "switzerland"
                          }
                        ],
                        "creation_year": [
                          {
                            "data": "1885"
                          }
                        ]
                      }
                    }
                  ],
                  "items": {
                    "required": [
                      "code"
                    ],
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Code of the record",
                        "x-immutable": true
                      },
                      "values": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "channel": {
                                "type": "string",
                                "description": "Channel code of the reference entity record value"
                              },
                              "locale": {
                                "type": "string",
                                "description": "Locale code of the reference entity record value"
                              },
                              "data": {
                                "type": "object",
                                "properties": {},
                                "description": "Reference entity record value. See <a href='/concepts/reference-entities.html#the-data-format'>the `data` format</a> section for more details."
                              }
                            }
                          }
                        },
                        "description": "Record attributes values, see <a href='/concepts/reference-entities.html#focus-on-the-reference-entity-record-values'>Reference entity record values</a> section for more details",
                        "x-validation-rules": "Validation rules detailed in Reference entity record values section"
                      },
                      "created": {
                        "type": "string",
                        "description": "Date of creation.",
                        "format": "dateTime",
                        "default": "null",
                        "x-immutable": true,
                        "x-read-only": true,
                        "x-from-version": "5.0"
                      },
                      "updated": {
                        "type": "string",
                        "description": "Date of the last update.",
                        "format": "dateTime",
                        "default": "null",
                        "x-read-only": true,
                        "x-from-version": "5.0"
                      }
                    },
                    "example": {
                      "code": "kartell",
                      "values": {
                        "label": [
                          {
                            "locale": "en_US",
                            "channel": null,
                            "data": "Kartell"
                          }
                        ],
                        "image": [
                          {
                            "locale": null,
                            "channel": null,
                            "data": "0/c/b/0/0cb0c0e115dedba676f8d1ad8343ec207ab54c7b_image.jpg"
                          }
                        ],
                        "description": [
                          {
                            "locale": "en_US",
                            "channel": null,
                            "data": "Kartell, the Italian furniture company that sells modern and remarkable pieces of furnitures."
                          },
                          {
                            "locale": "fr_FR",
                            "channel": null,
                            "data": "Kartell, l'éditeur de meuble italien spécialisé dans la signature de belle pièces au design contemporain."
                          }
                        ],
                        "country": [
                          {
                            "locale": null,
                            "channel": null,
                            "data": "italy"
                          }
                        ],
                        "collection_overview": [
                          {
                            "locale": null,
                            "channel": null,
                            "data": "5/1/d/8/51d81dc778ba1501a8f998f3ab5797569f3b9e25_img.png"
                          }
                        ],
                        "creation_year": [
                          {
                            "locale": null,
                            "channel": null,
                            "data": "1949"
                          }
                        ]
                      },
                      "created": "2021-01-01T01:23:34+00:00",
                      "updated": "2021-02-03T23:45:60+00:00"
                    }
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Resource code"
                        },
                        "status_code": {
                          "type": "integer",
                          "description": "HTTP status code, see <a href=\"/documentation/responses.html#client-errors\">Client errors</a> to understand the meaning of each code"
                        },
                        "message": {
                          "type": "string",
                          "description": "Message explaining the error"
                        }
                      }
                    }
                  }
                }
              },
              "x-details": "Returns an JSON array in which each object gives you the status of each record creation or update",
              "x-no-entity": true
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "413": {
              "description": "Request Entity Too Large",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 413
                },
                "message": {
                  "example": "Too many resources to process, 100 is the maximum allowed."
                }
              },
              "x-details": "There are too many resources to process (max 100) or the line of JSON is too long (max 1 000 000 characters)"
            },
            "415": {
              "description": "Unsupported Media type",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 415
                },
                "message": {
                  "example": "`xxx’ in `Content-Type’ header is not valid.  Only `application/vnd.akeneo.collection+json’ is allowed."
                }
              },
              "x-details": "The `Content-Type` header has to be `application/vnd.akeneo.collection+json`"
            }
          },
          "x-versions": [
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-ee": true,
          "x-codegen-request-body-name": "body"
        }
      },
      "/api/rest/v1/reference-entities/{reference_entity_code}/records/{code}": {
        "get": {
          "tags": [
            "Reference entity record"
          ],
          "summary": "Get a record of a given reference entity",
          "description": "This endpoint allows you to get the information about a given record for a given reference entity.",
          "operationId": "get_reference_entity_records__code_",
          "parameters": [
            {
              "name": "reference_entity_code",
              "in": "path",
              "description": "Code of the reference entity",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "required": [
                      "code"
                    ],
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Code of the record",
                        "x-immutable": true
                      },
                      "values": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "channel": {
                                "type": "string",
                                "description": "Channel code of the reference entity record value"
                              },
                              "locale": {
                                "type": "string",
                                "description": "Locale code of the reference entity record value"
                              },
                              "data": {
                                "type": "object",
                                "properties": {},
                                "description": "Reference entity record value. See <a href='/concepts/reference-entities.html#the-data-format'>the `data` format</a> section for more details."
                              }
                            }
                          }
                        },
                        "description": "Record attributes values, see <a href='/concepts/reference-entities.html#focus-on-the-reference-entity-record-values'>Reference entity record values</a> section for more details",
                        "x-validation-rules": "Validation rules detailed in Reference entity record values section"
                      },
                      "created": {
                        "type": "string",
                        "description": "Date of creation.",
                        "format": "dateTime",
                        "default": "null",
                        "x-immutable": true,
                        "x-read-only": true,
                        "x-from-version": "5.0"
                      },
                      "updated": {
                        "type": "string",
                        "description": "Date of the last update.",
                        "format": "dateTime",
                        "default": "null",
                        "x-read-only": true,
                        "x-from-version": "5.0"
                      }
                    },
                    "example": {
                      "code": "kartell",
                      "values": {
                        "label": [
                          {
                            "locale": "en_US",
                            "data": "Kartell"
                          }
                        ],
                        "image": [
                          {
                            "data": "0/c/b/0/0cb0c0e115dedba676f8d1ad8343ec207ab54c7b_image.jpg"
                          }
                        ],
                        "description": [
                          {
                            "locale": "en_US",
                            "data": "Kartell, the Italian furniture company that sells modern and remarkable pieces of furnitures."
                          },
                          {
                            "locale": "fr_FR",
                            "data": "Kartell, l'éditeur de meuble italien spécialisé dans la signature de belle pièces au design contemporain."
                          }
                        ],
                        "country": [
                          {
                            "data": "italy"
                          }
                        ],
                        "collection_overview": [
                          {
                            "data": "5/1/d/8/51d81dc778ba1501a8f998f3ab5797569f3b9e25_img.png"
                          }
                        ],
                        "creation_year": [
                          {
                            "data": "1949"
                          }
                        ]
                      },
                      "created": "2021-01-01T01:23:34+00:00",
                      "updated": "2021-02-03T23:45:60+00:00"
                    }
                  }
                }
              },
              "x-details": "Returns the content of the product in JSON standard format"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "404": {
              "description": "Resource not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 404
                },
                "message": {
                  "example": "Resource `my_resource_code` does not exist."
                }
              },
              "x-details": "The resource code given in the URI does not correspond to any existing PIM resource"
            },
            "406": {
              "description": "Not Acceptable",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 406
                },
                "message": {
                  "example": "`xxx’ in `Accept` header is not valid. Only `application/json` is allowed."
                }
              },
              "x-details": "The `Accept` header is not `application/json` but it should"
            }
          },
          "x-versions": [
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-ee": true
        },
        "patch": {
          "tags": [
            "Reference entity record"
          ],
          "summary": "Update/create a record of a given reference entity",
          "description": "This endpoint allows you to update a given record of a given renference entity. Learn more about <a href=\"/documentation/update.html#patch-reference-entity-record-values\">Update behavior</a>. Note that if the record does not already exist for the given reference entity, it creates it.",
          "operationId": "patch_reference_entity_records__code_",
          "parameters": [
            {
              "name": "reference_entity_code",
              "in": "path",
              "description": "Code of the reference entity",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "code"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Code of the record",
                      "x-immutable": true
                    },
                    "values": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "channel": {
                              "type": "string",
                              "description": "Channel code of the reference entity record value"
                            },
                            "locale": {
                              "type": "string",
                              "description": "Locale code of the reference entity record value"
                            },
                            "data": {
                              "type": "object",
                              "properties": {},
                              "description": "Reference entity record value. See <a href='/concepts/reference-entities.html#the-data-format'>the `data` format</a> section for more details."
                            }
                          }
                        }
                      },
                      "description": "Record attributes values, see <a href='/concepts/reference-entities.html#focus-on-the-reference-entity-record-values'>Reference entity record values</a> section for more details",
                      "x-validation-rules": "Validation rules detailed in Reference entity record values section"
                    },
                    "created": {
                      "type": "string",
                      "description": "Date of creation.",
                      "format": "dateTime",
                      "default": "null",
                      "x-immutable": true,
                      "x-read-only": true,
                      "x-from-version": "5.0"
                    },
                    "updated": {
                      "type": "string",
                      "description": "Date of the last update.",
                      "format": "dateTime",
                      "default": "null",
                      "x-read-only": true,
                      "x-from-version": "5.0"
                    }
                  },
                  "example": {
                    "code": "kartell",
                    "values": {
                      "label": [
                        {
                          "locale": "en_US",
                          "data": "Kartell"
                        }
                      ],
                      "image": [
                        {
                          "data": "0/c/b/0/0cb0c0e115dedba676f8d1ad8343ec207ab54c7b_image.jpg"
                        }
                      ],
                      "description": [
                        {
                          "locale": "en_US",
                          "data": "Kartell, the Italian furniture company that sells modern and remarkable pieces of furnitures."
                        },
                        {
                          "locale": "fr_FR",
                          "data": "Kartell, l'éditeur de meuble italien spécialisé dans la signature de belle pièces au design contemporain."
                        }
                      ],
                      "country": [
                        {
                          "data": "italy"
                        }
                      ],
                      "collection_overview": [
                        {
                          "data": "5/1/d/8/51d81dc778ba1501a8f998f3ab5797569f3b9e25_img.png"
                        }
                      ],
                      "creation_year": [
                        {
                          "data": "1949"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "Created",
              "headers": {
                "Location": {
                  "description": "URI of the created resource",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {},
              "x-details": "Means that the creation was successful"
            },
            "204": {
              "description": "No content to return",
              "headers": {
                "Location": {
                  "description": "URI of the updated resource",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {},
              "x-details": "Means that the update was successful"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "415": {
              "description": "Unsupported Media type",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 415
                },
                "message": {
                  "example": "`xxx’ in `Content-Type’ header is not valid.  Only `application/json’ is allowed."
                }
              },
              "x-details": "The `Content-Type` header has to be `application/json`"
            },
            "422": {
              "description": "Unprocessable entity",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 422
                },
                "message": {
                  "example": "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
                },
                "_links": {
                  "example": {
                    "documentation": {
                      "href": "http://api.akeneo.com/api-reference.html"
                    }
                  }
                }
              },
              "x-details": "The validation of the entity given in the body of the request failed"
            }
          },
          "x-versions": [
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-ee": true,
          "x-codegen-request-body-name": "body"
        }
      },
      "/api/rest/v1/reference-entities-media-files": {
        "post": {
          "tags": [
            "Reference entity media file"
          ],
          "summary": "Create a new media file for a reference entity or a record",
          "description": "This endpoint allows you to create a new media file and associate it to the image of a reference entity, or to the main image or to an attribute value of a record.",
          "operationId": "post_reference_entity_media_files",
          "parameters": [
            {
              "name": "Content-Type",
              "in": "header",
              "description": "Equal to 'multipart/form-data', no other value allowed",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "file"
                  ],
                  "type": "object",
                  "properties": {
                    "file": {
                      "type": "string",
                      "description": "The binary of the media file",
                      "format": "binary"
                    }
                  }
                }
              }
            },
            "required": false
          },
          "responses": {
            "201": {
              "description": "Created",
              "headers": {
                "Reference-entities-media-file-code": {
                  "description": "Code of the media file",
                  "schema": {
                    "type": "string"
                  }
                },
                "Location": {
                  "description": "URI of the created resource",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {},
              "x-details": "Means that the media file creation was successful"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "415": {
              "description": "Unsupported Media type",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 415
                },
                "message": {
                  "example": "`xxx’ in `Content-Type’ header is not valid.  Only `multipart/form-data’ is allowed."
                }
              },
              "x-details": "The `Content-Type` header has to be `multipart/form-data`"
            },
            "422": {
              "description": "Unprocessable entity",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 422
                },
                "message": {
                  "example": "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
                },
                "_links": {
                  "example": {
                    "documentation": {
                      "href": "http://api.akeneo.com/api-reference.html"
                    }
                  }
                }
              },
              "x-details": "The validation of the entity given in the body of the request failed"
            }
          },
          "x-versions": [
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-ee": true,
          "x-codegen-request-body-name": "body"
        }
      },
      "/api/rest/v1/reference-entities-media-files/{code}": {
        "get": {
          "tags": [
            "Reference entity media file"
          ],
          "summary": "Download the media file associated to a reference entity or a record",
          "description": "This endpoint allows you to download a given media file that is associated with a reference entity or a record.",
          "operationId": "get_reference_entity_media_files__code",
          "parameters": [
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {},
              "x-details": "Returns the binary of the media file",
              "x-content-type": "Mime-type of the media file"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "404": {
              "description": "Resource not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 404
                },
                "message": {
                  "example": "Resource `my_resource_code` does not exist."
                }
              },
              "x-details": "The resource code given in the URI does not correspond to any existing PIM resource"
            }
          },
          "x-content-type": "Mime-type of the media file",
          "x-versions": [
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-ee": true
        }
      },
      "/api/rest/v1/asset-families": {
        "get": {
          "tags": [
            "Asset family"
          ],
          "summary": "Get list of asset families",
          "description": "This endpoint allows you to get a list of asset families. Asset families are paginated.",
          "operationId": "get_asset_families",
          "parameters": [
            {
              "name": "search_after",
              "in": "query",
              "description": "Cursor when using the `search_after` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
              "schema": {
                "type": "string",
                "default": "cursor to the first page"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Return asset families paginated",
              "content": {
                "application/json": {
                  "schema": {
                    "title": "Asset families",
                    "type": "object",
                    "properties": {
                      "_embedded": {
                        "type": "object",
                        "properties": {
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "_links": {
                                      "type": "object",
                                      "properties": {
                                        "self": {
                                          "type": "object",
                                          "properties": {
                                            "href": {
                                              "type": "string",
                                              "description": "URI of the resource"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "required": [
                                    "code"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "string",
                                      "description": "Asset family code",
                                      "x-immutable": true
                                    },
                                    "labels": {
                                      "type": "object",
                                      "properties": {
                                        "localeCode": {
                                          "type": "string",
                                          "description": "Asset family label for the locale `localeCode`"
                                        }
                                      },
                                      "description": "Asset family labels for each locale",
                                      "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                                    },
                                    "attribute_as_main_media": {
                                      "type": "string",
                                      "description": "Attribute code that is used as the main media of the asset family.",
                                      "default": "First media file or media link attribute that was created",
                                      "x-validation-rules": "It should be the code of an attribute that belongs to this family, and it must be a media file or a media link attribute type."
                                    },
                                    "naming_convention": {
                                      "type": "object",
                                      "properties": {
                                        "source": {
                                          "type": "object",
                                          "properties": {},
                                          "description": "The string on which the naming convention should be applied. More details <a href='/concepts/asset-manager.html#source'>here</a>."
                                        },
                                        "pattern": {
                                          "type": "string",
                                          "description": "The regular expression that should be applied on the source. More details <a href='/concepts/asset-manager.html#pattern'>here</a>."
                                        },
                                        "abort_asset_creation_on_error": {
                                          "type": "boolean",
                                          "description": "Whether the asset should be created if the naming convention failed to apply. More details <a href='/concepts/asset-manager.html#abort-asset-creation-on-error'>here</a>."
                                        }
                                      },
                                      "description": "The naming convention ran over the asset code or the main media filename upon each asset creation, in order to automatically set several values in asset attributes. To learn more and see the format of this property, take a look at <a href='/concepts/asset-manager.html#focus-on-the-naming-convention'>here</a>.",
                                      "x-validation-rules": "To know more about the validation of this property, take a look at our naming convention format."
                                    },
                                    "product_link_rules": {
                                      "type": "array",
                                      "description": "The rules that will be run after the asset creation, in order to automatically link the assets of this family to a set of products. To understand the format of this property, see <a href='/concepts/asset-manager.html#focus-on-the-product-link-rule'>here</a>.",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "product_selections": {
                                            "type": "array",
                                            "description": "The product selection to which the assets of the asset family to be automatically linked. More details <a href='/concepts/asset-manager.html#product-selection'>here</a>.",
                                            "items": {
                                              "required": [
                                                "field",
                                                "operator",
                                                "value"
                                              ],
                                              "type": "object",
                                              "properties": {
                                                "field": {
                                                  "type": "string"
                                                },
                                                "operator": {
                                                  "type": "string"
                                                },
                                                "value": {
                                                  "type": "string"
                                                },
                                                "locale": {
                                                  "type": "string"
                                                },
                                                "channel": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          "assign_assets_to": {
                                            "type": "array",
                                            "description": "The product value in which your assets will be assigned. More details <a href='/concepts/asset-manager.html#product-value-assignment'>here</a>.",
                                            "items": {
                                              "required": [
                                                "attribute",
                                                "mode"
                                              ],
                                              "type": "object",
                                              "properties": {
                                                "attribute": {
                                                  "type": "string"
                                                },
                                                "locale": {
                                                  "type": "string"
                                                },
                                                "channel": {
                                                  "type": "string"
                                                },
                                                "mode": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "x-validation-rules": "To know more about the validation of this property, take a look at our product link rule format."
                                    },
                                    "transformations": {
                                      "type": "array",
                                      "description": "The transformations to perform on source files in order to generate new files into your asset attributes (only available since v4.0). To understand the format of this property, see <a href='/concepts/asset-manager.html#focus-on-the-transformations'>here</a>.",
                                      "items": {
                                        "required": [
                                          "label",
                                          "operations",
                                          "source",
                                          "target"
                                        ],
                                        "type": "object",
                                        "properties": {
                                          "label": {
                                            "type": "string",
                                            "description": "The name of the transformation"
                                          },
                                          "filename_suffix": {
                                            "type": "string",
                                            "description": "The suffix that will be appended to the source filename to generate the target filename. More details <a href='/concepts/asset-manager.html#target-filename'>here</a>."
                                          },
                                          "filename_prefix": {
                                            "type": "string",
                                            "description": "The prefix that will be prepended to the source filename to generate the target filename. More details <a href='/concepts/asset-manager.html#target-filename'>here</a>."
                                          },
                                          "source": {
                                            "required": [
                                              "attribute",
                                              "channel",
                                              "locale"
                                            ],
                                            "type": "object",
                                            "properties": {
                                              "attribute": {
                                                "type": "string"
                                              },
                                              "channel": {
                                                "type": "string"
                                              },
                                              "locale": {
                                                "type": "string"
                                              }
                                            },
                                            "description": "The attribute value in which is stored the media file you want to use as the source file for your transformation. More details <a href='/concepts/asset-manager.html#source-file'>here</a>."
                                          },
                                          "target": {
                                            "required": [
                                              "attribute",
                                              "channel",
                                              "locale"
                                            ],
                                            "type": "object",
                                            "properties": {
                                              "attribute": {
                                                "type": "string"
                                              },
                                              "channel": {
                                                "type": "string"
                                              },
                                              "locale": {
                                                "type": "string"
                                              }
                                            },
                                            "description": "The attribute value in which the PIM will generate the new transformed file, aka the target file. More details <a href='/concepts/asset-manager.html#target-file'>here</a>."
                                          },
                                          "operations": {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string"
                                              },
                                              "parameters": {
                                                "type": "object",
                                                "properties": {
                                                  "colorspace": {
                                                    "type": "string"
                                                  },
                                                  "width": {
                                                    "type": "integer"
                                                  },
                                                  "height": {
                                                    "type": "integer"
                                                  },
                                                  "ratio": {
                                                    "type": "integer"
                                                  },
                                                  "resolution-unit": {
                                                    "type": "string"
                                                  },
                                                  "resolution-x": {
                                                    "type": "integer"
                                                  },
                                                  "resolution-y": {
                                                    "type": "integer"
                                                  },
                                                  "quality": {
                                                    "type": "integer"
                                                  }
                                                }
                                              }
                                            },
                                            "description": "The transformations that should be applied to your source file to generate the target file. More details <a href='/concepts/asset-manager.html#transformation-operations'>here</a>.",
                                            "x-validation-rules": "Should contain at least one operation"
                                          }
                                        }
                                      },
                                      "x-validation-rules": "To know more about the validation of this property, take a look at our transformation format.",
                                      "x-from-version": "4.0"
                                    }
                                  },
                                  "example": {
                                    "code": "model_pictures",
                                    "labels": {
                                      "en_US": "Model pictures",
                                      "fr_FR": "Photographies en pied"
                                    },
                                    "attribute_as_main_media": "main_image",
                                    "naming_convention": {
                                      "source": {
                                        "property": "code"
                                      },
                                      "pattern": "/(?P<product_ref>.*)-.*/",
                                      "abort_asset_creation_on_error": true
                                    },
                                    "product_link_rules": [
                                      {
                                        "product_selections": [
                                          {
                                            "field": "sku",
                                            "operator": "EQUALS",
                                            "value": "{{product_ref}}"
                                          }
                                        ],
                                        "assign_assets_to": [
                                          {
                                            "attribute": "model_pictures",
                                            "mode": "replace"
                                          }
                                        ]
                                      }
                                    ],
                                    "transformations": [
                                      {
                                        "label": "Thumbnail plus black and white transformation",
                                        "filename_suffix": "_thumbnailBW",
                                        "source": {
                                          "attribute": "main_image"
                                        },
                                        "target": {
                                          "attribute": "thumbnail"
                                        },
                                        "operations": [
                                          {
                                            "type": "thumbnail",
                                            "parameters": {
                                              "width": 150,
                                              "height": 150
                                            }
                                          },
                                          {
                                            "type": "colorspace",
                                            "parameters": {
                                              "colorspace": "grey"
                                            }
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        }
                      },
                      "_links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the current page of resources"
                              }
                            }
                          },
                          "first": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the first page of resources"
                              }
                            }
                          },
                          "next": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the next page of resources"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "_links": {
                  "example": {
                    "self": {
                      "href": "https://demo.akeneo.com/api/rest/v1/asset-families"
                    },
                    "first": {
                      "href": "https://demo.akeneo.com/api/rest/v1/asset-families"
                    },
                    "next": {
                      "href": "https://demo.akeneo.com/api/rest/v1/asset-families?search_after=2x055w%3D%3D"
                    }
                  }
                },
                "_embedded": {
                  "example": {
                    "_items": [
                      {
                        "_links": {
                          "self": {
                            "href": "https://demo.akeneo.com/api/rest/v1/asset-families/packshots"
                          }
                        },
                        "code": "packshots",
                        "labels": {
                          "en_US": "Packshots",
                          "fr_FR": "Plans produit"
                        },
                        "“naming_convention”": {
                          "source": {
                            "property": "code"
                          },
                          "pattern": "/(?P<product_ref>.*)\\.jpg/",
                          "abort_asset_creation_on_error": true
                        },
                        "product_link_rules": [
                          {
                            "product_selections": [
                              {
                                "field": "sku",
                                "operator": "=",
                                "value": "{{product_ref}}"
                              }
                            ],
                            "assign_assets_to": [
                              {
                                "attribute": "{{my_product_attribute}}",
                                "mode": "add"
                              }
                            ]
                          }
                        ],
                        "transformations": [
                          {
                            "label": "My transformation",
                            "filename_suffix": "_thumbnailBW",
                            "source": {
                              "attribute": "main_image"
                            },
                            "target": {
                              "attribute": "thumbnail"
                            },
                            "operations": [
                              {
                                "type": "thumbnail",
                                "parameters": {
                                  "width": 150,
                                  "height": 150
                                }
                              },
                              {
                                "type": "colorspace",
                                "parameters": {
                                  "colorspace": "grey"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "_links": {
                          "self": {
                            "href": "https://demo.akeneo.com/api/rest/v1/asset-families/videos"
                          }
                        },
                        "code": "videos",
                        "labels": {
                          "en_US": "Videos",
                          "fr_FR": "Vidéos"
                        },
                        "product_link_rules": [
                          {
                            "product_selections": [
                              {
                                "field": "categories",
                                "operator": "IN",
                                "value": [
                                  "{{category}}"
                                ]
                              }
                            ],
                            "assign_assets_to": [
                              {
                                "attribute": "presentation_video",
                                "locale": "{{locale}}",
                                "mode": "replace"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "_links": {
                          "self": {
                            "href": "https://demo.akeneo.com/api/rest/v1/asset-families/user_guides"
                          }
                        },
                        "code": "user_guides",
                        "labels": {
                          "en_US": "User guides",
                          "fr_FR": "Guides utilisateur"
                        },
                        "product_link_rules": [
                          {
                            "product_selections": [
                              {
                                "field": "sku",
                                "operator": "=",
                                "value": "{{product_ref}}"
                              }
                            ],
                            "assign_assets_to": [
                              {
                                "attribute": "user_instructions",
                                "locale": "{{locale}}",
                                "mode": "replace"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "406": {
              "description": "Not Acceptable",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 406
                },
                "message": {
                  "example": "`xxx’ in `Accept` header is not valid. Only `application/json` is allowed."
                }
              },
              "x-details": "The `Accept` header is not `application/json` but it should"
            }
          },
          "x-versions": [
            "3.2",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-ee": true
        }
      },
      "/api/rest/v1/asset-families/{code}": {
        "get": {
          "tags": [
            "Asset family"
          ],
          "summary": "Get an asset family",
          "description": "This endpoint allows you to get the information about a given asset family.",
          "operationId": "get_asset_family__code_",
          "parameters": [
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "required": [
                      "code"
                    ],
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Asset family code",
                        "x-immutable": true
                      },
                      "labels": {
                        "type": "object",
                        "properties": {
                          "localeCode": {
                            "type": "string",
                            "description": "Asset family label for the locale `localeCode`"
                          }
                        },
                        "description": "Asset family labels for each locale",
                        "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                      },
                      "attribute_as_main_media": {
                        "type": "string",
                        "description": "Attribute code that is used as the main media of the asset family.",
                        "default": "First media file or media link attribute that was created",
                        "x-validation-rules": "It should be the code of an attribute that belongs to this family, and it must be a media file or a media link attribute type."
                      },
                      "naming_convention": {
                        "type": "object",
                        "properties": {
                          "source": {
                            "type": "object",
                            "properties": {},
                            "description": "The string on which the naming convention should be applied. More details <a href='/concepts/asset-manager.html#source'>here</a>."
                          },
                          "pattern": {
                            "type": "string",
                            "description": "The regular expression that should be applied on the source. More details <a href='/concepts/asset-manager.html#pattern'>here</a>."
                          },
                          "abort_asset_creation_on_error": {
                            "type": "boolean",
                            "description": "Whether the asset should be created if the naming convention failed to apply. More details <a href='/concepts/asset-manager.html#abort-asset-creation-on-error'>here</a>."
                          }
                        },
                        "description": "The naming convention ran over the asset code or the main media filename upon each asset creation, in order to automatically set several values in asset attributes. To learn more and see the format of this property, take a look at <a href='/concepts/asset-manager.html#focus-on-the-naming-convention'>here</a>.",
                        "x-validation-rules": "To know more about the validation of this property, take a look at our naming convention format."
                      },
                      "product_link_rules": {
                        "type": "array",
                        "description": "The rules that will be run after the asset creation, in order to automatically link the assets of this family to a set of products. To understand the format of this property, see <a href='/concepts/asset-manager.html#focus-on-the-product-link-rule'>here</a>.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "product_selections": {
                              "type": "array",
                              "description": "The product selection to which the assets of the asset family to be automatically linked. More details <a href='/concepts/asset-manager.html#product-selection'>here</a>.",
                              "items": {
                                "required": [
                                  "field",
                                  "operator",
                                  "value"
                                ],
                                "type": "object",
                                "properties": {
                                  "field": {
                                    "type": "string"
                                  },
                                  "operator": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  },
                                  "locale": {
                                    "type": "string"
                                  },
                                  "channel": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "assign_assets_to": {
                              "type": "array",
                              "description": "The product value in which your assets will be assigned. More details <a href='/concepts/asset-manager.html#product-value-assignment'>here</a>.",
                              "items": {
                                "required": [
                                  "attribute",
                                  "mode"
                                ],
                                "type": "object",
                                "properties": {
                                  "attribute": {
                                    "type": "string"
                                  },
                                  "locale": {
                                    "type": "string"
                                  },
                                  "channel": {
                                    "type": "string"
                                  },
                                  "mode": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "x-validation-rules": "To know more about the validation of this property, take a look at our product link rule format."
                      },
                      "transformations": {
                        "type": "array",
                        "description": "The transformations to perform on source files in order to generate new files into your asset attributes (only available since v4.0). To understand the format of this property, see <a href='/concepts/asset-manager.html#focus-on-the-transformations'>here</a>.",
                        "items": {
                          "required": [
                            "label",
                            "operations",
                            "source",
                            "target"
                          ],
                          "type": "object",
                          "properties": {
                            "label": {
                              "type": "string",
                              "description": "The name of the transformation"
                            },
                            "filename_suffix": {
                              "type": "string",
                              "description": "The suffix that will be appended to the source filename to generate the target filename. More details <a href='/concepts/asset-manager.html#target-filename'>here</a>."
                            },
                            "filename_prefix": {
                              "type": "string",
                              "description": "The prefix that will be prepended to the source filename to generate the target filename. More details <a href='/concepts/asset-manager.html#target-filename'>here</a>."
                            },
                            "source": {
                              "required": [
                                "attribute",
                                "channel",
                                "locale"
                              ],
                              "type": "object",
                              "properties": {
                                "attribute": {
                                  "type": "string"
                                },
                                "channel": {
                                  "type": "string"
                                },
                                "locale": {
                                  "type": "string"
                                }
                              },
                              "description": "The attribute value in which is stored the media file you want to use as the source file for your transformation. More details <a href='/concepts/asset-manager.html#source-file'>here</a>."
                            },
                            "target": {
                              "required": [
                                "attribute",
                                "channel",
                                "locale"
                              ],
                              "type": "object",
                              "properties": {
                                "attribute": {
                                  "type": "string"
                                },
                                "channel": {
                                  "type": "string"
                                },
                                "locale": {
                                  "type": "string"
                                }
                              },
                              "description": "The attribute value in which the PIM will generate the new transformed file, aka the target file. More details <a href='/concepts/asset-manager.html#target-file'>here</a>."
                            },
                            "operations": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string"
                                },
                                "parameters": {
                                  "type": "object",
                                  "properties": {
                                    "colorspace": {
                                      "type": "string"
                                    },
                                    "width": {
                                      "type": "integer"
                                    },
                                    "height": {
                                      "type": "integer"
                                    },
                                    "ratio": {
                                      "type": "integer"
                                    },
                                    "resolution-unit": {
                                      "type": "string"
                                    },
                                    "resolution-x": {
                                      "type": "integer"
                                    },
                                    "resolution-y": {
                                      "type": "integer"
                                    },
                                    "quality": {
                                      "type": "integer"
                                    }
                                  }
                                }
                              },
                              "description": "The transformations that should be applied to your source file to generate the target file. More details <a href='/concepts/asset-manager.html#transformation-operations'>here</a>.",
                              "x-validation-rules": "Should contain at least one operation"
                            }
                          }
                        },
                        "x-validation-rules": "To know more about the validation of this property, take a look at our transformation format.",
                        "x-from-version": "4.0"
                      }
                    },
                    "example": {
                      "code": "model_pictures",
                      "labels": {
                        "en_US": "Model pictures",
                        "fr_FR": "Photographies en pied"
                      },
                      "attribute_as_main_media": "main_image",
                      "naming_convention": {
                        "source": {
                          "property": "code"
                        },
                        "pattern": "/(?P<product_ref>.*)-.*/",
                        "abort_asset_creation_on_error": true
                      },
                      "product_link_rules": [
                        {
                          "product_selections": [
                            {
                              "field": "sku",
                              "operator": "EQUALS",
                              "value": "{{product_ref}}"
                            }
                          ],
                          "assign_assets_to": [
                            {
                              "attribute": "model_pictures",
                              "mode": "replace"
                            }
                          ]
                        }
                      ],
                      "transformations": [
                        {
                          "label": "Thumbnail plus black and white transformation",
                          "filename_suffix": "_thumbnailBW",
                          "source": {
                            "attribute": "main_image"
                          },
                          "target": {
                            "attribute": "thumbnail"
                          },
                          "operations": [
                            {
                              "type": "thumbnail",
                              "parameters": {
                                "width": 150,
                                "height": 150
                              }
                            },
                            {
                              "type": "colorspace",
                              "parameters": {
                                "colorspace": "grey"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              },
              "x-details": "Returns the content of the asset family in JSON format."
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "404": {
              "description": "Resource not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 404
                },
                "message": {
                  "example": "Resource `my_resource_code` does not exist."
                }
              },
              "x-details": "The resource code given in the URI does not correspond to any existing PIM resource"
            },
            "406": {
              "description": "Not Acceptable",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 406
                },
                "message": {
                  "example": "`xxx’ in `Accept` header is not valid. Only `application/json` is allowed."
                }
              },
              "x-details": "The `Accept` header is not `application/json` but it should"
            }
          },
          "x-versions": [
            "3.2",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-ee": true
        },
        "patch": {
          "tags": [
            "Asset family"
          ],
          "summary": "Update/create an asset family",
          "description": "This endpoint allows you to update a given asset family. Note that if the asset family does not already exist, it creates it.",
          "operationId": "patch_asset_family__code_",
          "parameters": [
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "code"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Asset family code",
                      "x-immutable": true
                    },
                    "labels": {
                      "type": "object",
                      "properties": {
                        "localeCode": {
                          "type": "string",
                          "description": "Asset family label for the locale `localeCode`"
                        }
                      },
                      "description": "Asset family labels for each locale",
                      "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                    },
                    "attribute_as_main_media": {
                      "type": "string",
                      "description": "Attribute code that is used as the main media of the asset family.",
                      "default": "First media file or media link attribute that was created",
                      "x-validation-rules": "It should be the code of an attribute that belongs to this family, and it must be a media file or a media link attribute type."
                    },
                    "naming_convention": {
                      "type": "object",
                      "properties": {
                        "source": {
                          "type": "object",
                          "properties": {},
                          "description": "The string on which the naming convention should be applied. More details <a href='/concepts/asset-manager.html#source'>here</a>."
                        },
                        "pattern": {
                          "type": "string",
                          "description": "The regular expression that should be applied on the source. More details <a href='/concepts/asset-manager.html#pattern'>here</a>."
                        },
                        "abort_asset_creation_on_error": {
                          "type": "boolean",
                          "description": "Whether the asset should be created if the naming convention failed to apply. More details <a href='/concepts/asset-manager.html#abort-asset-creation-on-error'>here</a>."
                        }
                      },
                      "description": "The naming convention ran over the asset code or the main media filename upon each asset creation, in order to automatically set several values in asset attributes. To learn more and see the format of this property, take a look at <a href='/concepts/asset-manager.html#focus-on-the-naming-convention'>here</a>.",
                      "x-validation-rules": "To know more about the validation of this property, take a look at our naming convention format."
                    },
                    "product_link_rules": {
                      "type": "array",
                      "description": "The rules that will be run after the asset creation, in order to automatically link the assets of this family to a set of products. To understand the format of this property, see <a href='/concepts/asset-manager.html#focus-on-the-product-link-rule'>here</a>.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "product_selections": {
                            "type": "array",
                            "description": "The product selection to which the assets of the asset family to be automatically linked. More details <a href='/concepts/asset-manager.html#product-selection'>here</a>.",
                            "items": {
                              "required": [
                                "field",
                                "operator",
                                "value"
                              ],
                              "type": "object",
                              "properties": {
                                "field": {
                                  "type": "string"
                                },
                                "operator": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "string"
                                },
                                "locale": {
                                  "type": "string"
                                },
                                "channel": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "assign_assets_to": {
                            "type": "array",
                            "description": "The product value in which your assets will be assigned. More details <a href='/concepts/asset-manager.html#product-value-assignment'>here</a>.",
                            "items": {
                              "required": [
                                "attribute",
                                "mode"
                              ],
                              "type": "object",
                              "properties": {
                                "attribute": {
                                  "type": "string"
                                },
                                "locale": {
                                  "type": "string"
                                },
                                "channel": {
                                  "type": "string"
                                },
                                "mode": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "x-validation-rules": "To know more about the validation of this property, take a look at our product link rule format."
                    },
                    "transformations": {
                      "type": "array",
                      "description": "The transformations to perform on source files in order to generate new files into your asset attributes (only available since v4.0). To understand the format of this property, see <a href='/concepts/asset-manager.html#focus-on-the-transformations'>here</a>.",
                      "items": {
                        "required": [
                          "label",
                          "operations",
                          "source",
                          "target"
                        ],
                        "type": "object",
                        "properties": {
                          "label": {
                            "type": "string",
                            "description": "The name of the transformation"
                          },
                          "filename_suffix": {
                            "type": "string",
                            "description": "The suffix that will be appended to the source filename to generate the target filename. More details <a href='/concepts/asset-manager.html#target-filename'>here</a>."
                          },
                          "filename_prefix": {
                            "type": "string",
                            "description": "The prefix that will be prepended to the source filename to generate the target filename. More details <a href='/concepts/asset-manager.html#target-filename'>here</a>."
                          },
                          "source": {
                            "required": [
                              "attribute",
                              "channel",
                              "locale"
                            ],
                            "type": "object",
                            "properties": {
                              "attribute": {
                                "type": "string"
                              },
                              "channel": {
                                "type": "string"
                              },
                              "locale": {
                                "type": "string"
                              }
                            },
                            "description": "The attribute value in which is stored the media file you want to use as the source file for your transformation. More details <a href='/concepts/asset-manager.html#source-file'>here</a>."
                          },
                          "target": {
                            "required": [
                              "attribute",
                              "channel",
                              "locale"
                            ],
                            "type": "object",
                            "properties": {
                              "attribute": {
                                "type": "string"
                              },
                              "channel": {
                                "type": "string"
                              },
                              "locale": {
                                "type": "string"
                              }
                            },
                            "description": "The attribute value in which the PIM will generate the new transformed file, aka the target file. More details <a href='/concepts/asset-manager.html#target-file'>here</a>."
                          },
                          "operations": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string"
                              },
                              "parameters": {
                                "type": "object",
                                "properties": {
                                  "colorspace": {
                                    "type": "string"
                                  },
                                  "width": {
                                    "type": "integer"
                                  },
                                  "height": {
                                    "type": "integer"
                                  },
                                  "ratio": {
                                    "type": "integer"
                                  },
                                  "resolution-unit": {
                                    "type": "string"
                                  },
                                  "resolution-x": {
                                    "type": "integer"
                                  },
                                  "resolution-y": {
                                    "type": "integer"
                                  },
                                  "quality": {
                                    "type": "integer"
                                  }
                                }
                              }
                            },
                            "description": "The transformations that should be applied to your source file to generate the target file. More details <a href='/concepts/asset-manager.html#transformation-operations'>here</a>.",
                            "x-validation-rules": "Should contain at least one operation"
                          }
                        }
                      },
                      "x-validation-rules": "To know more about the validation of this property, take a look at our transformation format.",
                      "x-from-version": "4.0"
                    }
                  },
                  "example": {
                    "code": "model_pictures",
                    "labels": {
                      "en_US": "Model pictures",
                      "fr_FR": "Photographies en pied"
                    },
                    "attribute_as_main_media": "main_image",
                    "naming_convention": {
                      "source": {
                        "property": "code"
                      },
                      "pattern": "/(?P<product_ref>.*)-.*/",
                      "abort_asset_creation_on_error": true
                    },
                    "product_link_rules": [
                      {
                        "product_selections": [
                          {
                            "field": "sku",
                            "operator": "EQUALS",
                            "value": "{{product_ref}}"
                          }
                        ],
                        "assign_assets_to": [
                          {
                            "attribute": "model_pictures",
                            "mode": "replace"
                          }
                        ]
                      }
                    ],
                    "transformations": [
                      {
                        "label": "Thumbnail plus black and white transformation",
                        "filename_suffix": "_thumbnailBW",
                        "source": {
                          "attribute": "main_image"
                        },
                        "target": {
                          "attribute": "thumbnail"
                        },
                        "operations": [
                          {
                            "type": "thumbnail",
                            "parameters": {
                              "width": 150,
                              "height": 150
                            }
                          },
                          {
                            "type": "colorspace",
                            "parameters": {
                              "colorspace": "grey"
                            }
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "Created",
              "headers": {
                "Location": {
                  "description": "URI of the created resource",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {},
              "x-details": "Means that the creation was successful"
            },
            "204": {
              "description": "No content to return",
              "headers": {
                "Location": {
                  "description": "URI of the updated resource",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {},
              "x-details": "Means that the update was successful"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "415": {
              "description": "Unsupported Media type",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 415
                },
                "message": {
                  "example": "`xxx’ in `Content-Type’ header is not valid.  Only `application/json’ is allowed."
                }
              },
              "x-details": "The `Content-Type` header has to be `application/json`"
            },
            "422": {
              "description": "Unprocessable entity",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 422
                },
                "message": {
                  "example": "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
                },
                "_links": {
                  "example": {
                    "documentation": {
                      "href": "http://api.akeneo.com/api-reference.html"
                    }
                  }
                }
              },
              "x-details": "The validation of the entity given in the body of the request failed"
            }
          },
          "x-versions": [
            "3.2",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-ee": true,
          "x-codegen-request-body-name": "body"
        }
      },
      "/api/rest/v1/asset-families/{asset_family_code}/attributes": {
        "get": {
          "tags": [
            "Asset attribute"
          ],
          "summary": "Get the list of attributes of a given asset family",
          "description": "This endpoint allows you to get the list of attributes of a given asset family.",
          "operationId": "get_asset_families__code__attributes",
          "parameters": [
            {
              "name": "asset_family_code",
              "in": "path",
              "description": "Code of the asset family",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Return the attributes of the given asset family",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "required": [
                        "code",
                        "media_type",
                        "type"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Attribute code",
                          "x-immutable": true
                        },
                        "labels": {
                          "type": "object",
                          "properties": {
                            "localeCode": {
                              "type": "string",
                              "description": "Attribute label for the locale `localeCode`"
                            }
                          },
                          "description": "Attribute labels for each locale",
                          "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                        },
                        "type": {
                          "type": "string",
                          "description": "Attribute type. See <a href='/concepts/asset-manager.html#asset-attribute'>type</a> section for more details.",
                          "enum": [
                            "text",
                            "media_link",
                            "number",
                            "media_file",
                            "single_option",
                            "multiple_options",
                            "reference_entity_single_link",
                            "reference_entity_multiple_links",
                            "boolean"
                          ],
                          "x-immutable": true
                        },
                        "value_per_locale": {
                          "type": "boolean",
                          "description": "Whether the attribute is localizable, i.e. can have one value by locale",
                          "default": false,
                          "x-immutable": true
                        },
                        "value_per_channel": {
                          "type": "boolean",
                          "description": "Whether the attribute is scopable, i.e. can have one value by channel",
                          "default": false,
                          "x-immutable": true
                        },
                        "is_required_for_completeness": {
                          "type": "boolean",
                          "description": "Whether the attribute should be part of the record's completeness calculation",
                          "default": false
                        },
                        "is_read_only": {
                          "type": "boolean",
                          "description": "Whether the attribute should be in read only mode only in the UI, but you can still update it with the API",
                          "default": false
                        },
                        "max_characters": {
                          "type": "integer",
                          "description": "Maximum number of characters allowed for the value of the attribute when the attribute type is `text`",
                          "x-warning": "Only for `text` attribute type"
                        },
                        "is_textarea": {
                          "type": "boolean",
                          "description": "Whether the UI should display a text area instead of a simple field when the attribute type is `text`",
                          "default": false,
                          "x-warning": "Only for `text` attribute type"
                        },
                        "is_rich_text_editor": {
                          "type": "boolean",
                          "description": "Whether the UI should display a rich text editor instead of a simple text area when the attribute type is `text`",
                          "x-validation-rules": "Required when the property `is_textarea` is equal to `true`",
                          "x-warning": "Only for `text` attribute type"
                        },
                        "validation_rule": {
                          "type": "string",
                          "description": "Validation rule type used to validate the attribute value when the attribute type is `text`",
                          "default": "none",
                          "enum": [
                            "email",
                            "url",
                            "regexp",
                            "none"
                          ],
                          "x-warning": "Only for `text` attribute type"
                        },
                        "validation_regexp": {
                          "type": "string",
                          "description": "Regexp expression used to validate the attribute value when the attribute type is `text`",
                          "default": "null",
                          "x-validation-rules": "Required when the property `validation_rule` is equal to `regexp`",
                          "x-warning": "Only for `text` attribute type"
                        },
                        "allowed_extensions": {
                          "type": "array",
                          "description": "Extensions allowed when the attribute type is `media_file`",
                          "items": {
                            "type": "string"
                          },
                          "x-warning": "Only for `media_file` attribute type"
                        },
                        "max_file_size": {
                          "type": "string",
                          "description": "Max file size in MB when the attribute type is `media_file`",
                          "default": "null",
                          "x-warning": "Only for `media_file` attribute type"
                        },
                        "decimals_allowed": {
                          "type": "boolean",
                          "description": "Whether decimals are allowed when the attribute type is `number`",
                          "default": false,
                          "x-warning": "Only for `number` attribute type"
                        },
                        "min_value": {
                          "type": "string",
                          "description": "Minimum value allowed when the attribute type is `number`",
                          "default": "null",
                          "x-validation-rules": "The minimum value must be lower than the maximum value",
                          "x-warning": "Only for `number` attribute type"
                        },
                        "max_value": {
                          "type": "string",
                          "description": "Maximum value allowed when the attribute type is `number`",
                          "default": "null",
                          "x-validation-rules": "The maximum value must be greater than the minimum value",
                          "x-warning": "Only for `number` attribute type"
                        },
                        "media_type": {
                          "type": "string",
                          "description": "For the `media_link` attribute type, it is the type of the media behind the url, to allow its preview in the PIM. For the `media_file` attribute type, it is the type of the file.",
                          "enum": [
                            "image",
                            "pdf",
                            "youtube",
                            "vimeo",
                            "other"
                          ],
                          "x-warning": "Only required for `media_link` and `media_file` attribute types"
                        },
                        "prefix": {
                          "type": "string",
                          "description": "Prefix of the `media_link` attribute type. The common url root that prefixes the link to the media",
                          "default": "null",
                          "x-warning": "Only for `media_link` attribute type"
                        },
                        "suffix": {
                          "type": "string",
                          "description": "Suffix of the `media_link` attribute type. The common url suffix for the media",
                          "default": "null",
                          "x-warning": "Only for `media_link` attribute type"
                        }
                      },
                      "example": {
                        "code": "model_is_wearing_size",
                        "labels": {
                          "en_US": "Model is wearing size",
                          "fr_FR": "Le mannequin porte la taille"
                        },
                        "type": "single_option",
                        "value_per_locale": false,
                        "value_per_channel": false,
                        "is_required_for_completeness": true
                      }
                    }
                  }
                }
              },
              "x-no-entity": true
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "406": {
              "description": "Not Acceptable",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 406
                },
                "message": {
                  "example": "`xxx’ in `Accept` header is not valid. Only `application/json` is allowed."
                }
              },
              "x-details": "The `Accept` header is not `application/json` but it should"
            }
          },
          "x-versions": [
            "3.2",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-ee": true
        }
      },
      "/api/rest/v1/asset-families/{asset_family_code}/attributes/{code}": {
        "get": {
          "tags": [
            "Asset attribute"
          ],
          "summary": "Get an attribute of a given asset family",
          "description": "This endpoint allows you to get the information about a given attribute for a given asset family.",
          "operationId": "get_asset_family_attributes__code_",
          "parameters": [
            {
              "name": "asset_family_code",
              "in": "path",
              "description": "Code of the asset family",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "required": [
                      "code",
                      "media_type",
                      "type"
                    ],
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Attribute code",
                        "x-immutable": true
                      },
                      "labels": {
                        "type": "object",
                        "properties": {
                          "localeCode": {
                            "type": "string",
                            "description": "Attribute label for the locale `localeCode`"
                          }
                        },
                        "description": "Attribute labels for each locale",
                        "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                      },
                      "type": {
                        "type": "string",
                        "description": "Attribute type. See <a href='/concepts/asset-manager.html#asset-attribute'>type</a> section for more details.",
                        "enum": [
                          "text",
                          "media_link",
                          "number",
                          "media_file",
                          "single_option",
                          "multiple_options",
                          "reference_entity_single_link",
                          "reference_entity_multiple_links",
                          "boolean"
                        ],
                        "x-immutable": true
                      },
                      "value_per_locale": {
                        "type": "boolean",
                        "description": "Whether the attribute is localizable, i.e. can have one value by locale",
                        "default": false,
                        "x-immutable": true
                      },
                      "value_per_channel": {
                        "type": "boolean",
                        "description": "Whether the attribute is scopable, i.e. can have one value by channel",
                        "default": false,
                        "x-immutable": true
                      },
                      "is_required_for_completeness": {
                        "type": "boolean",
                        "description": "Whether the attribute should be part of the record's completeness calculation",
                        "default": false
                      },
                      "is_read_only": {
                        "type": "boolean",
                        "description": "Whether the attribute should be in read only mode only in the UI, but you can still update it with the API",
                        "default": false
                      },
                      "max_characters": {
                        "type": "integer",
                        "description": "Maximum number of characters allowed for the value of the attribute when the attribute type is `text`",
                        "x-warning": "Only for `text` attribute type"
                      },
                      "is_textarea": {
                        "type": "boolean",
                        "description": "Whether the UI should display a text area instead of a simple field when the attribute type is `text`",
                        "default": false,
                        "x-warning": "Only for `text` attribute type"
                      },
                      "is_rich_text_editor": {
                        "type": "boolean",
                        "description": "Whether the UI should display a rich text editor instead of a simple text area when the attribute type is `text`",
                        "x-validation-rules": "Required when the property `is_textarea` is equal to `true`",
                        "x-warning": "Only for `text` attribute type"
                      },
                      "validation_rule": {
                        "type": "string",
                        "description": "Validation rule type used to validate the attribute value when the attribute type is `text`",
                        "default": "none",
                        "enum": [
                          "email",
                          "url",
                          "regexp",
                          "none"
                        ],
                        "x-warning": "Only for `text` attribute type"
                      },
                      "validation_regexp": {
                        "type": "string",
                        "description": "Regexp expression used to validate the attribute value when the attribute type is `text`",
                        "default": "null",
                        "x-validation-rules": "Required when the property `validation_rule` is equal to `regexp`",
                        "x-warning": "Only for `text` attribute type"
                      },
                      "allowed_extensions": {
                        "type": "array",
                        "description": "Extensions allowed when the attribute type is `media_file`",
                        "items": {
                          "type": "string"
                        },
                        "x-warning": "Only for `media_file` attribute type"
                      },
                      "max_file_size": {
                        "type": "string",
                        "description": "Max file size in MB when the attribute type is `media_file`",
                        "default": "null",
                        "x-warning": "Only for `media_file` attribute type"
                      },
                      "decimals_allowed": {
                        "type": "boolean",
                        "description": "Whether decimals are allowed when the attribute type is `number`",
                        "default": false,
                        "x-warning": "Only for `number` attribute type"
                      },
                      "min_value": {
                        "type": "string",
                        "description": "Minimum value allowed when the attribute type is `number`",
                        "default": "null",
                        "x-validation-rules": "The minimum value must be lower than the maximum value",
                        "x-warning": "Only for `number` attribute type"
                      },
                      "max_value": {
                        "type": "string",
                        "description": "Maximum value allowed when the attribute type is `number`",
                        "default": "null",
                        "x-validation-rules": "The maximum value must be greater than the minimum value",
                        "x-warning": "Only for `number` attribute type"
                      },
                      "media_type": {
                        "type": "string",
                        "description": "For the `media_link` attribute type, it is the type of the media behind the url, to allow its preview in the PIM. For the `media_file` attribute type, it is the type of the file.",
                        "enum": [
                          "image",
                          "pdf",
                          "youtube",
                          "vimeo",
                          "other"
                        ],
                        "x-warning": "Only required for `media_link` and `media_file` attribute types"
                      },
                      "prefix": {
                        "type": "string",
                        "description": "Prefix of the `media_link` attribute type. The common url root that prefixes the link to the media",
                        "default": "null",
                        "x-warning": "Only for `media_link` attribute type"
                      },
                      "suffix": {
                        "type": "string",
                        "description": "Suffix of the `media_link` attribute type. The common url suffix for the media",
                        "default": "null",
                        "x-warning": "Only for `media_link` attribute type"
                      }
                    },
                    "example": {
                      "code": "model_is_wearing_size",
                      "labels": {
                        "en_US": "Model is wearing size",
                        "fr_FR": "Le mannequin porte la taille"
                      },
                      "type": "single_option",
                      "value_per_locale": false,
                      "value_per_channel": false,
                      "is_required_for_completeness": true
                    }
                  }
                }
              },
              "x-details": "Returns the content of the asset attribute in JSON format"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "404": {
              "description": "Resource not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 404
                },
                "message": {
                  "example": "Resource `my_resource_code` does not exist."
                }
              },
              "x-details": "The resource code given in the URI does not correspond to any existing PIM resource"
            },
            "406": {
              "description": "Not Acceptable",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 406
                },
                "message": {
                  "example": "`xxx’ in `Accept` header is not valid. Only `application/json` is allowed."
                }
              },
              "x-details": "The `Accept` header is not `application/json` but it should"
            }
          },
          "x-versions": [
            "3.2",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-ee": true
        },
        "patch": {
          "tags": [
            "Asset attribute"
          ],
          "summary": "Update/create an attribute of a given asset family",
          "description": "This endpoint allows you to update a given attribute for a given asset family. Note that if the attribute does not already exist for the given asset family, it creates it.",
          "operationId": "patch_asset_family_attributes__code_",
          "parameters": [
            {
              "name": "asset_family_code",
              "in": "path",
              "description": "Code of the asset family",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "code",
                    "media_type",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Attribute code",
                      "x-immutable": true
                    },
                    "labels": {
                      "type": "object",
                      "properties": {
                        "localeCode": {
                          "type": "string",
                          "description": "Attribute label for the locale `localeCode`"
                        }
                      },
                      "description": "Attribute labels for each locale",
                      "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                    },
                    "type": {
                      "type": "string",
                      "description": "Attribute type. See <a href='/concepts/asset-manager.html#asset-attribute'>type</a> section for more details.",
                      "enum": [
                        "text",
                        "media_link",
                        "number",
                        "media_file",
                        "single_option",
                        "multiple_options",
                        "reference_entity_single_link",
                        "reference_entity_multiple_links",
                        "boolean"
                      ],
                      "x-immutable": true
                    },
                    "value_per_locale": {
                      "type": "boolean",
                      "description": "Whether the attribute is localizable, i.e. can have one value by locale",
                      "default": false,
                      "x-immutable": true
                    },
                    "value_per_channel": {
                      "type": "boolean",
                      "description": "Whether the attribute is scopable, i.e. can have one value by channel",
                      "default": false,
                      "x-immutable": true
                    },
                    "is_required_for_completeness": {
                      "type": "boolean",
                      "description": "Whether the attribute should be part of the record's completeness calculation",
                      "default": false
                    },
                    "is_read_only": {
                      "type": "boolean",
                      "description": "Whether the attribute should be in read only mode only in the UI, but you can still update it with the API",
                      "default": false
                    },
                    "max_characters": {
                      "type": "integer",
                      "description": "Maximum number of characters allowed for the value of the attribute when the attribute type is `text`",
                      "x-warning": "Only for `text` attribute type"
                    },
                    "is_textarea": {
                      "type": "boolean",
                      "description": "Whether the UI should display a text area instead of a simple field when the attribute type is `text`",
                      "default": false,
                      "x-warning": "Only for `text` attribute type"
                    },
                    "is_rich_text_editor": {
                      "type": "boolean",
                      "description": "Whether the UI should display a rich text editor instead of a simple text area when the attribute type is `text`",
                      "x-validation-rules": "Required when the property `is_textarea` is equal to `true`",
                      "x-warning": "Only for `text` attribute type"
                    },
                    "validation_rule": {
                      "type": "string",
                      "description": "Validation rule type used to validate the attribute value when the attribute type is `text`",
                      "default": "none",
                      "enum": [
                        "email",
                        "url",
                        "regexp",
                        "none"
                      ],
                      "x-warning": "Only for `text` attribute type"
                    },
                    "validation_regexp": {
                      "type": "string",
                      "description": "Regexp expression used to validate the attribute value when the attribute type is `text`",
                      "default": "null",
                      "x-validation-rules": "Required when the property `validation_rule` is equal to `regexp`",
                      "x-warning": "Only for `text` attribute type"
                    },
                    "allowed_extensions": {
                      "type": "array",
                      "description": "Extensions allowed when the attribute type is `media_file`",
                      "items": {
                        "type": "string"
                      },
                      "x-warning": "Only for `media_file` attribute type"
                    },
                    "max_file_size": {
                      "type": "string",
                      "description": "Max file size in MB when the attribute type is `media_file`",
                      "default": "null",
                      "x-warning": "Only for `media_file` attribute type"
                    },
                    "decimals_allowed": {
                      "type": "boolean",
                      "description": "Whether decimals are allowed when the attribute type is `number`",
                      "default": false,
                      "x-warning": "Only for `number` attribute type"
                    },
                    "min_value": {
                      "type": "string",
                      "description": "Minimum value allowed when the attribute type is `number`",
                      "default": "null",
                      "x-validation-rules": "The minimum value must be lower than the maximum value",
                      "x-warning": "Only for `number` attribute type"
                    },
                    "max_value": {
                      "type": "string",
                      "description": "Maximum value allowed when the attribute type is `number`",
                      "default": "null",
                      "x-validation-rules": "The maximum value must be greater than the minimum value",
                      "x-warning": "Only for `number` attribute type"
                    },
                    "media_type": {
                      "type": "string",
                      "description": "For the `media_link` attribute type, it is the type of the media behind the url, to allow its preview in the PIM. For the `media_file` attribute type, it is the type of the file.",
                      "enum": [
                        "image",
                        "pdf",
                        "youtube",
                        "vimeo",
                        "other"
                      ],
                      "x-warning": "Only required for `media_link` and `media_file` attribute types"
                    },
                    "prefix": {
                      "type": "string",
                      "description": "Prefix of the `media_link` attribute type. The common url root that prefixes the link to the media",
                      "default": "null",
                      "x-warning": "Only for `media_link` attribute type"
                    },
                    "suffix": {
                      "type": "string",
                      "description": "Suffix of the `media_link` attribute type. The common url suffix for the media",
                      "default": "null",
                      "x-warning": "Only for `media_link` attribute type"
                    }
                  },
                  "example": {
                    "code": "model_is_wearing_size",
                    "labels": {
                      "en_US": "Model is wearing size",
                      "fr_FR": "Le mannequin porte la taille"
                    },
                    "type": "single_option",
                    "value_per_locale": false,
                    "value_per_channel": false,
                    "is_required_for_completeness": true
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "Created",
              "headers": {
                "Location": {
                  "description": "URI of the created resource",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {},
              "x-details": "Means that the creation was successful"
            },
            "204": {
              "description": "No content to return",
              "headers": {
                "Location": {
                  "description": "URI of the updated resource",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {},
              "x-details": "Means that the update was successful"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "415": {
              "description": "Unsupported Media type",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 415
                },
                "message": {
                  "example": "`xxx’ in `Content-Type’ header is not valid.  Only `application/json’ is allowed."
                }
              },
              "x-details": "The `Content-Type` header has to be `application/json`"
            },
            "422": {
              "description": "Unprocessable entity",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 422
                },
                "message": {
                  "example": "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
                },
                "_links": {
                  "example": {
                    "documentation": {
                      "href": "http://api.akeneo.com/api-reference.html"
                    }
                  }
                }
              },
              "x-details": "The validation of the entity given in the body of the request failed"
            }
          },
          "x-versions": [
            "3.2",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-ee": true,
          "x-codegen-request-body-name": "body"
        }
      },
      "/api/rest/v1/asset-families/{asset_family_code}/attributes/{attribute_code}/options": {
        "get": {
          "tags": [
            "Asset attribute option"
          ],
          "summary": "Get a list of attribute options of a given attribute for a given asset family",
          "description": "This endpoint allows you to get a list of attribute options for a given asset family.",
          "operationId": "get_asset_family_attributes__attribute_code__options",
          "parameters": [
            {
              "name": "asset_family_code",
              "in": "path",
              "description": "Code of the asset family",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "attribute_code",
              "in": "path",
              "description": "Code of the attribute",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Return the options of the given attribute of the given asset family",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "required": [
                        "code"
                      ],
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Attribute's option code",
                          "x-immutable": true
                        },
                        "labels": {
                          "type": "object",
                          "properties": {
                            "localeCode": {
                              "type": "string",
                              "description": "Attribute label for the locale `localeCode`"
                            }
                          },
                          "description": "Attribute labels for each locale",
                          "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                        }
                      },
                      "example": {
                        "code": "small",
                        "labels": {
                          "en_US": "S",
                          "fr_FR": "S"
                        }
                      }
                    }
                  }
                }
              },
              "x-no-entity": true
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "406": {
              "description": "Not Acceptable",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 406
                },
                "message": {
                  "example": "`xxx’ in `Accept` header is not valid. Only `application/json` is allowed."
                }
              },
              "x-details": "The `Accept` header is not `application/json` but it should"
            }
          },
          "x-versions": [
            "3.2",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-ee": true
        }
      },
      "/api/rest/v1/asset-families/{asset_family_code}/attributes/{attribute_code}/options/{code}": {
        "get": {
          "tags": [
            "Asset attribute option"
          ],
          "summary": "Get an attribute option for a given attribute of a given asset family",
          "description": "This endpoint allows you to get the information about a given asset attribute option.",
          "operationId": "get_asset_attributes__attribute_code__options__code_",
          "parameters": [
            {
              "name": "asset_family_code",
              "in": "path",
              "description": "Code of the asset family",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "attribute_code",
              "in": "path",
              "description": "Code of the attribute",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "required": [
                      "code"
                    ],
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Attribute's option code",
                        "x-immutable": true
                      },
                      "labels": {
                        "type": "object",
                        "properties": {
                          "localeCode": {
                            "type": "string",
                            "description": "Attribute label for the locale `localeCode`"
                          }
                        },
                        "description": "Attribute labels for each locale",
                        "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                      }
                    },
                    "example": {
                      "code": "small",
                      "labels": {
                        "en_US": "S",
                        "fr_FR": "S"
                      }
                    }
                  }
                }
              },
              "x-details": "Returns the content of the asset attribute option in JSON format"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "404": {
              "description": "Resource not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 404
                },
                "message": {
                  "example": "Resource `my_resource_code` does not exist."
                }
              },
              "x-details": "The resource code given in the URI does not correspond to any existing PIM resource"
            },
            "406": {
              "description": "Not Acceptable",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 406
                },
                "message": {
                  "example": "`xxx’ in `Accept` header is not valid. Only `application/json` is allowed."
                }
              },
              "x-details": "The `Accept` header is not `application/json` but it should"
            }
          },
          "x-versions": [
            "3.2",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-ee": true
        },
        "patch": {
          "tags": [
            "Asset attribute option"
          ],
          "summary": "Update/create an asset attribute option for a given asset family",
          "description": "This endpoint allows you to update a given option for a given attribute and a given asset family. Learn more about the <a href=\"/documentation/update.html#update-behavior\">Update behavior</a>. Note that if the option does not already exist for the given attribute of the given asset family, it creates it.",
          "operationId": "patch_asset_attributes__attribute_code__options__code_",
          "parameters": [
            {
              "name": "asset_family_code",
              "in": "path",
              "description": "Code of the asset family",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "attribute_code",
              "in": "path",
              "description": "Code of the attribute",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "code"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Attribute's option code",
                      "x-immutable": true
                    },
                    "labels": {
                      "type": "object",
                      "properties": {
                        "localeCode": {
                          "type": "string",
                          "description": "Attribute label for the locale `localeCode`"
                        }
                      },
                      "description": "Attribute labels for each locale",
                      "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                    }
                  },
                  "example": {
                    "code": "small",
                    "labels": {
                      "en_US": "S",
                      "fr_FR": "S"
                    }
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "Created",
              "headers": {
                "Location": {
                  "description": "URI of the created resource",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {},
              "x-details": "Means that the creation was successful"
            },
            "204": {
              "description": "No content to return",
              "headers": {
                "Location": {
                  "description": "URI of the updated resource",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {},
              "x-details": "Means that the update was successful"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "415": {
              "description": "Unsupported Media type",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 415
                },
                "message": {
                  "example": "`xxx’ in `Content-Type’ header is not valid.  Only `application/json’ is allowed."
                }
              },
              "x-details": "The `Content-Type` header has to be `application/json`"
            },
            "422": {
              "description": "Unprocessable entity",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 422
                },
                "message": {
                  "example": "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
                },
                "_links": {
                  "example": {
                    "documentation": {
                      "href": "http://api.akeneo.com/api-reference.html"
                    }
                  }
                }
              },
              "x-details": "The validation of the entity given in the body of the request failed"
            }
          },
          "x-versions": [
            "3.2",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-ee": true,
          "x-codegen-request-body-name": "body"
        }
      },
      "/api/rest/v1/asset-media-files": {
        "post": {
          "tags": [
            "Asset media file"
          ],
          "summary": "Create a new media file for an asset",
          "description": "This endpoint allows you to create a new media file and associate it to a media file attribute value of an asset.",
          "operationId": "post_asset_media_files",
          "parameters": [
            {
              "name": "Content-Type",
              "in": "header",
              "description": "Equal to 'multipart/form-data', no other value allowed",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "file"
                  ],
                  "type": "object",
                  "properties": {
                    "file": {
                      "type": "string",
                      "description": "The binary of the media file",
                      "format": "binary"
                    }
                  }
                }
              }
            },
            "required": false
          },
          "responses": {
            "201": {
              "description": "Created",
              "headers": {
                "Asset-media-file-code": {
                  "description": "Code of the media file",
                  "schema": {
                    "type": "string"
                  }
                },
                "Location": {
                  "description": "URI of the created resource",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {},
              "x-details": "Means that the media file creation was successful"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "415": {
              "description": "Unsupported Media type",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 415
                },
                "message": {
                  "example": "`xxx’ in `Content-Type’ header is not valid.  Only `multipart/form-data’ is allowed."
                }
              },
              "x-details": "The `Content-Type` header has to be `multipart/form-data`"
            },
            "422": {
              "description": "Unprocessable entity",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 422
                },
                "message": {
                  "example": "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
                },
                "_links": {
                  "example": {
                    "documentation": {
                      "href": "http://api.akeneo.com/api-reference.html"
                    }
                  }
                }
              },
              "x-details": "The validation of the entity given in the body of the request failed"
            }
          },
          "x-versions": [
            "3.2",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-ee": true,
          "x-codegen-request-body-name": "body"
        }
      },
      "/api/rest/v1/asset-media-files/{code}": {
        "get": {
          "tags": [
            "Asset media file"
          ],
          "summary": "Download the media file associated to an asset",
          "description": "This endpoint allows you to download a given media file that is associated with an asset.",
          "operationId": "get_asset_media_files__code",
          "parameters": [
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {},
              "x-details": "Returns the binary of the media file",
              "x-content-type": "Mime-type of the media file"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "404": {
              "description": "Resource not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 404
                },
                "message": {
                  "example": "Resource `my_resource_code` does not exist."
                }
              },
              "x-details": "The resource code given in the URI does not correspond to any existing PIM resource"
            }
          },
          "x-content-type": "Mime-type of the media file",
          "x-versions": [
            "3.2",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-ee": true
        }
      },
      "/api/rest/v1/asset-families/{asset_family_code}/assets": {
        "get": {
          "tags": [
            "Asset"
          ],
          "summary": "Get the list of the assets of a given asset family",
          "description": "This endpoint allows you to get a list of assets of a given asset family. Assets are paginated. This endpoint is case sensitive on the asset family code.",
          "operationId": "get_assets",
          "parameters": [
            {
              "name": "search",
              "in": "query",
              "description": "Filter assets, for more details see the <a href=\"/documentation/filter.html#filter-assets\">Asset filters</a> section",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "channel",
              "in": "query",
              "description": "Filter asset values to return scopable asset attributes for the given channel as well as the non localizable/non scopable asset attributes, for more details see the <a href=\"/documentation/filter.html#asset-values-by-channel\">Filter asset values by channel</a> section",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "locales",
              "in": "query",
              "description": "Filter asset values to return localizable attributes for the given locales as well as the non localizable/non scopable asset attributes, for more details see the <a href=\"/documentation/filter.html#asset-values-by-locale\">Filter asset values by locale</a> section",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "asset_family_code",
              "in": "path",
              "description": "Code of the asset family",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "search_after",
              "in": "query",
              "description": "Cursor when using the `search_after` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
              "schema": {
                "type": "string",
                "default": "cursor to the first page"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Return the assets of the given asset family paginated",
              "content": {
                "application/json": {
                  "schema": {
                    "title": "Asset",
                    "type": "object",
                    "properties": {
                      "_embedded": {
                        "type": "object",
                        "properties": {
                          "_items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "_links": {
                                      "type": "object",
                                      "properties": {
                                        "self": {
                                          "type": "object",
                                          "properties": {
                                            "href": {
                                              "type": "string",
                                              "description": "URI of the resource"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "required": [
                                    "code"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "string",
                                      "description": "Code of the asset",
                                      "x-immutable": true
                                    },
                                    "values": {
                                      "type": "object",
                                      "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "channel": {
                                              "type": "string",
                                              "description": "Channel code of the asset attribute value"
                                            },
                                            "locale": {
                                              "type": "string",
                                              "description": "Locale code of the asset attribute value"
                                            },
                                            "data": {
                                              "type": "object",
                                              "properties": {},
                                              "description": "Asset attribute value. See <a href='/concepts/asset-manager.html#the-data-format'>the `data` format</a> section for more details."
                                            }
                                          }
                                        }
                                      },
                                      "description": "Asset attributes values, see the <a href='/concepts/asset-manager.html#focus-on-the-asset-values'>Focus on the asset values</a> section for more details.",
                                      "x-validation-rules": "Validation rules detailed in Asset attribute values section"
                                    },
                                    "created": {
                                      "type": "string",
                                      "description": "Date of creation",
                                      "format": "dateTime",
                                      "x-immutable": true,
                                      "x-read-only": true,
                                      "x-from-version": "6.0"
                                    },
                                    "updated": {
                                      "type": "string",
                                      "description": "Date of the last update",
                                      "format": "dateTime",
                                      "x-read-only": true,
                                      "x-from-version": "6.0"
                                    }
                                  },
                                  "example": {
                                    "code": "sku_54628_picture1",
                                    "values": {
                                      "media_preview": [
                                        {
                                          "data": "sku_54628_picture1.jpg"
                                        }
                                      ],
                                      "model_wears_size": [
                                        {
                                          "data": "s"
                                        }
                                      ],
                                      "photographer": [
                                        {
                                          "data": "ben_levy"
                                        }
                                      ],
                                      "main_colors": [
                                        {
                                          "data": [
                                            "red",
                                            "purple"
                                          ]
                                        }
                                      ],
                                      "end_of_use_date": [
                                        {
                                          "data": "02/03/2021"
                                        }
                                      ]
                                    },
                                    "created": "2021-05-31T09:23:34+00:00",
                                    "updated": "2021-05-31T09:23:34+00:00"
                                  }
                                }
                              ]
                            }
                          }
                        }
                      },
                      "_links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the current page of resources"
                              }
                            }
                          },
                          "first": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the first page of resources"
                              }
                            }
                          },
                          "next": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the next page of resources"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "_links": {
                  "example": {
                    "self": {
                      "href": "https://demo.akeneo.com/api/rest/v1/asset-families/model_pictures/assets"
                    },
                    "first": {
                      "href": "https://demo.akeneo.com/api/rest/v1/asset-families/model_pictures/assets"
                    },
                    "next": {
                      "href": "https://demo.akeneo.com/api/rest/v1/asset-families/model_pictures/assets?search_after=2x088w%3D%3D"
                    }
                  }
                },
                "_embedded": {
                  "example": {
                    "_items": [
                      {
                        "_links": {
                          "self": {
                            "href": "https://demo.akeneo.com/api/rest/v1/asset-families/model_pictures/assets/allie_jean_model_picture"
                          }
                        },
                        "code": "allie_jean_model_picture",
                        "values": {
                          "media_link": [
                            {
                              "data": "allie_jean_model_picture.png"
                            }
                          ],
                          "model_is_wearing_size": [
                            {
                              "data": "size_27"
                            }
                          ],
                          "warning_mention": [
                            {
                              "data": "Photo not retouched",
                              "locale": "en_US"
                            },
                            {
                              "data": "Photo non retouchée",
                              "locale": "fr_FR"
                            }
                          ]
                        },
                        "created": "2021-05-31T09:23:34+00:00",
                        "updated": "2021-05-31T09:23:34+00:00"
                      },
                      {
                        "_links": {
                          "self": {
                            "href": "https://demo.akeneo.com/api/rest/v1/asset-families/model_pictures/assets/amy_socks_model_picture"
                          }
                        },
                        "code": "amy_socks_model_picture",
                        "values": {
                          "media_link": [
                            {
                              "data": "amy_socks_model_picture.png"
                            }
                          ],
                          "model_is_wearing_size": [
                            {
                              "data": "unique_size"
                            }
                          ],
                          "warning_mention": [
                            {
                              "data": "Photo not retouched",
                              "locale": "en_US"
                            },
                            {
                              "data": "Photo non retouchée",
                              "locale": "fr_FR"
                            }
                          ]
                        },
                        "created": "2021-05-31T09:23:34+00:00",
                        "updated": "2021-05-31T09:23:34+00:00"
                      },
                      {
                        "_links": {
                          "self": {
                            "href": "https://demo.akeneo.com/api/rest/v1/asset-families/model_pictures/assets/alice_blouse_model_picture"
                          }
                        },
                        "code": "alice_blouse_model_picture",
                        "values": {
                          "media_link": [
                            {
                              "data": "alice_blouse_model_picture.png"
                            }
                          ],
                          "model_is_wearing_size": [
                            {
                              "data": "small"
                            }
                          ],
                          "warning_mention": [
                            {
                              "data": "Photo retouched",
                              "locale": "en_US"
                            },
                            {
                              "data": "Photo non retouchée",
                              "locale": "fr_FR"
                            }
                          ]
                        },
                        "created": "2021-05-31T09:23:34+00:00",
                        "updated": "2021-05-31T09:23:34+00:00"
                      }
                    ]
                  }
                }
              }
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "406": {
              "description": "Not Acceptable",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 406
                },
                "message": {
                  "example": "`xxx’ in `Accept` header is not valid. Only `application/json` is allowed."
                }
              },
              "x-details": "The `Accept` header is not `application/json` but it should"
            }
          },
          "x-versions": [
            "3.2",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-ee": true
        },
        "patch": {
          "tags": [
            "Asset"
          ],
          "summary": "Update/create several assets",
          "description": "This endpoint allows you to update and/or create several assets of one given asset family at once. Learn more about the <a href=\"/documentation/update.html#patch-asset-attribute-values\">Update behavior</a>. Note that if the asset does not already exist for the given asset family, it creates it. This endpoint is case sensitive on the asset family code.",
          "operationId": "patch_assets",
          "parameters": [
            {
              "name": "asset_family_code",
              "in": "path",
              "description": "Code of the asset family",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "example": [
                    {
                      "code": "sku_54628_picture1",
                      "values": {
                        "media_preview": [
                          {
                            "data": "sku_54628_picture1.jpg"
                          }
                        ],
                        "model_wears_size": [
                          {
                            "data": "s"
                          }
                        ],
                        "photographer": [
                          {
                            "data": "ben_levy"
                          }
                        ],
                        "main_colors": [
                          {
                            "data": [
                              "red",
                              "purple"
                            ]
                          }
                        ],
                        "end_of_use_date": [
                          {
                            "data": "02/03/2021"
                          }
                        ]
                      },
                      "created": "2021-05-31T09:23:34+00:00",
                      "updated": "2021-05-31T09:23:34+00:00"
                    },
                    {
                      "code": "sku_54628_picture2",
                      "values": {
                        "media_preview": [
                          {
                            "data": "sku_54628_picture2.jpg"
                          }
                        ],
                        "model_wears_size": [
                          {
                            "data": "s"
                          }
                        ],
                        "photographer": [
                          {
                            "data": "ben_levy"
                          }
                        ],
                        "main_colors": [
                          {
                            "data": [
                              "blue",
                              "white"
                            ]
                          }
                        ],
                        "end_of_use_date": [
                          {
                            "data": "02/03/2021"
                          }
                        ]
                      },
                      "created": "2021-05-31T09:23:34+00:00",
                      "updated": "2021-05-31T09:23:34+00:00"
                    },
                    {
                      "code": "sku_54628_picture3",
                      "values": {
                        "media_preview": [
                          {
                            "data": "sku_54628_picture3.jpg"
                          }
                        ],
                        "model_wears_size": [
                          {
                            "data": "s"
                          }
                        ],
                        "photographer": [
                          {
                            "data": "ben_levy"
                          }
                        ],
                        "main_colors": [
                          {
                            "data": [
                              "purple"
                            ]
                          }
                        ],
                        "end_of_use_date": [
                          {
                            "data": "02/03/2021"
                          }
                        ]
                      },
                      "created": "2021-05-31T09:23:34+00:00",
                      "updated": "2021-05-31T09:23:34+00:00"
                    }
                  ],
                  "items": {
                    "required": [
                      "code"
                    ],
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Code of the asset",
                        "x-immutable": true
                      },
                      "values": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "channel": {
                                "type": "string",
                                "description": "Channel code of the asset attribute value"
                              },
                              "locale": {
                                "type": "string",
                                "description": "Locale code of the asset attribute value"
                              },
                              "data": {
                                "type": "object",
                                "properties": {},
                                "description": "Asset attribute value. See <a href='/concepts/asset-manager.html#the-data-format'>the `data` format</a> section for more details."
                              }
                            }
                          }
                        },
                        "description": "Asset attributes values, see the <a href='/concepts/asset-manager.html#focus-on-the-asset-values'>Focus on the asset values</a> section for more details.",
                        "x-validation-rules": "Validation rules detailed in Asset attribute values section"
                      },
                      "created": {
                        "type": "string",
                        "description": "Date of creation",
                        "format": "dateTime",
                        "x-immutable": true,
                        "x-read-only": true,
                        "x-from-version": "6.0"
                      },
                      "updated": {
                        "type": "string",
                        "description": "Date of the last update",
                        "format": "dateTime",
                        "x-read-only": true,
                        "x-from-version": "6.0"
                      }
                    },
                    "example": {
                      "code": "sku_54628_picture1",
                      "values": {
                        "media_preview": [
                          {
                            "locale": null,
                            "channel": null,
                            "data": "sku_54628_picture1.jpg"
                          }
                        ],
                        "model_wears_size": [
                          {
                            "locale": null,
                            "channel": null,
                            "data": "s"
                          }
                        ],
                        "photographer": [
                          {
                            "locale": null,
                            "channel": null,
                            "data": "ben_levy"
                          }
                        ],
                        "main_colors": [
                          {
                            "locale": null,
                            "channel": null,
                            "data": [
                              "red",
                              "purple"
                            ]
                          }
                        ],
                        "end_of_use_date": [
                          {
                            "locale": null,
                            "channel": null,
                            "data": "02/03/2021"
                          }
                        ]
                      },
                      "created": "2021-05-31T09:23:34+00:00",
                      "updated": "2021-05-31T09:23:34+00:00"
                    }
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Resource code"
                        },
                        "status_code": {
                          "type": "integer",
                          "description": "HTTP status code, see <a href=\"/documentation/responses.html#client-errors\">Client errors</a> to understand the meaning of each code"
                        },
                        "message": {
                          "type": "string",
                          "description": "Message explaining the error"
                        }
                      }
                    }
                  }
                }
              },
              "x-details": "Returns an JSON array in which each object gives you the status of each asset creation or update",
              "x-no-entity": true
            },
            "400": {
              "description": "Bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 400
                },
                "message": {
                  "example": "Invalid JSON message received"
                }
              },
              "x-details": "Can be caused by a malformed JSON request"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "413": {
              "description": "Request Entity Too Large",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 413
                },
                "message": {
                  "example": "Too many resources to process, 100 is the maximum allowed."
                }
              },
              "x-details": "There are too many resources to process (max 100) or the line of JSON is too long (max 1 000 000 characters)"
            },
            "415": {
              "description": "Unsupported Media type",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 415
                },
                "message": {
                  "example": "`xxx’ in `Content-Type’ header is not valid.  Only `application/vnd.akeneo.collection+json’ is allowed."
                }
              },
              "x-details": "The `Content-Type` header has to be `application/vnd.akeneo.collection+json`"
            }
          },
          "x-versions": [
            "3.2",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-ee": true,
          "x-codegen-request-body-name": "body"
        }
      },
      "/api/rest/v1/asset-families/{asset_family_code}/assets/{code}": {
        "get": {
          "tags": [
            "Asset"
          ],
          "summary": "Get an asset of a given asset family",
          "description": "This endpoint allows you to get the information about a given asset for a given asset family. This endpoint is case sensitive on the asset family code.",
          "operationId": "get_assets__code_",
          "parameters": [
            {
              "name": "asset_family_code",
              "in": "path",
              "description": "Code of the asset family",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "required": [
                      "code"
                    ],
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Code of the asset",
                        "x-immutable": true
                      },
                      "values": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "channel": {
                                "type": "string",
                                "description": "Channel code of the asset attribute value"
                              },
                              "locale": {
                                "type": "string",
                                "description": "Locale code of the asset attribute value"
                              },
                              "data": {
                                "type": "object",
                                "properties": {},
                                "description": "Asset attribute value. See <a href='/concepts/asset-manager.html#the-data-format'>the `data` format</a> section for more details."
                              }
                            }
                          }
                        },
                        "description": "Asset attributes values, see the <a href='/concepts/asset-manager.html#focus-on-the-asset-values'>Focus on the asset values</a> section for more details.",
                        "x-validation-rules": "Validation rules detailed in Asset attribute values section"
                      },
                      "created": {
                        "type": "string",
                        "description": "Date of creation",
                        "format": "dateTime",
                        "x-immutable": true,
                        "x-read-only": true,
                        "x-from-version": "6.0"
                      },
                      "updated": {
                        "type": "string",
                        "description": "Date of the last update",
                        "format": "dateTime",
                        "x-read-only": true,
                        "x-from-version": "6.0"
                      }
                    },
                    "example": {
                      "code": "sku_54628_picture1",
                      "values": {
                        "media_preview": [
                          {
                            "data": "sku_54628_picture1.jpg"
                          }
                        ],
                        "model_wears_size": [
                          {
                            "data": "s"
                          }
                        ],
                        "photographer": [
                          {
                            "data": "ben_levy"
                          }
                        ],
                        "main_colors": [
                          {
                            "data": [
                              "red",
                              "purple"
                            ]
                          }
                        ],
                        "end_of_use_date": [
                          {
                            "data": "02/03/2021"
                          }
                        ]
                      },
                      "created": "2021-05-31T09:23:34+00:00",
                      "updated": "2021-05-31T09:23:34+00:00"
                    }
                  }
                }
              },
              "x-details": "Returns the content of the asset in JSON standard format"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "404": {
              "description": "Resource not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 404
                },
                "message": {
                  "example": "Resource `my_resource_code` does not exist."
                }
              },
              "x-details": "The resource code given in the URI does not correspond to any existing PIM resource"
            },
            "406": {
              "description": "Not Acceptable",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 406
                },
                "message": {
                  "example": "`xxx’ in `Accept` header is not valid. Only `application/json` is allowed."
                }
              },
              "x-details": "The `Accept` header is not `application/json` but it should"
            }
          },
          "x-versions": [
            "3.2",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-ee": true
        },
        "delete": {
          "tags": [
            "Asset"
          ],
          "summary": "Delete an asset",
          "description": "This endpoint allows you to delete a given asset. This endpoint is case sensitive on the asset family code.",
          "operationId": "delete_assets__code_",
          "parameters": [
            {
              "name": "asset_family_code",
              "in": "path",
              "description": "Code of the asset family",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No content to return",
              "content": {},
              "x-details": "Means that the deletion was successful"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "404": {
              "description": "Resource not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 404
                },
                "message": {
                  "example": "Resource `my_resource_code` does not exist."
                }
              },
              "x-details": "The resource code given in the URI does not correspond to any existing PIM resource"
            }
          },
          "x-versions": [
            "3.2",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-ee": true
        },
        "patch": {
          "tags": [
            "Asset"
          ],
          "summary": "Update/create an asset",
          "description": "This endpoint allows you to update a given asset of a given asset family. Learn more about the <a href=\"/documentation/update.html#patch-asset-attribute-values\">Update behavior</a>. Note that if the asset does not already exist for the given asset family, it creates it. This endpoint is case sensitive on the asset family code.",
          "operationId": "patch_asset__code_",
          "parameters": [
            {
              "name": "asset_family_code",
              "in": "path",
              "description": "Code of the asset family",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "code"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Code of the asset",
                      "x-immutable": true
                    },
                    "values": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "channel": {
                              "type": "string",
                              "description": "Channel code of the asset attribute value"
                            },
                            "locale": {
                              "type": "string",
                              "description": "Locale code of the asset attribute value"
                            },
                            "data": {
                              "type": "object",
                              "properties": {},
                              "description": "Asset attribute value. See <a href='/concepts/asset-manager.html#the-data-format'>the `data` format</a> section for more details."
                            }
                          }
                        }
                      },
                      "description": "Asset attributes values, see the <a href='/concepts/asset-manager.html#focus-on-the-asset-values'>Focus on the asset values</a> section for more details.",
                      "x-validation-rules": "Validation rules detailed in Asset attribute values section"
                    },
                    "created": {
                      "type": "string",
                      "description": "Date of creation",
                      "format": "dateTime",
                      "x-immutable": true,
                      "x-read-only": true,
                      "x-from-version": "6.0"
                    },
                    "updated": {
                      "type": "string",
                      "description": "Date of the last update",
                      "format": "dateTime",
                      "x-read-only": true,
                      "x-from-version": "6.0"
                    }
                  },
                  "example": {
                    "code": "sku_54628_picture1",
                    "values": {
                      "media_preview": [
                        {
                          "data": "sku_54628_picture1.jpg"
                        }
                      ],
                      "model_wears_size": [
                        {
                          "data": "s"
                        }
                      ],
                      "photographer": [
                        {
                          "data": "ben_levy"
                        }
                      ],
                      "main_colors": [
                        {
                          "data": [
                            "red",
                            "purple"
                          ]
                        }
                      ],
                      "end_of_use_date": [
                        {
                          "data": "02/03/2021"
                        }
                      ]
                    },
                    "created": "2021-05-31T09:23:34+00:00",
                    "updated": "2021-05-31T09:23:34+00:00"
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "Created",
              "headers": {
                "Location": {
                  "description": "URI of the created resource",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {},
              "x-details": "Means that the creation was successful"
            },
            "204": {
              "description": "No content to return",
              "headers": {
                "Location": {
                  "description": "URI of the updated resource",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {},
              "x-details": "Means that the update was successful"
            },
            "400": {
              "description": "Bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 400
                },
                "message": {
                  "example": "Invalid JSON message received"
                }
              },
              "x-details": "Can be caused by a malformed JSON request"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "415": {
              "description": "Unsupported Media type",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 415
                },
                "message": {
                  "example": "`xxx’ in `Content-Type’ header is not valid.  Only `application/json’ is allowed."
                }
              },
              "x-details": "The `Content-Type` header has to be `application/json`"
            },
            "422": {
              "description": "Unprocessable entity",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 422
                },
                "message": {
                  "example": "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
                },
                "_links": {
                  "example": {
                    "documentation": {
                      "href": "http://api.akeneo.com/api-reference.html"
                    }
                  }
                }
              },
              "x-details": "The validation of the entity given in the body of the request failed"
            }
          },
          "x-versions": [
            "3.2",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-ee": true,
          "x-codegen-request-body-name": "body"
        }
      },
      "/api/rest/v1/assets": {
        "get": {
          "tags": [
            "PAM asset"
          ],
          "summary": "Get list of PAM assets",
          "description": "This endpoint allows you to get a list of PAM assets. PAM assets are paginated.",
          "operationId": "get_pam_assets",
          "parameters": [
            {
              "name": "pagination_type",
              "in": "query",
              "description": "Pagination method type, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
              "schema": {
                "type": "string",
                "default": "page",
                "enum": [
                  "page",
                  "search_after"
                ],
                "x-validation-rules": "One of the following values"
              },
              "x-validation-rules": "One of the following values"
            },
            {
              "name": "page",
              "in": "query",
              "description": "Number of the page to retrieve when using the `page` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html#pagination\">Pagination</a> section",
              "schema": {
                "type": "integer",
                "default": 1
              }
            },
            {
              "name": "search_after",
              "in": "query",
              "description": "Cursor when using the `search_after` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
              "schema": {
                "type": "string",
                "default": "cursor to the first page"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
              "schema": {
                "maximum": 100,
                "minimum": 1,
                "type": "integer",
                "default": 10
              }
            },
            {
              "name": "with_count",
              "in": "query",
              "description": "Return the count of items in the response. Be carefull with that, on a big catalog, it can decrease performance in a significative way",
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Returns PAM assets paginated",
              "content": {
                "application/json": {
                  "schema": {
                    "title": "PAM Assets",
                    "type": "object",
                    "properties": {
                      "_embedded": {
                        "type": "object",
                        "properties": {
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "_links": {
                                      "type": "object",
                                      "properties": {
                                        "self": {
                                          "type": "object",
                                          "properties": {
                                            "href": {
                                              "type": "string",
                                              "description": "URI of the resource"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "required": [
                                    "code"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "string",
                                      "description": "PAM asset code",
                                      "x-immutable": true
                                    },
                                    "categories": {
                                      "type": "array",
                                      "description": "Codes of the PAM asset categories in which the asset is classified",
                                      "items": {
                                        "type": "string"
                                      },
                                      "x-validation-rules": "Each string of the array is equal to an existing asset category code"
                                    },
                                    "description": {
                                      "type": "string",
                                      "description": "Description of the PAM asset",
                                      "default": "null"
                                    },
                                    "localizable": {
                                      "type": "boolean",
                                      "description": "Whether the asset is localized or not, meaning if you want to have different reference files for each of your locale",
                                      "default": false,
                                      "x-immutable": true
                                    },
                                    "tags": {
                                      "type": "array",
                                      "description": "Tags of the PAM asset",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "end_of_use": {
                                      "type": "string",
                                      "description": "Date on which the PAM asset expire",
                                      "format": "dateTime",
                                      "default": "null",
                                      "x-validation-rules": "The date follows the ISO 8601 format"
                                    },
                                    "variation_files": {
                                      "type": "array",
                                      "description": "Variations of the PAM asset",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "_link": {
                                            "type": "object",
                                            "properties": {
                                              "self": {
                                                "type": "object",
                                                "properties": {
                                                  "href": {
                                                    "type": "string",
                                                    "description": "URI of the variation entity"
                                                  }
                                                }
                                              },
                                              "download": {
                                                "type": "object",
                                                "properties": {
                                                  "href": {
                                                    "type": "string",
                                                    "description": "URI to download the variation file"
                                                  }
                                                }
                                              }
                                            },
                                            "description": "Links to get and download the variation file"
                                          },
                                          "locale": {
                                            "type": "string",
                                            "description": "Locale code of the variation"
                                          },
                                          "scope": {
                                            "type": "string",
                                            "description": "Channel code of the variation"
                                          },
                                          "code": {
                                            "type": "string",
                                            "description": "Code of the variation"
                                          }
                                        }
                                      },
                                      "x-read-only": true
                                    },
                                    "reference_files": {
                                      "type": "array",
                                      "description": "Reference files of the PAM asset",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "_link": {
                                            "type": "object",
                                            "properties": {
                                              "self": {
                                                "type": "object",
                                                "properties": {
                                                  "href": {
                                                    "type": "string",
                                                    "description": "URI of the reference file entity"
                                                  }
                                                }
                                              },
                                              "download": {
                                                "type": "object",
                                                "properties": {
                                                  "href": {
                                                    "type": "string",
                                                    "description": "URI to download the reference file"
                                                  }
                                                }
                                              }
                                            },
                                            "description": "Links to get and download the reference file"
                                          },
                                          "locale": {
                                            "type": "string",
                                            "description": "Locale code of the reference file"
                                          },
                                          "code": {
                                            "type": "string",
                                            "description": "Code of the reference file"
                                          }
                                        }
                                      },
                                      "x-read-only": true
                                    }
                                  },
                                  "example": {
                                    "code": "tshirt_artemis_main_picture",
                                    "categories": [
                                      "tshirts_assets"
                                    ],
                                    "description": "The main picture of the Artemis t-shirt",
                                    "localizable": false,
                                    "tags": [
                                      "tshirts",
                                      "red",
                                      "summer"
                                    ],
                                    "end_of_use": "2019-09-01T00:00:00+0200",
                                    "variation_files": [
                                      {
                                        "_link": {
                                          "download": {
                                            "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/ecommerce/no_locale/download"
                                          },
                                          "self": {
                                            "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/ecommerce/no_locale"
                                          }
                                        },
                                        "scope": "e_commerce",
                                        "code": "7/5/8/e/758e39d48va7b42a55001434fd3d7b6cf3189b7f_tshirt_artemis_main_picture_ecommerce.jpg"
                                      },
                                      {
                                        "_link": {
                                          "download": {
                                            "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/print/no_locale/download"
                                          },
                                          "self": {
                                            "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/print/no_locale"
                                          }
                                        },
                                        "scope": "print",
                                        "code": "7/5/8/e/759e39d48va7b42a55002434fd3d7b6cf3189b7f_tshirt_artemis_main_picture_print.jpg"
                                      }
                                    ],
                                    "reference_files": [
                                      {
                                        "_link": {
                                          "download": {
                                            "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/reference-files/no_locale/download"
                                          },
                                          "self": {
                                            "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/reference-files/no_locale"
                                          }
                                        },
                                        "code": "7/5/8/e/759e39d48va7b42a55002434fd3d7b6cf3189b7f_tshirt_artemis_main_picture.jpg"
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        }
                      },
                      "_links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the current page of resources"
                              }
                            }
                          },
                          "first": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the first page of resources"
                              }
                            }
                          },
                          "previous": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the previous page of resources"
                              }
                            }
                          },
                          "next": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the next page of resources"
                              }
                            }
                          }
                        }
                      },
                      "current_page": {
                        "type": "integer",
                        "description": "Current page number"
                      }
                    }
                  }
                },
                "_links": {
                  "example": {
                    "self": {
                      "href": "https://demo.akeneo.com/api/rest/v1/assets?page=2&limit=3"
                    },
                    "first": {
                      "href": "https://demo.akeneo.com/api/rest/v1/assets?page=1&limit=3"
                    },
                    "previous": {
                      "href": "https://demo.akeneo.com/api/rest/v1/assets?page=1&limit=3"
                    },
                    "next": {
                      "href": "https://demo.akeneo.com/api/rest/v1/assets?page=3&limit=3"
                    }
                  }
                },
                "current_page": {
                  "example": 2
                },
                "_embedded": {
                  "example": {
                    "items": [
                      {
                        "_links": {
                          "self": {
                            "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture"
                          }
                        },
                        "code": "tshirt_artemis_main_picture",
                        "categories": [
                          "tshirts_assets"
                        ],
                        "description": "The main picture of the Artemis t-shirt",
                        "localizable": false,
                        "tags": [
                          "tshirts",
                          "red",
                          "summer"
                        ],
                        "end_of_use": "2019-09-01T00:00:00+0200",
                        "variation_files": [
                          {
                            "_link": {
                              "download": {
                                "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/ecommerce/no_locale/download"
                              },
                              "self": {
                                "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/ecommerce/no_locale"
                              }
                            },
                            "scope": "e_commerce",
                            "code": "7/5/8/e/758e39d48va7b42a55001434fd3d7b6cf3189b7f_tshirt_artemis_main_picture_ecommerce.jpg"
                          },
                          {
                            "_link": {
                              "download": {
                                "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/print/no_locale/download"
                              },
                              "self": {
                                "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/print/no_locale"
                              }
                            },
                            "scope": "print",
                            "code": "7/5/8/e/759e39d48va7b42a55002434fd3d7b6cf3189b7f_tshirt_artemis_main_picture_print.jpg"
                          }
                        ],
                        "reference_files": [
                          {
                            "_link": {
                              "download": {
                                "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/reference-files/no_locale/download"
                              },
                              "self": {
                                "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/reference-files/no_locale"
                              }
                            },
                            "code": "7/5/8/e/759e39d48va7b42a55002434fd3d7b6cf3189b7f_tshirt_artemis_main_picture.jpg"
                          }
                        ]
                      },
                      {
                        "_links": {
                          "self": {
                            "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_profile_picture"
                          }
                        },
                        "code": "tshirt_artemis_profile_picture",
                        "categories": [
                          "tshirts_assets"
                        ],
                        "description": "The profile picture of the Artemis t-shirt",
                        "localizable": false,
                        "tags": [
                          "tshirts",
                          "red",
                          "summer",
                          "profile_views"
                        ],
                        "end_of_use": "2019-09-01T00:00:00+0200",
                        "variation_files": [
                          {
                            "_link": {
                              "download": {
                                "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_profile_picture/variation-files/ecommerce/no_locale/download"
                              },
                              "self": {
                                "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_profile_picture/variation-files/ecommerce/no_locale"
                              }
                            },
                            "scope": "e_commerce",
                            "code": "7/5/8/e/758e39d48va7b42a55001434fd3d7b6cf3189b7f_tshirt_artemis_profile_picture_ecommerce.jpg"
                          },
                          {
                            "_link": {
                              "download": {
                                "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_profile_picture/variation-files/print/no_locale/download"
                              },
                              "self": {
                                "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_profile_picture/variation-files/print/no_locale"
                              }
                            },
                            "scope": "print",
                            "code": "7/5/8/e/759e39d48va7b42a55002434fd3d7b6cf3189b7f_tshirt_artemis_profile_picture_print.jpg"
                          }
                        ],
                        "reference_files": [
                          {
                            "_link": {
                              "download": {
                                "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_profile_picture/reference-files/no_locale/download"
                              },
                              "self": {
                                "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_profile_picture/reference-files/no_locale"
                              }
                            },
                            "code": "7/5/8/e/759e39d48va7b42a55002434fd3d7b6cf3189b7f_tshirt_artemis_profile_picture.jpg"
                          }
                        ]
                      },
                      {
                        "_links": {
                          "self": {
                            "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_maintenance_manual"
                          }
                        },
                        "code": "tshirt_artemis_maintenance_manual",
                        "categories": [
                          "tshirts_assets"
                        ],
                        "description": "The maintenance manual of the Artemis t-shirt",
                        "localizable": true,
                        "tags": [
                          "tshirts",
                          "manuals"
                        ],
                        "variation_files": [],
                        "reference_files": [
                          {
                            "_link": {
                              "download": {
                                "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_maintenance_manual/reference-files/en_US/download"
                              },
                              "self": {
                                "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_maintenance_manual/reference-files/en_US"
                              }
                            },
                            "locale": "en_US",
                            "code": "7/5/8/e/759e39d48va7b42a55002434fd3d7b6cf3189b7f_tshirt_artemis_maintenance_manual_en_US.pdf"
                          },
                          {
                            "_link": {
                              "download": {
                                "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_maintenance_manual/reference-files/fr_FR/download"
                              },
                              "self": {
                                "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_maintenance_manual/reference-files/fr_FR"
                              }
                            },
                            "locale": "fr_FR",
                            "code": "7/5/8/e/759e39d48va7b42a55002434fd3d7b6cf3189b7f_tshirt_artemis_maintenance_manual_fr_FR.pdf"
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "406": {
              "description": "Not Acceptable",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 406
                },
                "message": {
                  "example": "`xxx’ in `Accept` header is not valid. Only `application/json` is allowed."
                }
              },
              "x-details": "The `Accept` header is not `application/json` but it should"
            }
          },
          "x-versions": [
            "2.1",
            "2.2",
            "2.3",
            "3.x"
          ],
          "x-ee": true,
          "x-deprecated": true
        },
        "post": {
          "tags": [
            "PAM asset"
          ],
          "summary": "Create a new PAM asset",
          "description": "This endpoint allows you to create a new PAM asset.",
          "operationId": "post_pam_assets",
          "requestBody": {
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "code"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "PAM asset code",
                      "x-immutable": true
                    },
                    "categories": {
                      "type": "array",
                      "description": "Codes of the PAM asset categories in which the asset is classified",
                      "items": {
                        "type": "string"
                      },
                      "x-validation-rules": "Each string of the array is equal to an existing asset category code"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the PAM asset",
                      "default": "null"
                    },
                    "localizable": {
                      "type": "boolean",
                      "description": "Whether the asset is localized or not, meaning if you want to have different reference files for each of your locale",
                      "default": false,
                      "x-immutable": true
                    },
                    "tags": {
                      "type": "array",
                      "description": "Tags of the PAM asset",
                      "items": {
                        "type": "string"
                      }
                    },
                    "end_of_use": {
                      "type": "string",
                      "description": "Date on which the PAM asset expire",
                      "format": "dateTime",
                      "default": "null",
                      "x-validation-rules": "The date follows the ISO 8601 format"
                    },
                    "variation_files": {
                      "type": "array",
                      "description": "Variations of the PAM asset",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_link": {
                            "type": "object",
                            "properties": {
                              "self": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string",
                                    "description": "URI of the variation entity"
                                  }
                                }
                              },
                              "download": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string",
                                    "description": "URI to download the variation file"
                                  }
                                }
                              }
                            },
                            "description": "Links to get and download the variation file"
                          },
                          "locale": {
                            "type": "string",
                            "description": "Locale code of the variation"
                          },
                          "scope": {
                            "type": "string",
                            "description": "Channel code of the variation"
                          },
                          "code": {
                            "type": "string",
                            "description": "Code of the variation"
                          }
                        }
                      },
                      "x-read-only": true
                    },
                    "reference_files": {
                      "type": "array",
                      "description": "Reference files of the PAM asset",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_link": {
                            "type": "object",
                            "properties": {
                              "self": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string",
                                    "description": "URI of the reference file entity"
                                  }
                                }
                              },
                              "download": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string",
                                    "description": "URI to download the reference file"
                                  }
                                }
                              }
                            },
                            "description": "Links to get and download the reference file"
                          },
                          "locale": {
                            "type": "string",
                            "description": "Locale code of the reference file"
                          },
                          "code": {
                            "type": "string",
                            "description": "Code of the reference file"
                          }
                        }
                      },
                      "x-read-only": true
                    }
                  },
                  "example": {
                    "code": "tshirt_artemis_main_picture",
                    "categories": [
                      "tshirts_assets"
                    ],
                    "description": "The main picture of the Artemis t-shirt",
                    "localizable": false,
                    "tags": [
                      "tshirts",
                      "red",
                      "summer"
                    ],
                    "end_of_use": "2019-09-01T00:00:00+0200",
                    "variation_files": [
                      {
                        "_link": {
                          "download": {
                            "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/ecommerce/no_locale/download"
                          },
                          "self": {
                            "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/ecommerce/no_locale"
                          }
                        },
                        "scope": "e_commerce",
                        "code": "7/5/8/e/758e39d48va7b42a55001434fd3d7b6cf3189b7f_tshirt_artemis_main_picture_ecommerce.jpg"
                      },
                      {
                        "_link": {
                          "download": {
                            "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/print/no_locale/download"
                          },
                          "self": {
                            "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/print/no_locale"
                          }
                        },
                        "scope": "print",
                        "code": "7/5/8/e/759e39d48va7b42a55002434fd3d7b6cf3189b7f_tshirt_artemis_main_picture_print.jpg"
                      }
                    ],
                    "reference_files": [
                      {
                        "_link": {
                          "download": {
                            "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/reference-files/no_locale/download"
                          },
                          "self": {
                            "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/reference-files/no_locale"
                          }
                        },
                        "code": "7/5/8/e/759e39d48va7b42a55002434fd3d7b6cf3189b7f_tshirt_artemis_main_picture.jpg"
                      }
                    ]
                  }
                }
              }
            },
            "required": false
          },
          "responses": {
            "201": {
              "description": "Created",
              "headers": {
                "Location": {
                  "description": "URI of the created resource",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {},
              "x-details": "Means that the creation was successful"
            },
            "400": {
              "description": "Bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 400
                },
                "message": {
                  "example": "Invalid JSON message received"
                }
              },
              "x-details": "Can be caused by a malformed JSON request"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "415": {
              "description": "Unsupported Media type",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 415
                },
                "message": {
                  "example": "`xxx’ in `Content-Type’ header is not valid.  Only `application/json’ is allowed."
                }
              },
              "x-details": "The `Content-Type` header has to be `application/json`"
            },
            "422": {
              "description": "Unprocessable entity",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 422
                },
                "message": {
                  "example": "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
                },
                "_links": {
                  "example": {
                    "documentation": {
                      "href": "http://api.akeneo.com/api-reference.html"
                    }
                  }
                }
              },
              "x-details": "The validation of the entity given in the body of the request failed"
            }
          },
          "x-versions": [
            "2.1",
            "2.2",
            "2.3",
            "3.x"
          ],
          "x-ee": true,
          "x-deprecated": true,
          "x-codegen-request-body-name": "body"
        },
        "patch": {
          "tags": [
            "PAM asset"
          ],
          "summary": "Update/create several PAM assets",
          "description": "This endpoint allows you to update several PAM assets at once.",
          "operationId": "patch_pam_assets",
          "requestBody": {
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "code"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "PAM asset code",
                      "x-immutable": true
                    },
                    "categories": {
                      "type": "array",
                      "description": "Codes of the PAM asset categories in which the asset is classified",
                      "items": {
                        "type": "string"
                      },
                      "x-validation-rules": "Each string of the array is equal to an existing asset category code"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the PAM asset",
                      "default": "null"
                    },
                    "localizable": {
                      "type": "boolean",
                      "description": "Whether the asset is localized or not, meaning if you want to have different reference files for each of your locale",
                      "default": false,
                      "x-immutable": true
                    },
                    "tags": {
                      "type": "array",
                      "description": "Tags of the PAM asset",
                      "items": {
                        "type": "string"
                      }
                    },
                    "end_of_use": {
                      "type": "string",
                      "description": "Date on which the PAM asset expire",
                      "format": "dateTime",
                      "default": "null",
                      "x-validation-rules": "The date follows the ISO 8601 format"
                    },
                    "variation_files": {
                      "type": "array",
                      "description": "Variations of the PAM asset",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_link": {
                            "type": "object",
                            "properties": {
                              "self": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string",
                                    "description": "URI of the variation entity"
                                  }
                                }
                              },
                              "download": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string",
                                    "description": "URI to download the variation file"
                                  }
                                }
                              }
                            },
                            "description": "Links to get and download the variation file"
                          },
                          "locale": {
                            "type": "string",
                            "description": "Locale code of the variation"
                          },
                          "scope": {
                            "type": "string",
                            "description": "Channel code of the variation"
                          },
                          "code": {
                            "type": "string",
                            "description": "Code of the variation"
                          }
                        }
                      },
                      "x-read-only": true
                    },
                    "reference_files": {
                      "type": "array",
                      "description": "Reference files of the PAM asset",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_link": {
                            "type": "object",
                            "properties": {
                              "self": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string",
                                    "description": "URI of the reference file entity"
                                  }
                                }
                              },
                              "download": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string",
                                    "description": "URI to download the reference file"
                                  }
                                }
                              }
                            },
                            "description": "Links to get and download the reference file"
                          },
                          "locale": {
                            "type": "string",
                            "description": "Locale code of the reference file"
                          },
                          "code": {
                            "type": "string",
                            "description": "Code of the reference file"
                          }
                        }
                      },
                      "x-read-only": true
                    }
                  },
                  "example": {
                    "code": "tshirt_artemis_main_picture",
                    "categories": [
                      "tshirts_assets"
                    ],
                    "description": "The main picture of the Artemis t-shirt",
                    "localizable": false,
                    "tags": [
                      "tshirts",
                      "red",
                      "summer"
                    ],
                    "end_of_use": "2019-09-01T00:00:00+0200",
                    "variation_files": [
                      {
                        "_link": {
                          "download": {
                            "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/ecommerce/no_locale/download"
                          },
                          "self": {
                            "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/ecommerce/no_locale"
                          }
                        },
                        "scope": "e_commerce",
                        "code": "7/5/8/e/758e39d48va7b42a55001434fd3d7b6cf3189b7f_tshirt_artemis_main_picture_ecommerce.jpg"
                      },
                      {
                        "_link": {
                          "download": {
                            "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/print/no_locale/download"
                          },
                          "self": {
                            "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/print/no_locale"
                          }
                        },
                        "scope": "print",
                        "code": "7/5/8/e/759e39d48va7b42a55002434fd3d7b6cf3189b7f_tshirt_artemis_main_picture_print.jpg"
                      }
                    ],
                    "reference_files": [
                      {
                        "_link": {
                          "download": {
                            "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/reference-files/no_locale/download"
                          },
                          "self": {
                            "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/reference-files/no_locale"
                          }
                        },
                        "code": "7/5/8/e/759e39d48va7b42a55002434fd3d7b6cf3189b7f_tshirt_artemis_main_picture.jpg"
                      }
                    ]
                  },
                  "x-examples": {
                    "x-example-1": "{\"code\":\"tshirt_aria_main_picture\",\"categories\":[\"tshirts_assets\"],\"tags\":[\"tshirts\", \"red\", \"summer\"]}",
                    "x-example-2": "{\"code\":\"tshirt_artemis_maintenance_manual\",\"categories\":[\"tshirts_assets\",\"short_sleeve\"]}",
                    "x-example-3": "{\"code\":\"tshirt_artemis_main_picture\",\"tags\":[\"tshirts\", \"red\", \"summer\",\"short_sleeve\"]}"
                  }
                }
              }
            },
            "required": false
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "line": {
                        "type": "integer",
                        "description": "Line number"
                      },
                      "identifier": {
                        "type": "string",
                        "description": "Resource identifier, only filled when the resource is a product"
                      },
                      "code": {
                        "type": "string",
                        "description": "Resource code, only filled when the resource is not a product"
                      },
                      "status_code": {
                        "type": "integer",
                        "description": "HTTP status code, see <a href=\"/documentation/responses.html#client-errors\">Client errors</a> to understand the meaning of each code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "x-example-1": {
                  "example": "{\"line\":1,\"code\":\"tshirt_aria_main_picture\",\"status_code\":201}"
                },
                "x-example-2": {
                  "example": "{\"line\":2,\"code\":\"tshirt_artemis_maintenance_manual\",\"status_code\":422,\"message\":\"Category \"short_sleeve\" does not exist.\"}"
                },
                "x-example-3": {
                  "example": "{\"line\":3,\"code\":\"tshirt_artemis_main_picture\",\"status_code\":204}"
                }
              },
              "x-details": "Returns a plain text response whose lines are JSON containing the status of each update or creation",
              "x-no-entity": true
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "413": {
              "description": "Request Entity Too Large",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 413
                },
                "message": {
                  "example": "Too many resources to process, 100 is the maximum allowed."
                }
              },
              "x-details": "There are too many resources to process (max 100) or the line of JSON is too long (max 1 000 000 characters)"
            },
            "415": {
              "description": "Unsupported Media type",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 415
                },
                "message": {
                  "example": "`xxx’ in `Content-Type’ header is not valid.  Only `application/vnd.akeneo.collection+json’ is allowed."
                }
              },
              "x-details": "The `Content-Type` header has to be `application/vnd.akeneo.collection+json`"
            }
          },
          "x-versions": [
            "2.1",
            "2.2",
            "2.3",
            "3.x"
          ],
          "x-ee": true,
          "x-deprecated": true,
          "x-body-by-line": "Contains several lines, each line is a PAM asset in JSON format",
          "x-codegen-request-body-name": "body"
        }
      },
      "/api/rest/v1/assets/{code}": {
        "get": {
          "tags": [
            "PAM asset"
          ],
          "summary": "Get a PAM asset",
          "description": "This endpoint allows you to get the information about a given PAM asset.",
          "operationId": "get_pam_assets__code_",
          "parameters": [
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "required": [
                      "code"
                    ],
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "PAM asset code",
                        "x-immutable": true
                      },
                      "categories": {
                        "type": "array",
                        "description": "Codes of the PAM asset categories in which the asset is classified",
                        "items": {
                          "type": "string"
                        },
                        "x-validation-rules": "Each string of the array is equal to an existing asset category code"
                      },
                      "description": {
                        "type": "string",
                        "description": "Description of the PAM asset",
                        "default": "null"
                      },
                      "localizable": {
                        "type": "boolean",
                        "description": "Whether the asset is localized or not, meaning if you want to have different reference files for each of your locale",
                        "default": false,
                        "x-immutable": true
                      },
                      "tags": {
                        "type": "array",
                        "description": "Tags of the PAM asset",
                        "items": {
                          "type": "string"
                        }
                      },
                      "end_of_use": {
                        "type": "string",
                        "description": "Date on which the PAM asset expire",
                        "format": "dateTime",
                        "default": "null",
                        "x-validation-rules": "The date follows the ISO 8601 format"
                      },
                      "variation_files": {
                        "type": "array",
                        "description": "Variations of the PAM asset",
                        "items": {
                          "type": "object",
                          "properties": {
                            "_link": {
                              "type": "object",
                              "properties": {
                                "self": {
                                  "type": "object",
                                  "properties": {
                                    "href": {
                                      "type": "string",
                                      "description": "URI of the variation entity"
                                    }
                                  }
                                },
                                "download": {
                                  "type": "object",
                                  "properties": {
                                    "href": {
                                      "type": "string",
                                      "description": "URI to download the variation file"
                                    }
                                  }
                                }
                              },
                              "description": "Links to get and download the variation file"
                            },
                            "locale": {
                              "type": "string",
                              "description": "Locale code of the variation"
                            },
                            "scope": {
                              "type": "string",
                              "description": "Channel code of the variation"
                            },
                            "code": {
                              "type": "string",
                              "description": "Code of the variation"
                            }
                          }
                        },
                        "x-read-only": true
                      },
                      "reference_files": {
                        "type": "array",
                        "description": "Reference files of the PAM asset",
                        "items": {
                          "type": "object",
                          "properties": {
                            "_link": {
                              "type": "object",
                              "properties": {
                                "self": {
                                  "type": "object",
                                  "properties": {
                                    "href": {
                                      "type": "string",
                                      "description": "URI of the reference file entity"
                                    }
                                  }
                                },
                                "download": {
                                  "type": "object",
                                  "properties": {
                                    "href": {
                                      "type": "string",
                                      "description": "URI to download the reference file"
                                    }
                                  }
                                }
                              },
                              "description": "Links to get and download the reference file"
                            },
                            "locale": {
                              "type": "string",
                              "description": "Locale code of the reference file"
                            },
                            "code": {
                              "type": "string",
                              "description": "Code of the reference file"
                            }
                          }
                        },
                        "x-read-only": true
                      }
                    },
                    "example": {
                      "code": "tshirt_artemis_main_picture",
                      "categories": [
                        "tshirts_assets"
                      ],
                      "description": "The main picture of the Artemis t-shirt",
                      "localizable": false,
                      "tags": [
                        "tshirts",
                        "red",
                        "summer"
                      ],
                      "end_of_use": "2019-09-01T00:00:00+0200",
                      "variation_files": [
                        {
                          "_link": {
                            "download": {
                              "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/ecommerce/no_locale/download"
                            },
                            "self": {
                              "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/ecommerce/no_locale"
                            }
                          },
                          "scope": "e_commerce",
                          "code": "7/5/8/e/758e39d48va7b42a55001434fd3d7b6cf3189b7f_tshirt_artemis_main_picture_ecommerce.jpg"
                        },
                        {
                          "_link": {
                            "download": {
                              "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/print/no_locale/download"
                            },
                            "self": {
                              "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/print/no_locale"
                            }
                          },
                          "scope": "print",
                          "code": "7/5/8/e/759e39d48va7b42a55002434fd3d7b6cf3189b7f_tshirt_artemis_main_picture_print.jpg"
                        }
                      ],
                      "reference_files": [
                        {
                          "_link": {
                            "download": {
                              "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/reference-files/no_locale/download"
                            },
                            "self": {
                              "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/reference-files/no_locale"
                            }
                          },
                          "code": "7/5/8/e/759e39d48va7b42a55002434fd3d7b6cf3189b7f_tshirt_artemis_main_picture.jpg"
                        }
                      ]
                    }
                  }
                }
              },
              "x-details": "Returns the content of the PAM asset in JSON format"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "404": {
              "description": "Resource not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 404
                },
                "message": {
                  "example": "Resource `my_resource_code` does not exist."
                }
              },
              "x-details": "The resource code given in the URI does not correspond to any existing PIM resource"
            },
            "406": {
              "description": "Not Acceptable",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 406
                },
                "message": {
                  "example": "`xxx’ in `Accept` header is not valid. Only `application/json` is allowed."
                }
              },
              "x-details": "The `Accept` header is not `application/json` but it should"
            }
          },
          "x-versions": [
            "2.1",
            "2.2",
            "2.3",
            "3.x"
          ],
          "x-ee": true,
          "x-deprecated": true
        },
        "patch": {
          "tags": [
            "PAM asset"
          ],
          "summary": "Update/create a PAM asset",
          "description": "This endpoint allows you to update a given PAM asset. Know more about <a href=\"/documentation/update.html#update-behavior\">Update behavior</a>. Note that if no asset exists for the given code, it creates it.",
          "operationId": "patch_pam_assets__code_",
          "parameters": [
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "code"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "PAM asset code",
                      "x-immutable": true
                    },
                    "categories": {
                      "type": "array",
                      "description": "Codes of the PAM asset categories in which the asset is classified",
                      "items": {
                        "type": "string"
                      },
                      "x-validation-rules": "Each string of the array is equal to an existing asset category code"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the PAM asset",
                      "default": "null"
                    },
                    "localizable": {
                      "type": "boolean",
                      "description": "Whether the asset is localized or not, meaning if you want to have different reference files for each of your locale",
                      "default": false,
                      "x-immutable": true
                    },
                    "tags": {
                      "type": "array",
                      "description": "Tags of the PAM asset",
                      "items": {
                        "type": "string"
                      }
                    },
                    "end_of_use": {
                      "type": "string",
                      "description": "Date on which the PAM asset expire",
                      "format": "dateTime",
                      "default": "null",
                      "x-validation-rules": "The date follows the ISO 8601 format"
                    },
                    "variation_files": {
                      "type": "array",
                      "description": "Variations of the PAM asset",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_link": {
                            "type": "object",
                            "properties": {
                              "self": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string",
                                    "description": "URI of the variation entity"
                                  }
                                }
                              },
                              "download": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string",
                                    "description": "URI to download the variation file"
                                  }
                                }
                              }
                            },
                            "description": "Links to get and download the variation file"
                          },
                          "locale": {
                            "type": "string",
                            "description": "Locale code of the variation"
                          },
                          "scope": {
                            "type": "string",
                            "description": "Channel code of the variation"
                          },
                          "code": {
                            "type": "string",
                            "description": "Code of the variation"
                          }
                        }
                      },
                      "x-read-only": true
                    },
                    "reference_files": {
                      "type": "array",
                      "description": "Reference files of the PAM asset",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_link": {
                            "type": "object",
                            "properties": {
                              "self": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string",
                                    "description": "URI of the reference file entity"
                                  }
                                }
                              },
                              "download": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string",
                                    "description": "URI to download the reference file"
                                  }
                                }
                              }
                            },
                            "description": "Links to get and download the reference file"
                          },
                          "locale": {
                            "type": "string",
                            "description": "Locale code of the reference file"
                          },
                          "code": {
                            "type": "string",
                            "description": "Code of the reference file"
                          }
                        }
                      },
                      "x-read-only": true
                    }
                  },
                  "example": {
                    "code": "tshirt_artemis_main_picture",
                    "categories": [
                      "tshirts_assets"
                    ],
                    "description": "The main picture of the Artemis t-shirt",
                    "localizable": false,
                    "tags": [
                      "tshirts",
                      "red",
                      "summer"
                    ],
                    "end_of_use": "2019-09-01T00:00:00+0200",
                    "variation_files": [
                      {
                        "_link": {
                          "download": {
                            "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/ecommerce/no_locale/download"
                          },
                          "self": {
                            "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/ecommerce/no_locale"
                          }
                        },
                        "scope": "e_commerce",
                        "code": "7/5/8/e/758e39d48va7b42a55001434fd3d7b6cf3189b7f_tshirt_artemis_main_picture_ecommerce.jpg"
                      },
                      {
                        "_link": {
                          "download": {
                            "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/print/no_locale/download"
                          },
                          "self": {
                            "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/print/no_locale"
                          }
                        },
                        "scope": "print",
                        "code": "7/5/8/e/759e39d48va7b42a55002434fd3d7b6cf3189b7f_tshirt_artemis_main_picture_print.jpg"
                      }
                    ],
                    "reference_files": [
                      {
                        "_link": {
                          "download": {
                            "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/reference-files/no_locale/download"
                          },
                          "self": {
                            "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/reference-files/no_locale"
                          }
                        },
                        "code": "7/5/8/e/759e39d48va7b42a55002434fd3d7b6cf3189b7f_tshirt_artemis_main_picture.jpg"
                      }
                    ]
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "Created",
              "headers": {
                "Location": {
                  "description": "URI of the created resource",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {},
              "x-details": "Means that the creation was successful"
            },
            "204": {
              "description": "No content to return",
              "headers": {
                "Location": {
                  "description": "URI of the updated resource",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {},
              "x-details": "Means that the update was successful"
            },
            "400": {
              "description": "Bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 400
                },
                "message": {
                  "example": "Invalid JSON message received"
                }
              },
              "x-details": "Can be caused by a malformed JSON request"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "415": {
              "description": "Unsupported Media type",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 415
                },
                "message": {
                  "example": "`xxx’ in `Content-Type’ header is not valid.  Only `application/json’ is allowed."
                }
              },
              "x-details": "The `Content-Type` header has to be `application/json`"
            },
            "422": {
              "description": "Unprocessable entity",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 422
                },
                "message": {
                  "example": "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
                },
                "_links": {
                  "example": {
                    "documentation": {
                      "href": "http://api.akeneo.com/api-reference.html"
                    }
                  }
                }
              },
              "x-details": "The validation of the entity given in the body of the request failed"
            }
          },
          "x-versions": [
            "2.1",
            "2.2",
            "2.3",
            "3.x"
          ],
          "x-ee": true,
          "x-deprecated": true,
          "x-codegen-request-body-name": "body"
        }
      },
      "/api/rest/v1/assets/{asset_code}/reference-files/{locale_code}": {
        "get": {
          "tags": [
            "PAM asset reference file"
          ],
          "summary": "Get a reference file",
          "description": "This endpoint allows you to get the information about a reference file of a given PAM asset.",
          "operationId": "get_reference_files__locale_code_",
          "parameters": [
            {
              "name": "asset_code",
              "in": "path",
              "description": "Code of the asset",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "locale_code",
              "in": "path",
              "description": "Code of the locale if the asset is localizable or equal to `no-locale` if the asset is not localizable",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Code of the PAM asset reference file",
                        "x-immutable": true
                      },
                      "locale": {
                        "type": "string",
                        "description": "Locale of the PAM asset reference file, equal to `null` if the asset is not localizable"
                      },
                      "_link": {
                        "type": "object",
                        "properties": {
                          "download": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI to download the reference file"
                              }
                            }
                          }
                        },
                        "description": "Links to get and download the reference file"
                      }
                    },
                    "example": {
                      "code": "7/5/8/e/759e39d48va7b42a55002434fd3d7b6cf3189b7f_tshirt_artemis_main_picture.jpg",
                      "_link": {
                        "download": {
                          "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/reference-files/no_locale/download"
                        }
                      }
                    }
                  }
                }
              },
              "x-details": "Returns the content of the reference file in JSON format"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "404": {
              "description": "Resource not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 404
                },
                "message": {
                  "example": "Resource `my_resource_code` does not exist."
                }
              },
              "x-details": "The resource code given in the URI does not correspond to any existing PIM resource"
            },
            "406": {
              "description": "Not Acceptable",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 406
                },
                "message": {
                  "example": "`xxx’ in `Accept` header is not valid. Only `application/json` is allowed."
                }
              },
              "x-details": "The `Accept` header is not `application/json` but it should"
            }
          },
          "x-versions": [
            "2.1",
            "2.2",
            "2.3",
            "3.x"
          ],
          "x-ee": true,
          "x-deprecated": true
        },
        "post": {
          "tags": [
            "PAM asset reference file"
          ],
          "summary": "Upload a new reference file",
          "description": "This endpoint allows you to upload a new reference file for a given PAM asset and locale. It will also automatically generate all the variation files corresponding to this reference file.",
          "operationId": "post_reference_files__locale_code_",
          "parameters": [
            {
              "name": "asset_code",
              "in": "path",
              "description": "Code of the asset",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "locale_code",
              "in": "path",
              "description": "Code of the locale if the asset is localizable or equal to `no-locale` if the asset is not localizable",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "Content-Type",
              "in": "header",
              "description": "Equal to 'multipart/form-data', no other value allowed",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "file"
                  ],
                  "type": "object",
                  "properties": {
                    "file": {
                      "type": "string",
                      "description": "The binaries of the file",
                      "format": "binary"
                    }
                  }
                }
              }
            },
            "required": false
          },
          "responses": {
            "201": {
              "description": "Uploaded",
              "headers": {
                "Location": {
                  "description": "URI of the created resource",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "Message explaining the warning"
                      },
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "channel": {
                              "type": "string",
                              "description": "Channel for which the variation file generation failed"
                            },
                            "locale": {
                              "type": "string",
                              "description": "Locale for which the variation file generation failed"
                            },
                            "message": {
                              "type": "string",
                              "description": "Message explaining why the variation file generation failed"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "x-details": "Means that the reference file upload was successful. Beware that even if the reference file upload is complete, some variation files generations could have failed. If so, you will see a warning message in the response body.",
              "x-no-entity": true
            },
            "400": {
              "description": "Bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 400
                },
                "message": {
                  "example": "Invalid JSON message received"
                }
              },
              "x-details": "Can be caused by a malformed JSON request"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "404": {
              "description": "Resource not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 404
                },
                "message": {
                  "example": "Resource `my_resource_code` does not exist."
                }
              },
              "x-details": "The resource code given in the URI does not correspond to any existing PIM resource"
            },
            "415": {
              "description": "Unsupported Media type",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 415
                },
                "message": {
                  "example": "`xxx’ in `Content-Type’ header is not valid.  Only `multipart/form-data’ is allowed."
                }
              },
              "x-details": "The `Content-Type` header has to be `multipart/form-data`"
            },
            "422": {
              "description": "Unprocessable entity",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 422
                },
                "message": {
                  "example": "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
                },
                "_links": {
                  "example": {
                    "documentation": {
                      "href": "http://api.akeneo.com/api-reference.html"
                    }
                  }
                }
              },
              "x-details": "The validation of the entity given in the body of the request failed"
            }
          },
          "x-versions": [
            "2.1",
            "2.2",
            "2.3",
            "3.x"
          ],
          "x-ee": true,
          "x-deprecated": true,
          "x-codegen-request-body-name": "body"
        }
      },
      "/api/rest/v1/assets/{asset_code}/reference-files/{locale_code}/download": {
        "get": {
          "tags": [
            "PAM asset reference file"
          ],
          "summary": "Download a reference file",
          "description": "This endpoint allows you to download a given reference file.",
          "operationId": "get_reference_files__channel_code__locale_code__download",
          "parameters": [
            {
              "name": "asset_code",
              "in": "path",
              "description": "Code of the asset",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "locale_code",
              "in": "path",
              "description": "Code of the locale if the asset is localizable or equal to `no-locale` if the asset is not localizable",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {},
              "x-details": "Returns the binary of the reference file",
              "x-content-type": "Mime-type of the reference file"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "404": {
              "description": "Resource not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 404
                },
                "message": {
                  "example": "Resource `my_resource_code` does not exist."
                }
              },
              "x-details": "The resource code given in the URI does not correspond to any existing PIM resource"
            }
          },
          "x-content-type": "Mime-type of the reference file",
          "x-versions": [
            "2.1",
            "2.2",
            "2.3",
            "3.x"
          ],
          "x-ee": true,
          "x-deprecated": true
        }
      },
      "/api/rest/v1/assets/{asset_code}/variation-files/{channel_code}/{locale_code}": {
        "get": {
          "tags": [
            "PAM asset variation file"
          ],
          "summary": "Get a variation file",
          "description": "This endpoint allows you to get the information about a variation file of a given PAM asset.",
          "operationId": "get_variation_files__channel_code__locale_code",
          "parameters": [
            {
              "name": "asset_code",
              "in": "path",
              "description": "Code of the asset",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "channel_code",
              "in": "path",
              "description": "Code of the channel",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "locale_code",
              "in": "path",
              "description": "Code of the locale if the asset is localizable or equal to `no-locale` if the asset is not localizable",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Code of the PAM asset variation file",
                        "x-immutable": true
                      },
                      "locale": {
                        "type": "string",
                        "description": "Locale of the PAM asset variation file, equal to `null` if the asset is not localizable"
                      },
                      "scope": {
                        "type": "string",
                        "description": "Channel of the PAM asset variation file"
                      },
                      "_link": {
                        "type": "object",
                        "properties": {
                          "download": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI to download the variation file"
                              }
                            }
                          }
                        },
                        "description": "Links to get and download the reference file"
                      }
                    },
                    "example": {
                      "code": "7/5/8/e/758e39d48va7b42a55001434fd3d7b6cf3189b7f_tshirt_artemis_main_picture_ecommerce.jpg",
                      "scope": "ecommerce",
                      "_link": {
                        "download": {
                          "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/ecommerce/no_locale/download"
                        }
                      }
                    }
                  }
                }
              },
              "x-details": "Returns the content of the variation file in JSON format"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "404": {
              "description": "Resource not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 404
                },
                "message": {
                  "example": "Resource `my_resource_code` does not exist."
                }
              },
              "x-details": "The resource code given in the URI does not correspond to any existing PIM resource"
            },
            "406": {
              "description": "Not Acceptable",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 406
                },
                "message": {
                  "example": "`xxx’ in `Accept` header is not valid. Only `application/json` is allowed."
                }
              },
              "x-details": "The `Accept` header is not `application/json` but it should"
            }
          },
          "x-versions": [
            "2.1",
            "2.2",
            "2.3",
            "3.x"
          ],
          "x-ee": true,
          "x-deprecated": true
        },
        "post": {
          "tags": [
            "PAM asset variation file"
          ],
          "summary": "Upload a new variation file",
          "description": "This endpoint allows you to upload a new variation file for a given PAM asset, channel and locale.",
          "operationId": "post_variation_files__channel_code__locale_code_",
          "parameters": [
            {
              "name": "asset_code",
              "in": "path",
              "description": "Code of the asset",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "channel_code",
              "in": "path",
              "description": "Code of the channel",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "locale_code",
              "in": "path",
              "description": "Code of the locale if the asset is localizable or equal to `no-locale` if the asset is not localizable",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "Content-Type",
              "in": "header",
              "description": "Equal to 'multipart/form-data', no other value allowed",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "file"
                  ],
                  "type": "object",
                  "properties": {
                    "file": {
                      "type": "string",
                      "description": "The binaries of the file",
                      "format": "binary"
                    }
                  }
                }
              }
            },
            "required": false
          },
          "responses": {
            "201": {
              "description": "Created",
              "headers": {
                "Location": {
                  "description": "URI of the created resource",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {},
              "x-details": "Means that the creation was successful"
            },
            "400": {
              "description": "Bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 400
                },
                "message": {
                  "example": "Invalid JSON message received"
                }
              },
              "x-details": "Can be caused by a malformed JSON request"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "404": {
              "description": "Resource not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 404
                },
                "message": {
                  "example": "Resource `my_resource_code` does not exist."
                }
              },
              "x-details": "The resource code given in the URI does not correspond to any existing PIM resource"
            },
            "415": {
              "description": "Unsupported Media type",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 415
                },
                "message": {
                  "example": "`xxx’ in `Content-Type’ header is not valid.  Only `multipart/form-data’ is allowed."
                }
              },
              "x-details": "The `Content-Type` header has to be `multipart/form-data`"
            },
            "422": {
              "description": "Unprocessable entity",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 422
                },
                "message": {
                  "example": "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
                },
                "_links": {
                  "example": {
                    "documentation": {
                      "href": "http://api.akeneo.com/api-reference.html"
                    }
                  }
                }
              },
              "x-details": "The validation of the entity given in the body of the request failed"
            }
          },
          "x-versions": [
            "2.1",
            "2.2",
            "2.3",
            "3.x"
          ],
          "x-ee": true,
          "x-deprecated": true,
          "x-codegen-request-body-name": "body"
        }
      },
      "/api/rest/v1/assets/{asset_code}/variation-files/{channel_code}/{locale_code}/download": {
        "get": {
          "tags": [
            "PAM asset variation file"
          ],
          "summary": "Download a variation file",
          "description": "This endpoint allows you to download a given variation file.",
          "operationId": "get_variation_files__channel_code__locale_code__download",
          "parameters": [
            {
              "name": "asset_code",
              "in": "path",
              "description": "Code of the asset",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "channel_code",
              "in": "path",
              "description": "Code of the channel",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "locale_code",
              "in": "path",
              "description": "Code of the locale if the asset is localizable or equal to `no-locale` if the asset is not localizable",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {},
              "x-details": "Returns the binary of the variation file",
              "x-content-type": "Mime-type of the variation file"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "404": {
              "description": "Resource not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 404
                },
                "message": {
                  "example": "Resource `my_resource_code` does not exist."
                }
              },
              "x-details": "The resource code given in the URI does not correspond to any existing PIM resource"
            }
          },
          "x-content-type": "Mime-type of the variation file",
          "x-versions": [
            "2.1",
            "2.2",
            "2.3",
            "3.x"
          ],
          "x-ee": true,
          "x-deprecated": true
        }
      },
      "/api/rest/v1/asset-categories": {
        "get": {
          "tags": [
            "PAM asset category"
          ],
          "summary": "Get list of PAM asset categories",
          "description": "This endpoint allows you to get a list of PAM asset categories. PAM asset categories are paginated and sorted by `root/left`.",
          "operationId": "get_asset_categories",
          "parameters": [
            {
              "name": "page",
              "in": "query",
              "description": "Number of the page to retrieve when using the `page` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html#pagination\">Pagination</a> section",
              "schema": {
                "type": "integer",
                "default": 1
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
              "schema": {
                "maximum": 100,
                "minimum": 1,
                "type": "integer",
                "default": 10
              }
            },
            {
              "name": "with_count",
              "in": "query",
              "description": "Return the count of items in the response. Be carefull with that, on a big catalog, it can decrease performance in a significative way",
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Returns PAM asset categories paginated",
              "content": {
                "application/json": {
                  "schema": {
                    "title": "PAM Asset Categories",
                    "type": "object",
                    "properties": {
                      "_embedded": {
                        "type": "object",
                        "properties": {
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "_links": {
                                      "type": "object",
                                      "properties": {
                                        "self": {
                                          "type": "object",
                                          "properties": {
                                            "href": {
                                              "type": "string",
                                              "description": "URI of the resource"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "required": [
                                    "code"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "string",
                                      "description": "PAM asset category code",
                                      "x-immutable": true
                                    },
                                    "parent": {
                                      "type": "string",
                                      "description": "PAM ssset category code of the parent's asset category",
                                      "default": "null",
                                      "x-validation-rules": "&bull; It is either equal to `null` or to an existing asset category code. &#10;&bull; If equal to an existing asset category code, it cannot reference itself."
                                    },
                                    "labels": {
                                      "type": "object",
                                      "properties": {
                                        "localeCode": {
                                          "type": "string",
                                          "description": "PAM asset category label for the locale `localeCode`"
                                        }
                                      },
                                      "description": "PAM asset category labels for each locale",
                                      "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                                    }
                                  },
                                  "example": {
                                    "code": "front_views",
                                    "parent": "pictures",
                                    "labels": {
                                      "en_US": "Front views",
                                      "fr_FR": "Vues de face"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      },
                      "_links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the current page of resources"
                              }
                            }
                          },
                          "first": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the first page of resources"
                              }
                            }
                          },
                          "previous": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the previous page of resources"
                              }
                            }
                          },
                          "next": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the next page of resources"
                              }
                            }
                          }
                        }
                      },
                      "current_page": {
                        "type": "integer",
                        "description": "Current page number"
                      }
                    }
                  }
                },
                "_links": {
                  "example": {
                    "self": {
                      "href": "https://demo.akeneo.com/api/rest/v1/asset-categories?page=2&limit=3"
                    },
                    "first": {
                      "href": "https://demo.akeneo.com/api/rest/v1/asset-categories?page=1&limit=3"
                    },
                    "previous": {
                      "href": "https://demo.akeneo.com/api/rest/v1/asset-categories?page=1&limit=3"
                    },
                    "next": {
                      "href": "https://demo.akeneo.com/api/rest/v1/asset-categories?page=3&limit=3"
                    }
                  }
                },
                "current_page": {
                  "example": 2
                },
                "_embedded": {
                  "example": {
                    "items": [
                      {
                        "_links": {
                          "self": {
                            "href": "https://demo.akeneo.com/api/rest/v1/asset-categories/pictures"
                          }
                        },
                        "code": "pictures",
                        "labels": {
                          "en_US": "Pictures",
                          "fr_FR": "Images",
                          "de_DE": "Bilder"
                        }
                      },
                      {
                        "_links": {
                          "self": {
                            "href": "https://demo.akeneo.com/api/rest/v1/asset-categories/front_views"
                          }
                        },
                        "code": "front_views",
                        "parent": "pictures",
                        "labels": {
                          "en_US": "Front views",
                          "fr_FR": "Vues de face",
                          "de_DE": "Vorderansichten"
                        }
                      },
                      {
                        "_links": {
                          "self": {
                            "href": "https://demo.akeneo.com/api/rest/v1/asset-categories/side_views"
                          }
                        },
                        "code": "side_views",
                        "parent": "pictures",
                        "labels": {
                          "en_US": "Side views",
                          "fr_FR": "Vues de profil",
                          "de_DE": "Profilansichten"
                        }
                      }
                    ]
                  }
                }
              }
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "406": {
              "description": "Not Acceptable",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 406
                },
                "message": {
                  "example": "`xxx’ in `Accept` header is not valid. Only `application/json` is allowed."
                }
              },
              "x-details": "The `Accept` header is not `application/json` but it should"
            }
          },
          "x-versions": [
            "2.1",
            "2.2",
            "2.3",
            "3.x"
          ],
          "x-ee": true,
          "x-deprecated": true
        },
        "post": {
          "tags": [
            "PAM asset category"
          ],
          "summary": "Create a new PAM asset category",
          "description": "This endpoint allows you to create a new PAM asset category.",
          "operationId": "post_asset_categories",
          "requestBody": {
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "code"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "PAM asset category code",
                      "x-immutable": true
                    },
                    "parent": {
                      "type": "string",
                      "description": "PAM ssset category code of the parent's asset category",
                      "default": "null",
                      "x-validation-rules": "&bull; It is either equal to `null` or to an existing asset category code. &#10;&bull; If equal to an existing asset category code, it cannot reference itself."
                    },
                    "labels": {
                      "type": "object",
                      "properties": {
                        "localeCode": {
                          "type": "string",
                          "description": "PAM asset category label for the locale `localeCode`"
                        }
                      },
                      "description": "PAM asset category labels for each locale",
                      "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                    }
                  },
                  "example": {
                    "code": "front_views",
                    "parent": "pictures",
                    "labels": {
                      "en_US": "Front views",
                      "fr_FR": "Vues de face"
                    }
                  }
                }
              }
            },
            "required": false
          },
          "responses": {
            "201": {
              "description": "Created",
              "headers": {
                "Location": {
                  "description": "URI of the created resource",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {},
              "x-details": "Means that the creation was successful"
            },
            "400": {
              "description": "Bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 400
                },
                "message": {
                  "example": "Invalid JSON message received"
                }
              },
              "x-details": "Can be caused by a malformed JSON request"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "415": {
              "description": "Unsupported Media type",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 415
                },
                "message": {
                  "example": "`xxx’ in `Content-Type’ header is not valid.  Only `application/json’ is allowed."
                }
              },
              "x-details": "The `Content-Type` header has to be `application/json`"
            },
            "422": {
              "description": "Unprocessable entity",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 422
                },
                "message": {
                  "example": "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
                },
                "_links": {
                  "example": {
                    "documentation": {
                      "href": "http://api.akeneo.com/api-reference.html"
                    }
                  }
                }
              },
              "x-details": "The validation of the entity given in the body of the request failed"
            }
          },
          "x-versions": [
            "2.1",
            "2.2",
            "2.3",
            "3.x"
          ],
          "x-ee": true,
          "x-deprecated": true,
          "x-codegen-request-body-name": "body"
        },
        "patch": {
          "tags": [
            "PAM asset category"
          ],
          "summary": "Update/create several PAM asset categories",
          "description": "This endpoint allows you to update several PAM asset categories at once.",
          "operationId": "patch_asset_categories",
          "requestBody": {
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "code"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "PAM asset category code",
                      "x-immutable": true
                    },
                    "parent": {
                      "type": "string",
                      "description": "PAM ssset category code of the parent's asset category",
                      "default": "null",
                      "x-validation-rules": "&bull; It is either equal to `null` or to an existing asset category code. &#10;&bull; If equal to an existing asset category code, it cannot reference itself."
                    },
                    "labels": {
                      "type": "object",
                      "properties": {
                        "localeCode": {
                          "type": "string",
                          "description": "PAM asset category label for the locale `localeCode`"
                        }
                      },
                      "description": "PAM asset category labels for each locale",
                      "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                    }
                  },
                  "example": {
                    "code": "front_views",
                    "parent": "pictures",
                    "labels": {
                      "en_US": "Front views",
                      "fr_FR": "Vues de face"
                    }
                  },
                  "x-examples": {
                    "x-example-1": "{\"code\":\"pictures\",\"parent\":null}",
                    "x-example-2": "{\"code\":\"front_views\",\"parent\":\"pitures\"}",
                    "x-example-3": "{\"code\":\"other_views\",\"parent\":\"pictures\"}"
                  }
                }
              }
            },
            "required": false
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "line": {
                        "type": "integer",
                        "description": "Line number"
                      },
                      "identifier": {
                        "type": "string",
                        "description": "Resource identifier, only filled when the resource is a product"
                      },
                      "code": {
                        "type": "string",
                        "description": "Resource code, only filled when the resource is not a product"
                      },
                      "status_code": {
                        "type": "integer",
                        "description": "HTTP status code, see <a href=\"/documentation/responses.html#client-errors\">Client errors</a> to understand the meaning of each code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "x-example-1": {
                  "example": "{\"line\":1,\"code\":\"spring_collection\",\"status_code\":201}"
                },
                "x-example-2": {
                  "example": "{\"line\":2,\"code\":\"front_views\",\"status_code\":422,\"message\":\"Asset category \"pitures\" does not exist.\"}"
                },
                "x-example-3": {
                  "example": "{\"line\":3,\"code\":\"other_views\",\"status_code\":204}"
                }
              },
              "x-details": "Returns a plain text response whose lines are JSON containing the status of each update or creation",
              "x-no-entity": true
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "413": {
              "description": "Request Entity Too Large",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 413
                },
                "message": {
                  "example": "Too many resources to process, 100 is the maximum allowed."
                }
              },
              "x-details": "There are too many resources to process (max 100) or the line of JSON is too long (max 1 000 000 characters)"
            },
            "415": {
              "description": "Unsupported Media type",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 415
                },
                "message": {
                  "example": "`xxx’ in `Content-Type’ header is not valid.  Only `application/vnd.akeneo.collection+json’ is allowed."
                }
              },
              "x-details": "The `Content-Type` header has to be `application/vnd.akeneo.collection+json`"
            }
          },
          "x-versions": [
            "2.1",
            "2.2",
            "2.3",
            "3.x"
          ],
          "x-ee": true,
          "x-deprecated": true,
          "x-body-by-line": "Contains several lines, each line is a category in JSON standard format",
          "x-codegen-request-body-name": "body"
        }
      },
      "/api/rest/v1/asset-categories/{code}": {
        "get": {
          "tags": [
            "PAM asset category"
          ],
          "summary": "Get a PAM asset category",
          "description": "This endpoint allows you to get the information about a given PAM asset category.",
          "operationId": "get_asset_categories__code_",
          "parameters": [
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "required": [
                      "code"
                    ],
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "PAM asset category code",
                        "x-immutable": true
                      },
                      "parent": {
                        "type": "string",
                        "description": "PAM ssset category code of the parent's asset category",
                        "default": "null",
                        "x-validation-rules": "&bull; It is either equal to `null` or to an existing asset category code. &#10;&bull; If equal to an existing asset category code, it cannot reference itself."
                      },
                      "labels": {
                        "type": "object",
                        "properties": {
                          "localeCode": {
                            "type": "string",
                            "description": "PAM asset category label for the locale `localeCode`"
                          }
                        },
                        "description": "PAM asset category labels for each locale",
                        "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                      }
                    },
                    "example": {
                      "code": "front_views",
                      "parent": "pictures",
                      "labels": {
                        "en_US": "Front views",
                        "fr_FR": "Vues de face"
                      }
                    }
                  }
                }
              },
              "x-details": "Returns the content of the asset category in JSON standard format"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "404": {
              "description": "Resource not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 404
                },
                "message": {
                  "example": "Resource `my_resource_code` does not exist."
                }
              },
              "x-details": "The resource code given in the URI does not correspond to any existing PIM resource"
            },
            "406": {
              "description": "Not Acceptable",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 406
                },
                "message": {
                  "example": "`xxx’ in `Accept` header is not valid. Only `application/json` is allowed."
                }
              },
              "x-details": "The `Accept` header is not `application/json` but it should"
            }
          },
          "x-versions": [
            "2.1",
            "2.2",
            "2.3",
            "3.x"
          ],
          "x-ee": true,
          "x-deprecated": true
        },
        "patch": {
          "tags": [
            "PAM asset category"
          ],
          "summary": "Update/create a PAM asset category",
          "description": "This endpoint allows you to update a given PAM asset category. Know more about <a href=\"/documentation/update.html#update-behavior\">Update behavior</a>. Note that if no category exists for the given code, it creates it.",
          "operationId": "patch_asset_categories__code_",
          "parameters": [
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "code"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "PAM asset category code",
                      "x-immutable": true
                    },
                    "parent": {
                      "type": "string",
                      "description": "PAM ssset category code of the parent's asset category",
                      "default": "null",
                      "x-validation-rules": "&bull; It is either equal to `null` or to an existing asset category code. &#10;&bull; If equal to an existing asset category code, it cannot reference itself."
                    },
                    "labels": {
                      "type": "object",
                      "properties": {
                        "localeCode": {
                          "type": "string",
                          "description": "PAM asset category label for the locale `localeCode`"
                        }
                      },
                      "description": "PAM asset category labels for each locale",
                      "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                    }
                  },
                  "example": {
                    "code": "front_views",
                    "parent": "pictures",
                    "labels": {
                      "en_US": "Front views",
                      "fr_FR": "Vues de face"
                    }
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "Created",
              "headers": {
                "Location": {
                  "description": "URI of the created resource",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {},
              "x-details": "Means that the creation was successful"
            },
            "204": {
              "description": "No content to return",
              "headers": {
                "Location": {
                  "description": "URI of the updated resource",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {},
              "x-details": "Means that the update was successful"
            },
            "400": {
              "description": "Bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 400
                },
                "message": {
                  "example": "Invalid JSON message received"
                }
              },
              "x-details": "Can be caused by a malformed JSON request"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "415": {
              "description": "Unsupported Media type",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 415
                },
                "message": {
                  "example": "`xxx’ in `Content-Type’ header is not valid.  Only `application/json’ is allowed."
                }
              },
              "x-details": "The `Content-Type` header has to be `application/json`"
            },
            "422": {
              "description": "Unprocessable entity",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 422
                },
                "message": {
                  "example": "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
                },
                "_links": {
                  "example": {
                    "documentation": {
                      "href": "http://api.akeneo.com/api-reference.html"
                    }
                  }
                }
              },
              "x-details": "The validation of the entity given in the body of the request failed"
            }
          },
          "x-versions": [
            "2.1",
            "2.2",
            "2.3",
            "3.x"
          ],
          "x-ee": true,
          "x-deprecated": true,
          "x-codegen-request-body-name": "body"
        }
      },
      "/api/rest/v1/asset-tags": {
        "get": {
          "tags": [
            "PAM asset tag"
          ],
          "summary": "Get list of PAM asset tags",
          "description": "This endpoint allows you to get a list of PAM asset tags. PAM asset tags are paginated.",
          "operationId": "get_asset_tags",
          "parameters": [
            {
              "name": "page",
              "in": "query",
              "description": "Number of the page to retrieve when using the `page` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html#pagination\">Pagination</a> section",
              "schema": {
                "type": "integer",
                "default": 1
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
              "schema": {
                "maximum": 100,
                "minimum": 1,
                "type": "integer",
                "default": 10
              }
            },
            {
              "name": "with_count",
              "in": "query",
              "description": "Return the count of items in the response. Be carefull with that, on a big catalog, it can decrease performance in a significative way",
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Returns PAM asset tags paginated",
              "content": {
                "application/json": {
                  "schema": {
                    "title": "PAM Asset Tags",
                    "type": "object",
                    "properties": {
                      "_embedded": {
                        "type": "object",
                        "properties": {
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "_links": {
                                      "type": "object",
                                      "properties": {
                                        "self": {
                                          "type": "object",
                                          "properties": {
                                            "href": {
                                              "type": "string",
                                              "description": "URI of the resource"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "required": [
                                    "code"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "string",
                                      "description": "PAM asset tag code",
                                      "x-immutable": true
                                    }
                                  },
                                  "example": {
                                    "code": "tshirt"
                                  }
                                }
                              ]
                            }
                          }
                        }
                      },
                      "_links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the current page of resources"
                              }
                            }
                          },
                          "first": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the first page of resources"
                              }
                            }
                          },
                          "previous": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the previous page of resources"
                              }
                            }
                          },
                          "next": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the next page of resources"
                              }
                            }
                          }
                        }
                      },
                      "current_page": {
                        "type": "integer",
                        "description": "Current page number"
                      }
                    }
                  }
                },
                "_links": {
                  "example": {
                    "self": {
                      "href": "https://demo.akeneo.com/api/rest/v1/asset-tags?page=2&limit=3"
                    },
                    "first": {
                      "href": "https://demo.akeneo.com/api/rest/v1/asset-tags?page=1&limit=3"
                    },
                    "previous": {
                      "href": "https://demo.akeneo.com/api/rest/v1/asset-tags?page=1&limit=3"
                    },
                    "next": {
                      "href": "https://demo.akeneo.com/api/rest/v1/asset-tags?page=3&limit=3"
                    }
                  }
                },
                "current_page": {
                  "example": 2
                },
                "_embedded": {
                  "example": {
                    "items": [
                      {
                        "_links": {
                          "self": {
                            "href": "https://demo.akeneo.com/api/rest/v1/asset-tags/tshirt"
                          }
                        },
                        "code": "tshirt"
                      },
                      {
                        "_links": {
                          "self": {
                            "href": "https://demo.akeneo.com/api/rest/v1/asset-tags/belt"
                          }
                        },
                        "code": "belt"
                      },
                      {
                        "_links": {
                          "self": {
                            "href": "https://demo.akeneo.com/api/rest/v1/asset-tags/red"
                          }
                        },
                        "code": "red"
                      }
                    ]
                  }
                }
              }
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "406": {
              "description": "Not Acceptable",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 406
                },
                "message": {
                  "example": "`xxx’ in `Accept` header is not valid. Only `application/json` is allowed."
                }
              },
              "x-details": "The `Accept` header is not `application/json` but it should"
            }
          },
          "x-versions": [
            "2.1",
            "2.2",
            "2.3",
            "3.x"
          ],
          "x-ee": true,
          "x-deprecated": true
        }
      },
      "/api/rest/v1/asset-tags/{code}": {
        "get": {
          "tags": [
            "PAM asset tag"
          ],
          "summary": "Get a PAM asset tag",
          "description": "This endpoint allows you to get the information about a given PAM asset tag.",
          "operationId": "get_asset_tags__code_",
          "parameters": [
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "required": [
                      "code"
                    ],
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "PAM asset tag code",
                        "x-immutable": true
                      }
                    },
                    "example": {
                      "code": "tshirt"
                    }
                  }
                }
              },
              "x-details": "Returns the content of the asset tag in JSON format"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "404": {
              "description": "Resource not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 404
                },
                "message": {
                  "example": "Resource `my_resource_code` does not exist."
                }
              },
              "x-details": "The resource code given in the URI does not correspond to any existing PIM resource"
            },
            "406": {
              "description": "Not Acceptable",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 406
                },
                "message": {
                  "example": "`xxx’ in `Accept` header is not valid. Only `application/json` is allowed."
                }
              },
              "x-details": "The `Accept` header is not `application/json` but it should"
            }
          },
          "x-versions": [
            "2.1",
            "2.2",
            "2.3",
            "3.x"
          ],
          "x-ee": true,
          "x-deprecated": true
        },
        "patch": {
          "tags": [
            "PAM asset tag"
          ],
          "summary": "Update/create a PAM asset tag",
          "description": "This endpoint allows you to update a given PAM asset tag. Know more about <a href=\"/documentation/update.html#update-behavior\">Update behavior</a>. Note that if no tag exists for the given code, it creates it.",
          "operationId": "patch_asset_tags__code_",
          "parameters": [
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "code"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "PAM asset tag code",
                      "x-immutable": true
                    }
                  },
                  "example": {
                    "code": "tshirt"
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "Created",
              "headers": {
                "Location": {
                  "description": "URI of the created resource",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {},
              "x-details": "Means that the creation was successful"
            },
            "204": {
              "description": "No content to return",
              "headers": {
                "Location": {
                  "description": "URI of the updated resource",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {},
              "x-details": "Means that the update was successful"
            },
            "400": {
              "description": "Bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 400
                },
                "message": {
                  "example": "Invalid JSON message received"
                }
              },
              "x-details": "Can be caused by a malformed JSON request"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list categories."
                }
              },
              "x-details": "The user does not have the permission to execute this request"
            },
            "415": {
              "description": "Unsupported Media type",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 415
                },
                "message": {
                  "example": "`xxx’ in `Content-Type’ header is not valid.  Only `application/json’ is allowed."
                }
              },
              "x-details": "The `Content-Type` header has to be `application/json`"
            },
            "422": {
              "description": "Unprocessable entity",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 422
                },
                "message": {
                  "example": "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
                },
                "_links": {
                  "example": {
                    "documentation": {
                      "href": "http://api.akeneo.com/api-reference.html"
                    }
                  }
                }
              },
              "x-details": "The validation of the entity given in the body of the request failed"
            }
          },
          "x-versions": [
            "2.1",
            "2.2",
            "2.3",
            "3.x"
          ],
          "x-ee": true,
          "x-deprecated": true,
          "x-codegen-request-body-name": "body"
        }
      },
      "/api/rest/v1/catalogs": {
        "get": {
          "tags": [
            "Catalogs"
          ],
          "summary": "Get the list of owned catalogs",
          "description": "This endpoint allows you to get the list of catalogs you owned.",
          "operationId": "get_app_catalogs",
          "parameters": [
            {
              "name": "page",
              "in": "query",
              "description": "Number of the page to retrieve when using the `page` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html#pagination\">Pagination</a> section",
              "schema": {
                "type": "integer",
                "default": 1
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
              "schema": {
                "maximum": 100,
                "minimum": 1,
                "type": "integer",
                "default": 100
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Return the paginated catalogs owned by the user making the request",
              "content": {
                "application/json": {
                  "schema": {
                    "title": "Catalogs",
                    "type": "object",
                    "properties": {
                      "_embedded": {
                        "type": "object",
                        "properties": {
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "_links": {
                                      "type": "object",
                                      "properties": {
                                        "self": {
                                          "type": "object",
                                          "properties": {
                                            "href": {
                                              "type": "string",
                                              "description": "URI of the resource"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "Catalog id",
                                      "x-immutable": true
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "Catalog name"
                                    },
                                    "enabled": {
                                      "type": "boolean",
                                      "description": "Whether the catalog is enabled or not",
                                      "default": false
                                    }
                                  },
                                  "example": {
                                    "id": "12351d98-200e-4bbc-aa19-7fdda1bd14f2",
                                    "name": "My app catalog",
                                    "enabled": false
                                  }
                                }
                              ]
                            }
                          }
                        }
                      },
                      "_links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the current page of resources"
                              }
                            }
                          },
                          "first": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the first page of resources"
                              }
                            }
                          },
                          "previous": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the previous page of resources"
                              }
                            }
                          },
                          "next": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the next page of resources"
                              }
                            }
                          }
                        }
                      },
                      "current_page": {
                        "type": "integer",
                        "description": "Current page number"
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list catalogs."
                }
              },
              "x-details": "The app does not have the permission to execute this request"
            }
          },
          "x-versions": [
            "SaaS"
          ],
          "x-app-token": true
        },
        "post": {
          "tags": [
            "Catalogs"
          ],
          "summary": "Create a new catalog",
          "description": "This endpoint allows you to create a new catalog.",
          "operationId": "post_app_catalog",
          "requestBody": {
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "name"
                  ],
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Catalog name"
                    }
                  },
                  "example": {
                    "name": "My app catalog"
                  }
                }
              }
            },
            "required": false
          },
          "responses": {
            "201": {
              "description": "Created",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Catalog id",
                        "x-immutable": true
                      },
                      "name": {
                        "type": "string",
                        "description": "Catalog name"
                      },
                      "enabled": {
                        "type": "boolean",
                        "description": "Whether the catalog is enabled or not",
                        "default": false
                      }
                    },
                    "example": {
                      "id": "12351d98-200e-4bbc-aa19-7fdda1bd14f2",
                      "name": "My app catalog",
                      "enabled": false
                    }
                  }
                }
              },
              "x-details": "Means that the creation was successful"
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list catalogs."
                }
              },
              "x-details": "The app does not have the permission to execute this request"
            },
            "415": {
              "description": "Unsupported Media type",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 415
                },
                "message": {
                  "example": "`xxx’ in `Content-Type’ header is not valid.  Only `application/json’ is allowed."
                }
              },
              "x-details": "The `Content-Type` header has to be `application/json`"
            },
            "422": {
              "description": "Unprocessable entity",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                }
              },
              "x-details": "The validation of the entity given in the body of the request failed",
              "x-examples-per-version": [
                {
                  "x-version": "SaaS",
                  "x-example": {
                    "code": 422,
                    "message": "Validation failed.",
                    "errors": [
                      {
                        "property": "name",
                        "message": "This value should not be blank."
                      },
                      {
                        "property": "name",
                        "message": "This value is too short. It should have 1 character or more."
                      }
                    ]
                  }
                }
              ]
            }
          },
          "x-versions": [
            "SaaS"
          ],
          "x-app-token": true,
          "x-codegen-request-body-name": "body"
        }
      },
      "/api/rest/v1/catalogs/{id}": {
        "get": {
          "tags": [
            "Catalogs"
          ],
          "summary": "Get a catalog",
          "description": "This endpoint allows you to get the information about a catalog.",
          "operationId": "get_app_catalog",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Catalog ID",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Return the catalog",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Catalog id",
                        "x-immutable": true
                      },
                      "name": {
                        "type": "string",
                        "description": "Catalog name"
                      },
                      "enabled": {
                        "type": "boolean",
                        "description": "Whether the catalog is enabled or not",
                        "default": false
                      }
                    },
                    "example": {
                      "id": "12351d98-200e-4bbc-aa19-7fdda1bd14f2",
                      "name": "My app catalog",
                      "enabled": false
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list catalogs."
                }
              },
              "x-details": "The app does not have the permission to execute this request"
            },
            "404": {
              "description": "Catalog not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 404
                },
                "message": {
                  "example": "Catalog \"65f5a521-e65c-4d7b-8be8-1f267fa2729c\" does not exist or you can't access it."
                }
              },
              "x-details": "The catalog id given in the URI does not exist"
            }
          },
          "x-versions": [
            "SaaS"
          ],
          "x-app-token": true
        },
        "delete": {
          "tags": [
            "Catalogs"
          ],
          "summary": "Delete a catalog",
          "description": "This endpoint allows you to delete a catalog.",
          "operationId": "delete_app_catalog",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Catalog ID",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Deleted",
              "content": {}
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list catalogs."
                }
              },
              "x-details": "The app does not have the permission to execute this request"
            },
            "404": {
              "description": "Catalog not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 404
                },
                "message": {
                  "example": "Catalog \"65f5a521-e65c-4d7b-8be8-1f267fa2729c\" does not exist or you can't access it."
                }
              },
              "x-details": "The catalog id given in the URI does not exist"
            }
          },
          "x-versions": [
            "SaaS"
          ],
          "x-app-token": true
        },
        "patch": {
          "tags": [
            "Catalogs"
          ],
          "summary": "Update a catalog",
          "description": "This endpoint allows you to update a catalog.",
          "operationId": "patch_app_catalog",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Catalog ID",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "name"
                  ],
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Catalog name"
                    }
                  },
                  "example": {
                    "name": "My app catalog"
                  }
                }
              }
            },
            "required": false
          },
          "responses": {
            "200": {
              "description": "Updated",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Catalog id",
                        "x-immutable": true
                      },
                      "name": {
                        "type": "string",
                        "description": "Catalog name"
                      },
                      "enabled": {
                        "type": "boolean",
                        "description": "Whether the catalog is enabled or not",
                        "default": false
                      }
                    },
                    "example": {
                      "id": "12351d98-200e-4bbc-aa19-7fdda1bd14f2",
                      "name": "My app catalog",
                      "enabled": false
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list catalogs."
                }
              },
              "x-details": "The app does not have the permission to execute this request"
            },
            "404": {
              "description": "Catalog not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 404
                },
                "message": {
                  "example": "Catalog \"65f5a521-e65c-4d7b-8be8-1f267fa2729c\" does not exist or you can't access it."
                }
              },
              "x-details": "The catalog id given in the URI does not exist"
            },
            "415": {
              "description": "Unsupported Media type",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 415
                },
                "message": {
                  "example": "`xxx’ in `Content-Type’ header is not valid.  Only `application/json’ is allowed."
                }
              },
              "x-details": "The `Content-Type` header has to be `application/json`"
            },
            "422": {
              "description": "Unprocessable entity",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                }
              },
              "x-details": "The validation of the entity given in the body of the request failed",
              "x-examples-per-version": [
                {
                  "x-version": "SaaS",
                  "x-example": {
                    "code": 422,
                    "message": "Validation failed.",
                    "errors": [
                      {
                        "property": "name",
                        "message": "This value should not be blank."
                      },
                      {
                        "property": "name",
                        "message": "This value is too short. It should have 1 character or more."
                      }
                    ]
                  }
                }
              ]
            }
          },
          "x-versions": [
            "SaaS"
          ],
          "x-app-token": true,
          "x-codegen-request-body-name": "body"
        }
      },
      "/api/rest/v1/catalogs/{id}/product-uuids": {
        "get": {
          "tags": [
            "Catalog products"
          ],
          "summary": "Get the list of product uuids",
          "description": "This endpoint allows you to get the list of uuids of products contained in a catalog. Please, note that a disabled catalog can return an HTTP 200 with a payload containing an error message, for more details see the <a href=\"apps/catalogs.html#troubleshooting\">App Catalog</a> section.",
          "operationId": "get_app_catalog_product_uuids",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Id of the catalog",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            {
              "name": "search_after",
              "in": "query",
              "description": "Cursor when using the `search_after` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
              "schema": {
                "type": "string",
                "default": "cursor to the first page"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
              "schema": {
                "maximum": 1000,
                "minimum": 1,
                "type": "integer",
                "default": 100
              }
            },
            {
              "name": "updated_before",
              "in": "query",
              "description": "Filter products that have been updated BEFORE the provided date (Only available on Catalogs endpoints)",
              "schema": {
                "type": "string",
                "format": "date",
                "x-from-version": "SaaS"
              },
              "x-from-version": "SaaS"
            },
            {
              "name": "updated_after",
              "in": "query",
              "description": "Filter products that have been updated AFTER the provided date (Only available on Catalogs endpoints)",
              "schema": {
                "type": "string",
                "format": "date",
                "x-from-version": "SaaS"
              },
              "x-from-version": "SaaS"
            }
          ],
          "responses": {
            "200": {
              "description": "Return the paginated product uuids",
              "content": {
                "application/json": {
                  "schema": {
                    "title": "Product uuids",
                    "type": "object",
                    "properties": {
                      "_embedded": {
                        "type": "object",
                        "properties": {
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "format": "uuid"
                            }
                          }
                        }
                      },
                      "_links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the current page of resources"
                              }
                            }
                          },
                          "first": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the first page of resources"
                              }
                            }
                          },
                          "next": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the next page of resources"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list catalogs."
                }
              },
              "x-details": "The app does not have the permission to execute this request"
            },
            "404": {
              "description": "Catalog not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 404
                },
                "message": {
                  "example": "Catalog \"65f5a521-e65c-4d7b-8be8-1f267fa2729c\" does not exist or you can't access it."
                }
              },
              "x-details": "The catalog id given in the URI does not exist"
            }
          },
          "x-versions": [
            "SaaS"
          ],
          "x-app-token": true
        }
      },
      "/api/rest/v1/catalogs/{id}/products": {
        "get": {
          "tags": [
            "Catalog products"
          ],
          "summary": "Get the list of products related to a catalog",
          "description": "This endpoint allows you to get the list of products related to a catalog. Products are paginated and they can be filtered. In the Enterprise Edition, permissions based on your app settings are applied to the set of products you request. Please, note that a disabled catalog can return an HTTP 200 with a payload containing an error message, for more details see the <a href=\"apps/catalogs.html#troubleshooting\">App Catalog</a> section.",
          "operationId": "get_app_catalog_products",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Catalog ID",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            {
              "name": "search_after",
              "in": "query",
              "description": "Cursor when using the `search_after` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
              "schema": {
                "type": "string",
                "default": "cursor to the first page"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
              "schema": {
                "maximum": 1000,
                "minimum": 1,
                "type": "integer",
                "default": 100
              }
            },
            {
              "name": "updated_before",
              "in": "query",
              "description": "Filter products that have been updated BEFORE the provided date (Only available on Catalogs endpoints)",
              "schema": {
                "type": "string",
                "format": "date",
                "x-from-version": "SaaS"
              },
              "x-from-version": "SaaS"
            },
            {
              "name": "updated_after",
              "in": "query",
              "description": "Filter products that have been updated AFTER the provided date (Only available on Catalogs endpoints)",
              "schema": {
                "type": "string",
                "format": "date",
                "x-from-version": "SaaS"
              },
              "x-from-version": "SaaS"
            }
          ],
          "responses": {
            "200": {
              "description": "Return the paginated products",
              "content": {
                "application/json": {
                  "schema": {
                    "title": "Products",
                    "type": "object",
                    "properties": {
                      "_embedded": {
                        "type": "object",
                        "properties": {
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "format": "uuid"
                            }
                          }
                        }
                      },
                      "_links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the current page of resources"
                              }
                            }
                          },
                          "first": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the first page of resources"
                              }
                            }
                          },
                          "next": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the next page of resources"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "x-examples-per-version": [
                {
                  "x-version": "SaaS",
                  "x-example": {
                    "_links": {
                      "self": {
                        "href": "https://demo.akeneo.com/api/rest/v1/catalogs/65f5a521-e65c-4d7b-8be8-1f267fa2729c/products?limit=3"
                      },
                      "first": {
                        "href": "https://demo.akeneo.com/api/rest/v1/catalogs/65f5a521-e65c-4d7b-8be8-1f267fa2729c/products?limit=3"
                      },
                      "next": {
                        "href": "https://demo.akeneo.com/api/rest/v1/catalogs/65f5a521-e65c-4d7b-8be8-1f267fa2729c/products?search_after=0059d30f-6874-4277-81ed-3b3657c83f5e&limit=3"
                      }
                    },
                    "_embedded": {
                      "items": [
                        {
                          "uuid": "00073089-1310-4340-bcf0-9e33e4019b79",
                          "enabled": true,
                          "family": "mens_clothing",
                          "categories": [
                            "Cloths"
                          ],
                          "groups": [],
                          "values": {
                            "Default_Price": [
                              {
                                "data": [
                                  {
                                    "amount": "10.00",
                                    "currency": "USD"
                                  }
                                ]
                              }
                            ],
                            "sku": [
                              {
                                "data": "product_416"
                              }
                            ],
                            "Name": [
                              {
                                "data": "Product 416"
                              }
                            ],
                            "Weight": [
                              {
                                "data": {
                                  "amount": 10,
                                  "unit": "KILOGRAM"
                                }
                              }
                            ]
                          },
                          "created": "2022-03-14T15:25:45+00:00",
                          "updated": "2022-06-24T12:54:58+00:00",
                          "associations": {
                            "PACK": {
                              "products": [],
                              "product_models": [],
                              "groups": []
                            },
                            "UPSELL": {
                              "products": [],
                              "product_models": [],
                              "groups": []
                            },
                            "X_SELL": {
                              "products": [],
                              "product_models": [],
                              "groups": []
                            },
                            "SUBSTITUTION": {
                              "products": [],
                              "product_models": [],
                              "groups": []
                            }
                          },
                          "quantified_associations": {}
                        },
                        {
                          "uuid": "00248acf-f1f7-45cb-b409-c8c4b9a17a86",
                          "enabled": true,
                          "family": "mens_clothing",
                          "categories": [
                            "Cloths"
                          ],
                          "groups": [],
                          "values": {
                            "Default_Price": [
                              {
                                "data": [
                                  {
                                    "amount": "10.00",
                                    "currency": "USD"
                                  }
                                ]
                              }
                            ],
                            "sku": [
                              {
                                "data": "product_470"
                              }
                            ],
                            "Name": [
                              {
                                "data": "Product 470"
                              }
                            ],
                            "Weight": [
                              {
                                "data": {
                                  "amount": 10,
                                  "unit": "KILOGRAM"
                                }
                              }
                            ]
                          },
                          "created": "2022-03-14T15:25:45+00:00",
                          "updated": "2022-06-24T12:55:01+00:00",
                          "associations": {
                            "PACK": {
                              "products": [],
                              "product_models": [],
                              "groups": []
                            },
                            "UPSELL": {
                              "products": [],
                              "product_models": [],
                              "groups": []
                            },
                            "X_SELL": {
                              "products": [],
                              "product_models": [],
                              "groups": []
                            },
                            "SUBSTITUTION": {
                              "products": [],
                              "product_models": [],
                              "groups": []
                            }
                          },
                          "quantified_associations": {}
                        }
                      ]
                    }
                  }
                }
              ]
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list catalogs."
                }
              },
              "x-details": "The app does not have the permission to execute this request"
            },
            "404": {
              "description": "Catalog not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 404
                },
                "message": {
                  "example": "Catalog \"65f5a521-e65c-4d7b-8be8-1f267fa2729c\" does not exist or you can't access it."
                }
              },
              "x-details": "The catalog id given in the URI does not exist"
            }
          },
          "x-versions": [
            "SaaS"
          ]
        }
      },
      "/api/rest/v1/catalogs/{id}/products/{uuid}": {
        "get": {
          "tags": [
            "Catalog products"
          ],
          "summary": "Get a product related to a catalog",
          "description": "This endpoint allows you to get a specific product related to a catalog. In the Enterprise Edition, permissions based on your app settings are applied on the product you request. Please, note that a disabled catalog can return an HTTP 200 with a payload containing an error message, for more details see the <a href=\"apps/catalogs.html#troubleshooting\">App Catalog</a> section.",
          "operationId": "get_app_catalog_products_uuid",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Catalog ID",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            {
              "name": "uuid",
              "in": "path",
              "description": "Product UUID",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Return the product",
              "content": {},
              "x-examples-per-version": [
                {
                  "x-version": "SaaS",
                  "x-example": {
                    "uuid": "a5eed606-4f98-4d8c-b926-5b59f8fb0ee7",
                    "family": "tshirt",
                    "groups": [],
                    "categories": [],
                    "enabled": true,
                    "values": {
                      "name": [
                        {
                          "data": "Top",
                          "locale": "en_US"
                        }
                      ]
                    }
                  }
                }
              ]
            },
            "401": {
              "description": "Authentication required",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 401
                },
                "message": {
                  "example": "Authentication is required"
                }
              },
              "x-details": "Can be caused by a missing or expired token"
            },
            "403": {
              "description": "Access forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 403
                },
                "message": {
                  "example": "Access forbidden. You are not allowed to list catalogs."
                }
              },
              "x-details": "The app does not have the permission to execute this request"
            },
            "404": {
              "description": "Catalog not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 404
                },
                "message": {
                  "example": "Catalog \"65f5a521-e65c-4d7b-8be8-1f267fa2729c\" does not exist or you can't access it."
                }
              },
              "x-details": "The catalog id given in the URI does not exist"
            }
          },
          "x-versions": [
            "SaaS"
          ]
        }
      },
      "/api/rest/v1": {
        "get": {
          "tags": [
            "Overview"
          ],
          "summary": "Get list of all endpoints",
          "description": "This endpoint allows you to get the list of all the available endpoints. No need to be authenticated to use this endpoint.",
          "operationId": "get_endpoints",
          "responses": {
            "200": {
              "description": "Return the list of all available endpoints",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "host": {
                        "type": "string",
                        "description": "Host name"
                      },
                      "authentication": {
                        "type": "object",
                        "properties": {},
                        "description": "Endpoint to get the authentication token"
                      },
                      "routes": {
                        "type": "object",
                        "properties": {},
                        "description": "All the availables endpoints"
                      }
                    }
                  }
                },
                "host": {
                  "example": "https://demo.akeneo.com"
                },
                "authentication": {
                  "example": {
                    "fos_oauth_server_token": {
                      "route": "/api/oauth/v1/token",
                      "methods": [
                        "POST"
                      ]
                    }
                  }
                },
                "routes": {
                  "example": {
                    "pim_api_category_list": {
                      "route": "/api/rest/v1/categories",
                      "methods": [
                        "GET"
                      ]
                    },
                    "pim_api_category_get": {
                      "route": "/api/rest/v1/categories/{code}",
                      "methods": [
                        "GET"
                      ]
                    },
                    "pim_api_category_create": {
                      "route": "/api/rest/v1/categories",
                      "methods": [
                        "POST"
                      ]
                    },
                    "pim_api_category_partial_update": {
                      "route": "/api/rest/v1/categories/{code}",
                      "methods": [
                        "PATCH"
                      ]
                    }
                  }
                }
              },
              "x-no-entity": true
            },
            "406": {
              "description": "Not Acceptable",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 406
                },
                "message": {
                  "example": "`xxx’ in `Accept` header is not valid. Only `application/json` is allowed."
                }
              },
              "x-details": "The `Accept` header is not `application/json` but it should"
            }
          },
          "x-versions": [
            "1.7",
            "2.x",
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-no-token": true
        }
      },
      "/api/oauth/v1/token": {
        "post": {
          "tags": [
            "Authentication"
          ],
          "summary": "Get authentication token",
          "description": "This endpoint allows you to get an authentication token. No need to be authenticated to use this endpoint.",
          "operationId": "post_token",
          "parameters": [
            {
              "name": "Content-Type",
              "in": "header",
              "description": "Equal to 'application/json' or 'application/x-www-form-urlencoded', no other value allowed",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "Authorization",
              "in": "header",
              "description": "Equal to 'Basic xx', where 'xx' is the base 64 encoding of the client id and secret. Find out how to generate them in the <a href=\"/documentation/authentication.html#client-idsecret-generation\">Client ID/secret generation</a> section.",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "*/*": {
                "schema": {
                  "required": [
                    "grant_type",
                    "password",
                    "username"
                  ],
                  "type": "object",
                  "properties": {
                    "username": {
                      "type": "string",
                      "description": "Your PIM username"
                    },
                    "password": {
                      "type": "string",
                      "description": "Your PIM password"
                    },
                    "grant_type": {
                      "type": "string",
                      "description": "Always equal to \"password\""
                    }
                  },
                  "example": {
                    "username": "admin",
                    "password": "admin",
                    "grant_type": "password"
                  }
                }
              }
            },
            "required": false
          },
          "responses": {
            "200": {
              "description": "Return an authentication token",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string",
                        "description": "Authentication token that should be given in every authenticated request to the API"
                      },
                      "expires_in": {
                        "type": "integer",
                        "description": "Validity of the token given in seconds, 3600s = 1h by default"
                      },
                      "token_type": {
                        "type": "string",
                        "description": "Token type, always equal to \"bearer\""
                      },
                      "scope": {
                        "type": "string",
                        "description": "Unused, always equal to \"null\""
                      },
                      "refresh_token": {
                        "type": "string",
                        "description": "Use this token when your access token has expired. See <a href=\"/documentation/authentication.html#refresh-an-expired-token\">Refresh an expired token</a> section for more details."
                      }
                    }
                  }
                },
                "access_token": {
                  "example": "ZTZmYjU4ZmQxZWNmMzk1M2NlYzA5NmFhNmIzVjExMzE4NmJmODBkZGIyYTliYmQyNjk2ZDQwZThmNjdiZDQzOQ"
                },
                "expires_in": {
                  "example": 3600
                },
                "token_type": {
                  "example": "bearer"
                },
                "scope": {},
                "refresh_token": {
                  "example": "M2FlODI0OTE3ODMyNjViMzRiOWE5ODMyNWViMThkNDU5YzJjNjFiZjNkZWFjMzIyYjc4YTgzZWY1MjE5ZTY5Mw"
                }
              },
              "x-no-entity": true
            },
            "400": {
              "description": "Bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 400
                },
                "message": {
                  "example": "Invalid JSON message received"
                }
              },
              "x-details": "Can be caused by a malformed JSON request"
            },
            "415": {
              "description": "Unsupported Media type",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 415
                },
                "message": {
                  "example": "`xxx’ in `Content-Type’ header is not valid.  Only `application/json’ is allowed."
                }
              },
              "x-details": "The `Content-Type` header has to be `application/json`"
            },
            "422": {
              "description": "Unprocessable entity",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 422
                },
                "message": {
                  "example": "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
                },
                "_links": {
                  "example": {
                    "documentation": {
                      "href": "http://api.akeneo.com/api-reference.html"
                    }
                  }
                }
              },
              "x-details": "The validation of the entity given in the body of the request failed"
            }
          },
          "x-versions": [
            "1.7",
            "2.x",
            "3.x",
            "4.0",
            "5.0",
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-no-token": true,
          "x-codegen-request-body-name": "body"
        }
      },
      "/api/rest/v1/system-information": {
        "get": {
          "tags": [
            "System"
          ],
          "summary": "Get system information",
          "description": "This endpoint allows you to get the version and the edition of the PIM. Example of what you can get <table class=\"description-table\"> <thead> <tr> <th align=\"center\">Environment</th> <th align=\"center\">Edition</th> <th align=\"center\">Version</th> </tr> </thead> <tbody> <tr> <td align=\"center\">SaaS EE</td> <td align=\"center\">Serenity</td> <td align=\"center\">v20230112013744</td> </tr> <tr> <td align=\"center\">SaaS CE</td> <td align=\"center\">GE</td> <td align=\"center\">v20210526040645</td> </tr> <tr> <td align=\"center\">PaaS or onPrem EE</td> <td align=\"center\">EE</td> <td align=\"center\">5.0.28</td> </tr> <tr> <td align=\"center\">PaaS or onPrem CE</td> <td align=\"center\">CE</td> <td align=\"center\">5.0.28</td> </tr> </tbody> </table>",
          "operationId": "get_system_information",
          "responses": {
            "200": {
              "description": "Return the version and the edition of the PIM.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "version": {
                        "type": "string",
                        "description": "Version of the PIM"
                      },
                      "edition": {
                        "type": "string",
                        "description": "Edition of the PIM"
                      }
                    }
                  }
                },
                "version": {
                  "example": "20210521041041"
                },
                "edition": {
                  "example": "Serenity"
                }
              },
              "x-no-entity": true
            },
            "406": {
              "description": "Not Acceptable",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "HTTP status code"
                      },
                      "message": {
                        "type": "string",
                        "description": "Message explaining the error"
                      }
                    }
                  }
                },
                "code": {
                  "example": 406
                },
                "message": {
                  "example": "`xxx’ in `Accept` header is not valid. Only `application/json` is allowed."
                }
              },
              "x-details": "The `Accept` header is not `application/json` but it should"
            }
          },
          "x-versions": [
            "6.0",
            "7.0",
            "SaaS"
          ],
          "x-no-token": true
        }
      }
    },
    "components": {
      "schemas": {
        "Product": {
          "required": [
            "identifier"
          ],
          "type": "object",
          "properties": {
            "uuid": {
              "type": "string",
              "description": "Product UUID",
              "x-from-version": "7.0"
            },
            "identifier": {
              "type": "string",
              "description": "Product identifier, i.e. the value of the only `pim_catalog_identifier` attribute"
            },
            "enabled": {
              "type": "boolean",
              "description": "Whether the product is enabled",
              "default": true
            },
            "family": {
              "type": "string",
              "description": "<a href='api-reference.html#Family'>Family</a> code from which the product inherits its attributes and attributes requirements.",
              "default": "null only in the case of a non variant product",
              "x-validation-rules": "It is equal to an existing family code. In the case of variant product, the given family should be the same as the product model family."
            },
            "categories": {
              "type": "array",
              "description": "Codes of the <a href='api-reference.html#Category'>categories</a> in which the product is classified",
              "items": {
                "type": "string"
              },
              "x-validation-rules": "Each string of the array is equal to an existing category code"
            },
            "groups": {
              "type": "array",
              "description": "Codes of the groups to which the product belong",
              "items": {
                "type": "string"
              },
              "x-validation-rules": "Each string of the array is equal to an existing group code"
            },
            "parent": {
              "type": "string",
              "description": "Code of the parent <a href='api-reference.html#Productmodel'>product model</a> when the product is a variant (only available since the 2.0). This parent can be modified since the 2.3.",
              "default": "null",
              "x-validation-rules": "It is equal to an existing product model code only if the product is variant otherwise it's equal to null",
              "x-from-version": "2.0"
            },
            "values": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "scope": {
                      "type": "string",
                      "description": "<a href='api-reference.html#Channel'>Channel</a> code of the product value"
                    },
                    "locale": {
                      "type": "string",
                      "description": "<a href='api-reference.html#Locale'>Locale</a> code of the product value"
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Product value. See <a href='/concepts/products.html#the-data-format'>the `data` format</a> section for more details."
                    },
                    "linked_data": {
                      "type": "object",
                      "properties": {
                        "attribute": {
                          "type": "string"
                        },
                        "code": {
                          "type": "string"
                        },
                        "labels": {
                          "type": "object",
                          "properties": {}
                        }
                      },
                      "description": "Object containing labels of attribute options (only available since the 5.0 and when query parameter \"with_attribute_options\" is set to \"true\"). See <a href='/concepts/products.html#the-linked_data-format'>the `linked_data` format</a> section for more details.",
                      "x-read-only": true,
                      "x-from-version": "5.0"
                    }
                  }
                }
              },
              "description": "Product attributes values, see <a href='/concepts/products.html#focus-on-the-product-values'>Product values</a> section for more details",
              "x-validation-rules": "Validation rules detailed in Product values section"
            },
            "associations": {
              "type": "object",
              "properties": {
                "associationTypeCode": {
                  "type": "object",
                  "properties": {
                    "groups": {
                      "type": "array",
                      "description": "Array of groups codes with which the product is in relation",
                      "items": {
                        "type": "string"
                      }
                    },
                    "products": {
                      "type": "array",
                      "description": "Array of product identifiers with which the product is in relation",
                      "items": {
                        "type": "string"
                      }
                    },
                    "product_models": {
                      "type": "array",
                      "description": "Array of product model codes with which the product is in relation (only available since the v2.1)",
                      "items": {
                        "type": "string"
                      },
                      "x-from-version": "2.1"
                    }
                  }
                }
              },
              "description": "Several associations related to groups, product models and/or other products, grouped by association types",
              "x-validation-rules": "&bull; The `associationTypeCode` is the code of an existing association type. &#10;&bull; Each string in the array of the property `groups` is the code of an existing group. &#10;&bull; Each string in the array of the property `products` is the identifier of an existing product. &#10;&bull; Each string in the array of the property `product_models` is the code of an existing product model."
            },
            "quantified_associations": {
              "type": "object",
              "properties": {
                "quantifiedAssociationTypeCode": {
                  "type": "object",
                  "properties": {
                    "products": {
                      "type": "array",
                      "description": "Array of objects containing product identifiers and quantities with which the product is in relation",
                      "items": {
                        "type": "object",
                        "properties": {
                          "identifier": {
                            "type": "string"
                          },
                          "quantity": {
                            "type": "integer"
                          }
                        }
                      }
                    },
                    "product_models": {
                      "type": "array",
                      "description": "Array of objects containing product model codes and quantities with which the product is in relation",
                      "items": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string"
                          },
                          "quantity": {
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "description": "Several quantified associations related to products and/or product models, grouped by quantified association types (only available since the 5.0)",
              "x-validation-rules": "&bull; The `quantifiedAssociationTypeCode` is the code of an existing association type which provides quantity information. &#10;&bull; Each object in the array of the property `products` contains the identifier of an existing product and the quantity of it.",
              "x-from-version": "5.0"
            },
            "created": {
              "type": "string",
              "description": "Date of creation",
              "format": "dateTime",
              "x-immutable": true,
              "x-read-only": true
            },
            "updated": {
              "type": "string",
              "description": "Date of the last update",
              "format": "dateTime",
              "x-read-only": true
            },
            "metadata": {
              "type": "object",
              "properties": {
                "workflow_status": {
                  "type": "string",
                  "description": "Status of the product regarding the user permissions",
                  "enum": [
                    "read_only",
                    "draft_in_progress",
                    "proposal_waiting_for_approval",
                    "working_copy"
                  ]
                }
              },
              "description": "More information around the product (only available since the v2.0 in the Enterprise Edition)",
              "x-immutable": true,
              "x-read-only": true,
              "x-from-version": "2.0"
            },
            "quality_scores": {
              "type": "object",
              "properties": {},
              "description": "Product quality scores for each channel/locale combination (only available since the 5.0 and when the \"with_quality_scores\" query parameter is set to \"true\")",
              "x-immutable": true,
              "x-read-only": true,
              "x-from-version": "5.0"
            },
            "completenesses": {
              "type": "array",
              "description": "Product completenesses for each channel/locale combination (only available since the 7.0 version, and when the \"with_completenesses\" query parameter is set to \"true\")",
              "items": {
                "type": "object",
                "properties": {
                  "scope": {
                    "type": "string"
                  },
                  "locale": {
                    "type": "string"
                  },
                  "data": {
                    "type": "integer"
                  }
                }
              },
              "x-immutable": true,
              "x-read-only": true,
              "x-from-version": "7.0"
            }
          },
          "example": {
            "identifier": "top",
            "enabled": true,
            "family": "tshirt",
            "categories": [
              "summer_collection"
            ],
            "groups": [],
            "values": {
              "name": [
                {
                  "data": "Top",
                  "locale": "en_US"
                },
                {
                  "data": "Débardeur",
                  "locale": "fr_FR"
                }
              ],
              "description": [
                {
                  "data": "Summer top",
                  "locale": "en_US",
                  "scope": "ecommerce"
                },
                {
                  "data": "Top",
                  "locale": "en_US",
                  "scope": "tablet"
                },
                {
                  "data": "Débardeur pour l'été",
                  "locale": "fr_FR",
                  "scope": "ecommerce"
                },
                {
                  "data": "Débardeur",
                  "locale": "fr_FR",
                  "scope": "tablet"
                }
              ],
              "price": [
                {
                  "data": [
                    {
                      "amount": "15.5",
                      "currency": "EUR"
                    },
                    {
                      "amount": "15",
                      "currency": "USD"
                    }
                  ]
                }
              ],
              "color": [
                {
                  "data": "black",
                  "linked_data": {
                    "attribute": "color",
                    "code": "black",
                    "labels": {
                      "en_US": "Black",
                      "fr_FR": "Noir"
                    }
                  }
                }
              ],
              "size": [
                {
                  "data": "m",
                  "linked_data": {
                    "attribute": "size",
                    "code": "m",
                    "labels": {
                      "en_US": "M",
                      "fr_FR": "M"
                    }
                  }
                }
              ],
              "collection": [
                {
                  "data": [
                    "winter_2016"
                  ],
                  "linked_data": {
                    "winter_2016": {
                      "attribute": "collection",
                      "code": "winter_2016",
                      "labels": {
                        "en_US": "Winter 2016",
                        "fr_FR": "Hiver 2016"
                      }
                    }
                  }
                }
              ]
            },
            "created": "2016-06-23T18:24:44+02:00",
            "updated": "2016-06-25T17:56:12+02:00",
            "associations": {
              "PACK": {
                "products": [
                  "sunglass"
                ],
                "product_models": [],
                "groups": []
              }
            },
            "quantified_associations": {
              "PRODUCT_SET": {
                "products": [
                  {
                    "identifier": "cap",
                    "quantity": 2
                  },
                  {
                    "identifier": "shoes",
                    "quantity": 1
                  }
                ],
                "product_models": [
                  {
                    "identifier": "model-biker-jacket-leather",
                    "quantity": 2
                  }
                ]
              }
            },
            "quality_scores": [
              {
                "scope": "ecommerce",
                "locale": "en_US",
                "data": "A"
              },
              {
                "scope": "ecommerce",
                "locale": "fr_FR",
                "data": "B"
              },
              {
                "scope": "tablet",
                "locale": "en_US",
                "data": "D"
              },
              {
                "scope": "tablet",
                "locale": "fr_FR",
                "data": "E"
              }
            ],
            "completenesses": [
              {
                "scope": "ecommerce",
                "locale": "en_US",
                "data": 10
              },
              {
                "scope": "ecommerce",
                "locale": "fr_FR",
                "data": 20
              },
              {
                "scope": "tablet",
                "locale": "en_US",
                "data": 30
              },
              {
                "scope": "tablet",
                "locale": "fr_FR",
                "data": 40
              }
            ]
          }
        },
        "ProductExamples": {
          "type": "object",
          "x-1.7": {
            "_links": {
              "self": {
                "href": "https://demo.akeneo.com/api/rest/v1/products?page=3&limit=3"
              },
              "first": {
                "href": "https://demo.akeneo.com/api/rest/v1/products?page=1&limit=3"
              },
              "previous": {
                "href": "https://demo.akeneo.com/api/rest/v1/products?page=2&limit=3"
              },
              "next": {
                "href": "https://demo.akeneo.com/api/rest/v1/products?page=4&limit=3"
              }
            },
            "current_page": 3,
            "_embedded": {
              "items": [
                {
                  "_links": {
                    "self": {
                      "href": "https://demo.akeneo.com/api/rest/v1/product/top"
                    }
                  },
                  "identifier": "top",
                  "family": "tshirt",
                  "groups": [],
                  "categories": [
                    "summer_collection"
                  ],
                  "enabled": true,
                  "values": {
                    "name": [
                      {
                        "data": "Top",
                        "locale": "en_US"
                      },
                      {
                        "data": "Débardeur",
                        "locale": "fr_FR"
                      }
                    ],
                    "description": [
                      {
                        "data": "Summer top",
                        "locale": "en_US",
                        "scope": "ecommerce"
                      },
                      {
                        "data": "Top",
                        "locale": "en_US",
                        "scope": "tablet"
                      },
                      {
                        "data": "Débardeur pour l'été",
                        "locale": "fr_FR",
                        "scope": "ecommerce"
                      },
                      {
                        "data": "Débardeur",
                        "locale": "fr_FR",
                        "scope": "tablet"
                      }
                    ],
                    "price": [
                      {
                        "data": [
                          {
                            "amount": "15.5",
                            "currency": "EUR"
                          },
                          {
                            "amount": "15",
                            "currency": "USD"
                          }
                        ]
                      }
                    ],
                    "color": [
                      {
                        "data": "black"
                      }
                    ],
                    "size": [
                      {
                        "data": "m"
                      }
                    ],
                    "collection": [
                      {
                        "data": [
                          "winter_2016"
                        ]
                      }
                    ]
                  },
                  "created": "2016-06-23T18:24:44+02:00",
                  "updated": "2016-06-25T17:56:12+02:00",
                  "associations": {
                    "PACK": {
                      "products": [
                        "sunglasses"
                      ],
                      "groups": []
                    }
                  },
                  "quantified_associations": {
                    "PRODUCT_SET": {
                      "products": [
                        {
                          "identifier": "cap",
                          "quantity": 2
                        },
                        {
                          "identifier": "shoes",
                          "quantity": 1
                        }
                      ]
                    }
                  }
                },
                {
                  "_links": {
                    "self": {
                      "href": "https://demo.akeneo.com/api/rest/v1/product/cap"
                    }
                  },
                  "identifier": "cap",
                  "family": "caps",
                  "groups": [],
                  "categories": [
                    "summer_collection"
                  ],
                  "enabled": true,
                  "values": {
                    "name": [
                      {
                        "data": "Cap",
                        "locale": "en_US"
                      },
                      {
                        "data": "Casquette",
                        "locale": "fr_FR"
                      }
                    ],
                    "description": [
                      {
                        "data": "Cap unisex",
                        "locale": "en_US",
                        "scope": "ecommerce"
                      },
                      {
                        "data": "Cap unisex",
                        "locale": "en_US",
                        "scope": "tablet"
                      },
                      {
                        "data": "Casquette unisexe",
                        "locale": "fr_FR",
                        "scope": "ecommerce"
                      },
                      {
                        "data": "Casquette unisexe",
                        "locale": "fr_FR",
                        "scope": "tablet"
                      }
                    ],
                    "price": [
                      {
                        "data": [
                          {
                            "amount": "20",
                            "currency": "EUR"
                          },
                          {
                            "amount": "20",
                            "currency": "USD"
                          }
                        ]
                      }
                    ],
                    "color": [
                      {
                        "data": "black"
                      }
                    ]
                  },
                  "created": "2016-06-23T18:24:44+02:00",
                  "updated": "2016-06-25T17:56:12+02:00",
                  "associations": {
                    "PACK": {
                      "products": [
                        "sunglasses"
                      ],
                      "groups": []
                    }
                  },
                  "quantified_associations": {}
                },
                {
                  "_links": {
                    "self": {
                      "href": "https://demo.akeneo.com/api/rest/v1/product/sweat"
                    }
                  },
                  "identifier": "sweat",
                  "groups": [],
                  "categories": [
                    "winter_collection"
                  ],
                  "enabled": true,
                  "values": {},
                  "created": "2016-06-23T11:24:44+02:00",
                  "updated": "2016-06-23T11:24:44+02:00",
                  "associations": {},
                  "quantified_associations": {}
                }
              ]
            }
          },
          "x-2.0": {
            "_links": {
              "self": {
                "href": "https://demo.akeneo.com/api/rest/v1/products?page=3&limit=3"
              },
              "first": {
                "href": "https://demo.akeneo.com/api/rest/v1/products?page=1&limit=3"
              },
              "previous": {
                "href": "https://demo.akeneo.com/api/rest/v1/products?page=2&limit=3"
              },
              "next": {
                "href": "https://demo.akeneo.com/api/rest/v1/products?page=4&limit=3"
              }
            },
            "current_page": 3,
            "_embedded": {
              "items": [
                {
                  "_links": {
                    "self": {
                      "href": "https://demo.akeneo.com/api/rest/v1/product/top"
                    }
                  },
                  "identifier": "top",
                  "family": "tshirt",
                  "groups": [],
                  "categories": [
                    "summer_collection"
                  ],
                  "enabled": true,
                  "values": {
                    "name": [
                      {
                        "data": "Top",
                        "locale": "en_US"
                      },
                      {
                        "data": "Débardeur",
                        "locale": "fr_FR"
                      }
                    ],
                    "description": [
                      {
                        "data": "Summer top",
                        "locale": "en_US",
                        "scope": "ecommerce"
                      },
                      {
                        "data": "Top",
                        "locale": "en_US",
                        "scope": "tablet"
                      },
                      {
                        "data": "Débardeur pour l'été",
                        "locale": "fr_FR",
                        "scope": "ecommerce"
                      },
                      {
                        "data": "Débardeur",
                        "locale": "fr_FR",
                        "scope": "tablet"
                      }
                    ],
                    "price": [
                      {
                        "data": [
                          {
                            "amount": "15.5",
                            "currency": "EUR"
                          },
                          {
                            "amount": "15",
                            "currency": "USD"
                          }
                        ]
                      }
                    ],
                    "color": [
                      {
                        "data": "black"
                      }
                    ],
                    "size": [
                      {
                        "data": "m"
                      }
                    ],
                    "collection": [
                      {
                        "data": [
                          "winter_2016"
                        ]
                      }
                    ]
                  },
                  "created": "2016-06-23T18:24:44+02:00",
                  "updated": "2016-06-25T17:56:12+02:00",
                  "associations": {
                    "PACK": {
                      "products": [
                        "sunglasses"
                      ],
                      "groups": []
                    }
                  },
                  "quantified_associations": {
                    "PRODUCT_SET": {
                      "products": [
                        {
                          "identifier": "cap",
                          "quantity": 2
                        },
                        {
                          "identifier": "shoes",
                          "quantity": 1
                        }
                      ]
                    }
                  }
                },
                {
                  "_links": {
                    "self": {
                      "href": "https://demo.akeneo.com/api/rest/v1/product/cap"
                    }
                  },
                  "identifier": "cap",
                  "family": "caps",
                  "groups": [],
                  "categories": [
                    "summer_collection"
                  ],
                  "enabled": true,
                  "values": {
                    "name": [
                      {
                        "data": "Cap",
                        "locale": "en_US"
                      },
                      {
                        "data": "Casquette",
                        "locale": "fr_FR"
                      }
                    ],
                    "description": [
                      {
                        "data": "Cap unisex",
                        "locale": "en_US",
                        "scope": "ecommerce"
                      },
                      {
                        "data": "Cap unisex",
                        "locale": "en_US",
                        "scope": "tablet"
                      },
                      {
                        "data": "Casquette unisexe",
                        "locale": "fr_FR",
                        "scope": "ecommerce"
                      },
                      {
                        "data": "Casquette unisexe",
                        "locale": "fr_FR",
                        "scope": "tablet"
                      }
                    ],
                    "price": [
                      {
                        "data": [
                          {
                            "amount": "20",
                            "currency": "EUR"
                          },
                          {
                            "amount": "20",
                            "currency": "USD"
                          }
                        ]
                      }
                    ],
                    "color": [
                      {
                        "data": "black"
                      }
                    ]
                  },
                  "created": "2016-06-23T18:24:44+02:00",
                  "updated": "2016-06-25T17:56:12+02:00",
                  "associations": {
                    "PACK": {
                      "products": [
                        "sunglasses"
                      ],
                      "groups": []
                    }
                  },
                  "quantified_associations": {}
                },
                {
                  "_links": {
                    "self": {
                      "href": "https://demo.akeneo.com/api/rest/v1/product/sweat"
                    }
                  },
                  "identifier": "sweat",
                  "groups": [],
                  "categories": [
                    "winter_collection"
                  ],
                  "enabled": true,
                  "values": {},
                  "created": "2016-06-23T11:24:44+02:00",
                  "updated": "2016-06-23T11:24:44+02:00",
                  "associations": {},
                  "quantified_associations": {}
                }
              ]
            }
          },
          "x-2.1": {
            "_links": {
              "self": {
                "href": "https://demo.akeneo.com/api/rest/v1/products?page=3&limit=3"
              },
              "first": {
                "href": "https://demo.akeneo.com/api/rest/v1/products?page=1&limit=3"
              },
              "previous": {
                "href": "https://demo.akeneo.com/api/rest/v1/products?page=2&limit=3"
              },
              "next": {
                "href": "https://demo.akeneo.com/api/rest/v1/products?page=4&limit=3"
              }
            },
            "current_page": 3,
            "_embedded": {
              "items": [
                {
                  "_links": {
                    "self": {
                      "href": "https://demo.akeneo.com/api/rest/v1/product/top"
                    }
                  },
                  "identifier": "top",
                  "family": "tshirt",
                  "groups": [],
                  "categories": [
                    "summer_collection"
                  ],
                  "enabled": true,
                  "values": {
                    "name": [
                      {
                        "data": "Top",
                        "locale": "en_US"
                      },
                      {
                        "data": "Débardeur",
                        "locale": "fr_FR"
                      }
                    ],
                    "description": [
                      {
                        "data": "Summer top",
                        "locale": "en_US",
                        "scope": "ecommerce"
                      },
                      {
                        "data": "Top",
                        "locale": "en_US",
                        "scope": "tablet"
                      },
                      {
                        "data": "Débardeur pour l'été",
                        "locale": "fr_FR",
                        "scope": "ecommerce"
                      },
                      {
                        "data": "Débardeur",
                        "locale": "fr_FR",
                        "scope": "tablet"
                      }
                    ],
                    "price": [
                      {
                        "data": [
                          {
                            "amount": "15.5",
                            "currency": "EUR"
                          },
                          {
                            "amount": "15",
                            "currency": "USD"
                          }
                        ]
                      }
                    ],
                    "color": [
                      {
                        "data": "black"
                      }
                    ],
                    "size": [
                      {
                        "data": "m"
                      }
                    ],
                    "collection": [
                      {
                        "data": [
                          "winter_2016"
                        ]
                      }
                    ]
                  },
                  "created": "2016-06-23T18:24:44+02:00",
                  "updated": "2016-06-25T17:56:12+02:00",
                  "associations": {
                    "PACK": {
                      "products": [
                        "sunglasses"
                      ],
                      "product_models": [],
                      "groups": []
                    }
                  },
                  "quantified_associations": {
                    "PRODUCT_SET": {
                      "products": [
                        {
                          "identifier": "cap",
                          "quantity": 2
                        },
                        {
                          "identifier": "shoes",
                          "quantity": 1
                        }
                      ],
                      "product_models": [
                        {
                          "identifier": "model-biker-jacket-leather",
                          "quantity": 2
                        }
                      ]
                    }
                  }
                },
                {
                  "_links": {
                    "self": {
                      "href": "https://demo.akeneo.com/api/rest/v1/product/cap"
                    }
                  },
                  "identifier": "cap",
                  "family": "caps",
                  "groups": [],
                  "categories": [
                    "summer_collection"
                  ],
                  "enabled": true,
                  "values": {
                    "name": [
                      {
                        "data": "Cap",
                        "locale": "en_US"
                      },
                      {
                        "data": "Casquette",
                        "locale": "fr_FR"
                      }
                    ],
                    "description": [
                      {
                        "data": "Cap unisex",
                        "locale": "en_US",
                        "scope": "ecommerce"
                      },
                      {
                        "data": "Cap unisex",
                        "locale": "en_US",
                        "scope": "tablet"
                      },
                      {
                        "data": "Casquette unisexe",
                        "locale": "fr_FR",
                        "scope": "ecommerce"
                      },
                      {
                        "data": "Casquette unisexe",
                        "locale": "fr_FR",
                        "scope": "tablet"
                      }
                    ],
                    "price": [
                      {
                        "data": [
                          {
                            "amount": "20",
                            "currency": "EUR"
                          },
                          {
                            "amount": "20",
                            "currency": "USD"
                          }
                        ]
                      }
                    ],
                    "color": [
                      {
                        "data": "black"
                      }
                    ]
                  },
                  "created": "2016-06-23T18:24:44+02:00",
                  "updated": "2016-06-25T17:56:12+02:00",
                  "associations": {
                    "PACK": {
                      "products": [
                        "sunglasses"
                      ],
                      "product_models": [],
                      "groups": []
                    }
                  },
                  "quantified_associations": {}
                },
                {
                  "_links": {
                    "self": {
                      "href": "https://demo.akeneo.com/api/rest/v1/product/sweat"
                    }
                  },
                  "identifier": "sweat",
                  "groups": [],
                  "categories": [
                    "winter_collection"
                  ],
                  "enabled": true,
                  "values": {},
                  "created": "2016-06-23T11:24:44+02:00",
                  "updated": "2016-06-23T11:24:44+02:00",
                  "associations": {},
                  "quantified_associations": {}
                }
              ]
            }
          },
          "x-5.0": {
            "_links": {
              "self": {
                "href": "https://demo.akeneo.com/api/rest/v1/products?page=3&limit=3&with_quality_scores=true&with_attribute_options=true"
              },
              "first": {
                "href": "https://demo.akeneo.com/api/rest/v1/products?page=1&limit=3&with_quality_scores=true&with_attribute_options=true"
              },
              "previous": {
                "href": "https://demo.akeneo.com/api/rest/v1/products?page=2&limit=3&with_quality_scores=true&with_attribute_options=true"
              },
              "next": {
                "href": "https://demo.akeneo.com/api/rest/v1/products?page=4&limit=3&with_quality_scores=true&with_attribute_options=true"
              }
            },
            "current_page": 3,
            "_embedded": {
              "items": [
                {
                  "_links": {
                    "self": {
                      "href": "https://demo.akeneo.com/api/rest/v1/product/top"
                    }
                  },
                  "identifier": "top",
                  "family": "tshirt",
                  "groups": [],
                  "categories": [
                    "summer_collection"
                  ],
                  "enabled": true,
                  "values": {
                    "name": [
                      {
                        "data": "Top",
                        "locale": "en_US"
                      },
                      {
                        "data": "Débardeur",
                        "locale": "fr_FR"
                      }
                    ],
                    "description": [
                      {
                        "data": "Summer top",
                        "locale": "en_US",
                        "scope": "ecommerce"
                      },
                      {
                        "data": "Top",
                        "locale": "en_US",
                        "scope": "tablet"
                      },
                      {
                        "data": "Débardeur pour l'été",
                        "locale": "fr_FR",
                        "scope": "ecommerce"
                      },
                      {
                        "data": "Débardeur",
                        "locale": "fr_FR",
                        "scope": "tablet"
                      }
                    ],
                    "price": [
                      {
                        "data": [
                          {
                            "amount": "15.5",
                            "currency": "EUR"
                          },
                          {
                            "amount": "15",
                            "currency": "USD"
                          }
                        ]
                      }
                    ],
                    "color": [
                      {
                        "data": "black",
                        "linked_data": {
                          "attribute": "color",
                          "code": "black",
                          "labels": {
                            "en_US": "Black",
                            "fr_FR": "Noir"
                          }
                        }
                      }
                    ],
                    "size": [
                      {
                        "data": "m",
                        "linked_data": {
                          "attribute": "size",
                          "code": "m",
                          "labels": {
                            "en_US": "M",
                            "fr_FR": "M"
                          }
                        }
                      }
                    ],
                    "collection": [
                      {
                        "data": [
                          "winter_2016"
                        ],
                        "linked_data": {
                          "winter_2016": {
                            "attribute": "collection",
                            "code": "winter_2016",
                            "labels": {
                              "en_US": "Winter 2016",
                              "fr_FR": "Hiver 2016"
                            }
                          }
                        }
                      }
                    ]
                  },
                  "created": "2016-06-23T18:24:44+02:00",
                  "updated": "2016-06-25T17:56:12+02:00",
                  "associations": {
                    "PACK": {
                      "products": [
                        "sunglasses"
                      ],
                      "product_models": [],
                      "groups": []
                    }
                  },
                  "quantified_associations": {
                    "PRODUCT_SET": {
                      "products": [
                        {
                          "identifier": "cap",
                          "quantity": 2
                        },
                        {
                          "identifier": "shoes",
                          "quantity": 1
                        }
                      ],
                      "product_models": [
                        {
                          "identifier": "model-biker-jacket-leather",
                          "quantity": 2
                        }
                      ]
                    }
                  },
                  "quality_scores": [
                    {
                      "scope": "ecommerce",
                      "locale": "en_US",
                      "data": "A"
                    },
                    {
                      "scope": "ecommerce",
                      "locale": "fr_FR",
                      "data": "B"
                    },
                    {
                      "scope": "tablet",
                      "locale": "en_US",
                      "data": "D"
                    },
                    {
                      "scope": "tablet",
                      "locale": "fr_FR",
                      "data": "E"
                    }
                  ]
                },
                {
                  "_links": {
                    "self": {
                      "href": "https://demo.akeneo.com/api/rest/v1/product/cap"
                    }
                  },
                  "identifier": "cap",
                  "family": "caps",
                  "groups": [],
                  "categories": [
                    "summer_collection"
                  ],
                  "enabled": true,
                  "values": {
                    "name": [
                      {
                        "data": "Cap",
                        "locale": "en_US"
                      },
                      {
                        "data": "Casquette",
                        "locale": "fr_FR"
                      }
                    ],
                    "description": [
                      {
                        "data": "Cap unisex",
                        "locale": "en_US",
                        "scope": "ecommerce"
                      },
                      {
                        "data": "Cap unisex",
                        "locale": "en_US",
                        "scope": "tablet"
                      },
                      {
                        "data": "Casquette unisexe",
                        "locale": "fr_FR",
                        "scope": "ecommerce"
                      },
                      {
                        "data": "Casquette unisexe",
                        "locale": "fr_FR",
                        "scope": "tablet"
                      }
                    ],
                    "price": [
                      {
                        "data": [
                          {
                            "amount": "20",
                            "currency": "EUR"
                          },
                          {
                            "amount": "20",
                            "currency": "USD"
                          }
                        ]
                      }
                    ],
                    "color": [
                      {
                        "data": "black",
                        "linked_data": {
                          "attribute": "color",
                          "code": "black",
                          "labels": {
                            "en_US": "Black",
                            "fr_FR": "Noir"
                          }
                        }
                      }
                    ]
                  },
                  "created": "2016-06-23T18:24:44+02:00",
                  "updated": "2016-06-25T17:56:12+02:00",
                  "associations": {
                    "PACK": {
                      "products": [
                        "sunglasses"
                      ],
                      "product_models": [],
                      "groups": []
                    }
                  },
                  "quantified_associations": {},
                  "quality_scores": [
                    {
                      "scope": "ecommerce",
                      "locale": "en_US",
                      "data": "A"
                    },
                    {
                      "scope": "ecommerce",
                      "locale": "fr_FR",
                      "data": "B"
                    },
                    {
                      "scope": "tablet",
                      "locale": "en_US",
                      "data": "D"
                    },
                    {
                      "scope": "tablet",
                      "locale": "fr_FR",
                      "data": "E"
                    }
                  ]
                },
                {
                  "_links": {
                    "self": {
                      "href": "https://demo.akeneo.com/api/rest/v1/product/sweat"
                    }
                  },
                  "identifier": "sweat",
                  "groups": [],
                  "categories": [
                    "winter_collection"
                  ],
                  "enabled": true,
                  "values": {},
                  "created": "2016-06-23T11:24:44+02:00",
                  "updated": "2016-06-23T11:24:44+02:00",
                  "associations": {},
                  "quantified_associations": {},
                  "quality_scores": {}
                }
              ]
            }
          },
          "x-SaaS": {
            "_links": {
              "self": {
                "href": "https://demo.akeneo.com/api/rest/v1/products?page=3&limit=3&with_quality_scores=true&with_completenesses=true&with_attribute_options=true"
              },
              "first": {
                "href": "https://demo.akeneo.com/api/rest/v1/products?page=1&limit=3&with_quality_scores=true&with_completenesses=true&with_attribute_options=true"
              },
              "previous": {
                "href": "https://demo.akeneo.com/api/rest/v1/products?page=2&limit=3&with_quality_scores=true&with_completenesses=true&with_attribute_options=true"
              },
              "next": {
                "href": "https://demo.akeneo.com/api/rest/v1/products?page=4&limit=3&with_quality_scores=true&with_completenesses=true&with_attribute_options=true"
              }
            },
            "current_page": 3,
            "_embedded": {
              "items": [
                {
                  "_links": {
                    "self": {
                      "href": "https://demo.akeneo.com/api/rest/v1/product/top"
                    }
                  },
                  "uuid": "aaf518b2-f91e-40f1-a53a-78ce5e81a6f9",
                  "identifier": "top",
                  "family": "tshirt",
                  "groups": [],
                  "categories": [
                    "summer_collection"
                  ],
                  "enabled": true,
                  "values": {
                    "name": [
                      {
                        "data": "Top",
                        "locale": "en_US"
                      },
                      {
                        "data": "Débardeur",
                        "locale": "fr_FR"
                      }
                    ],
                    "description": [
                      {
                        "data": "Summer top",
                        "locale": "en_US",
                        "scope": "ecommerce"
                      },
                      {
                        "data": "Top",
                        "locale": "en_US",
                        "scope": "tablet"
                      },
                      {
                        "data": "Débardeur pour l'été",
                        "locale": "fr_FR",
                        "scope": "ecommerce"
                      },
                      {
                        "data": "Débardeur",
                        "locale": "fr_FR",
                        "scope": "tablet"
                      }
                    ],
                    "price": [
                      {
                        "data": [
                          {
                            "amount": "15.5",
                            "currency": "EUR"
                          },
                          {
                            "amount": "15",
                            "currency": "USD"
                          }
                        ]
                      }
                    ],
                    "color": [
                      {
                        "data": "black",
                        "linked_data": {
                          "attribute": "color",
                          "code": "black",
                          "labels": {
                            "en_US": "Black",
                            "fr_FR": "Noir"
                          }
                        }
                      }
                    ],
                    "size": [
                      {
                        "data": "m",
                        "linked_data": {
                          "attribute": "size",
                          "code": "m",
                          "labels": {
                            "en_US": "M",
                            "fr_FR": "M"
                          }
                        }
                      }
                    ],
                    "collection": [
                      {
                        "data": [
                          "winter_2016"
                        ],
                        "linked_data": {
                          "winter_2016": {
                            "attribute": "collection",
                            "code": "winter_2016",
                            "labels": {
                              "en_US": "Winter 2016",
                              "fr_FR": "Hiver 2016"
                            }
                          }
                        }
                      }
                    ]
                  },
                  "created": "2016-06-23T18:24:44+02:00",
                  "updated": "2016-06-25T17:56:12+02:00",
                  "associations": {
                    "PACK": {
                      "products": [
                        "sunglasses"
                      ],
                      "product_models": [],
                      "groups": []
                    }
                  },
                  "quantified_associations": {
                    "PRODUCT_SET": {
                      "products": [
                        {
                          "identifier": "cap",
                          "quantity": 2
                        },
                        {
                          "identifier": "shoes",
                          "quantity": 1
                        }
                      ],
                      "product_models": [
                        {
                          "identifier": "model-biker-jacket-leather",
                          "quantity": 2
                        }
                      ]
                    }
                  },
                  "quality_scores": [
                    {
                      "scope": "ecommerce",
                      "locale": "en_US",
                      "data": "A"
                    },
                    {
                      "scope": "ecommerce",
                      "locale": "fr_FR",
                      "data": "B"
                    },
                    {
                      "scope": "tablet",
                      "locale": "en_US",
                      "data": "D"
                    },
                    {
                      "scope": "tablet",
                      "locale": "fr_FR",
                      "data": "E"
                    }
                  ],
                  "completenesses": [
                    {
                      "scope": "ecommerce",
                      "locale": "en_US",
                      "data": 20
                    },
                    {
                      "scope": "ecommerce",
                      "locale": "fr_FR",
                      "data": 30
                    },
                    {
                      "scope": "tablet",
                      "locale": "en_US",
                      "data": 55
                    },
                    {
                      "scope": "tablet",
                      "locale": "fr_FR",
                      "data": 70
                    }
                  ]
                },
                {
                  "_links": {
                    "self": {
                      "href": "https://demo.akeneo.com/api/rest/v1/product/cap"
                    }
                  },
                  "uuid": "aec6780b-c813-4bd7-8e24-1a8574471576",
                  "identifier": "cap",
                  "family": "caps",
                  "groups": [],
                  "categories": [
                    "summer_collection"
                  ],
                  "enabled": true,
                  "values": {
                    "name": [
                      {
                        "data": "Cap",
                        "locale": "en_US"
                      },
                      {
                        "data": "Casquette",
                        "locale": "fr_FR"
                      }
                    ],
                    "description": [
                      {
                        "data": "Cap unisex",
                        "locale": "en_US",
                        "scope": "ecommerce"
                      },
                      {
                        "data": "Cap unisex",
                        "locale": "en_US",
                        "scope": "tablet"
                      },
                      {
                        "data": "Casquette unisexe",
                        "locale": "fr_FR",
                        "scope": "ecommerce"
                      },
                      {
                        "data": "Casquette unisexe",
                        "locale": "fr_FR",
                        "scope": "tablet"
                      }
                    ],
                    "price": [
                      {
                        "data": [
                          {
                            "amount": "20",
                            "currency": "EUR"
                          },
                          {
                            "amount": "20",
                            "currency": "USD"
                          }
                        ]
                      }
                    ],
                    "color": [
                      {
                        "data": "black",
                        "linked_data": {
                          "attribute": "color",
                          "code": "black",
                          "labels": {
                            "en_US": "Black",
                            "fr_FR": "Noir"
                          }
                        }
                      }
                    ]
                  },
                  "created": "2016-06-23T18:24:44+02:00",
                  "updated": "2016-06-25T17:56:12+02:00",
                  "associations": {
                    "PACK": {
                      "products": [
                        "sunglasses"
                      ],
                      "product_models": [],
                      "groups": []
                    }
                  },
                  "quantified_associations": {},
                  "quality_scores": [
                    {
                      "scope": "ecommerce",
                      "locale": "en_US",
                      "data": "A"
                    },
                    {
                      "scope": "ecommerce",
                      "locale": "fr_FR",
                      "data": "B"
                    },
                    {
                      "scope": "tablet",
                      "locale": "en_US",
                      "data": "D"
                    },
                    {
                      "scope": "tablet",
                      "locale": "fr_FR",
                      "data": "E"
                    }
                  ],
                  "completenesses": [
                    {
                      "scope": "ecommerce",
                      "locale": "en_US",
                      "data": 20
                    },
                    {
                      "scope": "ecommerce",
                      "locale": "fr_FR",
                      "data": 30
                    },
                    {
                      "scope": "tablet",
                      "locale": "en_US",
                      "data": 55
                    },
                    {
                      "scope": "tablet",
                      "locale": "fr_FR",
                      "data": 70
                    }
                  ]
                },
                {
                  "_links": {
                    "self": {
                      "href": "https://demo.akeneo.com/api/rest/v1/product/sweat"
                    }
                  },
                  "uuid": "93f14b03-5ed3-4f23-87c6-ae3806041b6a",
                  "identifier": "sweat",
                  "groups": [],
                  "categories": [
                    "winter_collection"
                  ],
                  "enabled": true,
                  "values": {},
                  "created": "2016-06-23T11:24:44+02:00",
                  "updated": "2016-06-23T11:24:44+02:00",
                  "associations": {},
                  "quantified_associations": {},
                  "quality_scores": {},
                  "completenesses": []
                }
              ]
            }
          }
        },
        "ProductList": {
          "allOf": [
            {
              "type": "object",
              "properties": {
                "_links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "object",
                      "properties": {
                        "href": {
                          "type": "string",
                          "description": "URI of the resource"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "required": [
                "identifier"
              ],
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "description": "Product UUID",
                  "x-from-version": "7.0"
                },
                "identifier": {
                  "type": "string",
                  "description": "Product identifier, i.e. the value of the only `pim_catalog_identifier` attribute"
                },
                "enabled": {
                  "type": "boolean",
                  "description": "Whether the product is enabled",
                  "default": true
                },
                "family": {
                  "type": "string",
                  "description": "<a href='api-reference.html#Family'>Family</a> code from which the product inherits its attributes and attributes requirements.",
                  "default": "null only in the case of a non variant product",
                  "x-validation-rules": "It is equal to an existing family code. In the case of variant product, the given family should be the same as the product model family."
                },
                "categories": {
                  "type": "array",
                  "description": "Codes of the <a href='api-reference.html#Category'>categories</a> in which the product is classified",
                  "items": {
                    "type": "string"
                  },
                  "x-validation-rules": "Each string of the array is equal to an existing category code"
                },
                "groups": {
                  "type": "array",
                  "description": "Codes of the groups to which the product belong",
                  "items": {
                    "type": "string"
                  },
                  "x-validation-rules": "Each string of the array is equal to an existing group code"
                },
                "parent": {
                  "type": "string",
                  "description": "Code of the parent <a href='api-reference.html#Productmodel'>product model</a> when the product is a variant (only available since the 2.0). This parent can be modified since the 2.3.",
                  "default": "null",
                  "x-validation-rules": "It is equal to an existing product model code only if the product is variant otherwise it's equal to null",
                  "x-from-version": "2.0"
                },
                "values": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "scope": {
                          "type": "string",
                          "description": "<a href='api-reference.html#Channel'>Channel</a> code of the product value"
                        },
                        "locale": {
                          "type": "string",
                          "description": "<a href='api-reference.html#Locale'>Locale</a> code of the product value"
                        },
                        "data": {
                          "type": "object",
                          "properties": {},
                          "description": "Product value. See <a href='/concepts/products.html#the-data-format'>the `data` format</a> section for more details."
                        },
                        "linked_data": {
                          "type": "object",
                          "properties": {
                            "attribute": {
                              "type": "string"
                            },
                            "code": {
                              "type": "string"
                            },
                            "labels": {
                              "type": "object",
                              "properties": {}
                            }
                          },
                          "description": "Object containing labels of attribute options (only available since the 5.0 and when query parameter \"with_attribute_options\" is set to \"true\"). See <a href='/concepts/products.html#the-linked_data-format'>the `linked_data` format</a> section for more details.",
                          "x-read-only": true,
                          "x-from-version": "5.0"
                        }
                      }
                    }
                  },
                  "description": "Product attributes values, see <a href='/concepts/products.html#focus-on-the-product-values'>Product values</a> section for more details",
                  "x-validation-rules": "Validation rules detailed in Product values section"
                },
                "associations": {
                  "type": "object",
                  "properties": {
                    "associationTypeCode": {
                      "type": "object",
                      "properties": {
                        "groups": {
                          "type": "array",
                          "description": "Array of groups codes with which the product is in relation",
                          "items": {
                            "type": "string"
                          }
                        },
                        "products": {
                          "type": "array",
                          "description": "Array of product identifiers with which the product is in relation",
                          "items": {
                            "type": "string"
                          }
                        },
                        "product_models": {
                          "type": "array",
                          "description": "Array of product model codes with which the product is in relation (only available since the v2.1)",
                          "items": {
                            "type": "string"
                          },
                          "x-from-version": "2.1"
                        }
                      }
                    }
                  },
                  "description": "Several associations related to groups, product models and/or other products, grouped by association types",
                  "x-validation-rules": "&bull; The `associationTypeCode` is the code of an existing association type. &#10;&bull; Each string in the array of the property `groups` is the code of an existing group. &#10;&bull; Each string in the array of the property `products` is the identifier of an existing product. &#10;&bull; Each string in the array of the property `product_models` is the code of an existing product model."
                },
                "quantified_associations": {
                  "type": "object",
                  "properties": {
                    "quantifiedAssociationTypeCode": {
                      "type": "object",
                      "properties": {
                        "products": {
                          "type": "array",
                          "description": "Array of objects containing product identifiers and quantities with which the product is in relation",
                          "items": {
                            "type": "object",
                            "properties": {
                              "identifier": {
                                "type": "string"
                              },
                              "quantity": {
                                "type": "integer"
                              }
                            }
                          }
                        },
                        "product_models": {
                          "type": "array",
                          "description": "Array of objects containing product model codes and quantities with which the product is in relation",
                          "items": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string"
                              },
                              "quantity": {
                                "type": "integer"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "description": "Several quantified associations related to products and/or product models, grouped by quantified association types (only available since the 5.0)",
                  "x-validation-rules": "&bull; The `quantifiedAssociationTypeCode` is the code of an existing association type which provides quantity information. &#10;&bull; Each object in the array of the property `products` contains the identifier of an existing product and the quantity of it.",
                  "x-from-version": "5.0"
                },
                "created": {
                  "type": "string",
                  "description": "Date of creation",
                  "format": "dateTime",
                  "x-immutable": true,
                  "x-read-only": true
                },
                "updated": {
                  "type": "string",
                  "description": "Date of the last update",
                  "format": "dateTime",
                  "x-read-only": true
                },
                "metadata": {
                  "type": "object",
                  "properties": {
                    "workflow_status": {
                      "type": "string",
                      "description": "Status of the product regarding the user permissions",
                      "enum": [
                        "read_only",
                        "draft_in_progress",
                        "proposal_waiting_for_approval",
                        "working_copy"
                      ]
                    }
                  },
                  "description": "More information around the product (only available since the v2.0 in the Enterprise Edition)",
                  "x-immutable": true,
                  "x-read-only": true,
                  "x-from-version": "2.0"
                },
                "quality_scores": {
                  "type": "object",
                  "properties": {},
                  "description": "Product quality scores for each channel/locale combination (only available since the 5.0 and when the \"with_quality_scores\" query parameter is set to \"true\")",
                  "x-immutable": true,
                  "x-read-only": true,
                  "x-from-version": "5.0"
                },
                "completenesses": {
                  "type": "array",
                  "description": "Product completenesses for each channel/locale combination (only available since the 7.0 version, and when the \"with_completenesses\" query parameter is set to \"true\")",
                  "items": {
                    "type": "object",
                    "properties": {
                      "scope": {
                        "type": "string"
                      },
                      "locale": {
                        "type": "string"
                      },
                      "data": {
                        "type": "integer"
                      }
                    }
                  },
                  "x-immutable": true,
                  "x-read-only": true,
                  "x-from-version": "7.0"
                }
              },
              "example": {
                "identifier": "top",
                "enabled": true,
                "family": "tshirt",
                "categories": [
                  "summer_collection"
                ],
                "groups": [],
                "values": {
                  "name": [
                    {
                      "data": "Top",
                      "locale": "en_US"
                    },
                    {
                      "data": "Débardeur",
                      "locale": "fr_FR"
                    }
                  ],
                  "description": [
                    {
                      "data": "Summer top",
                      "locale": "en_US",
                      "scope": "ecommerce"
                    },
                    {
                      "data": "Top",
                      "locale": "en_US",
                      "scope": "tablet"
                    },
                    {
                      "data": "Débardeur pour l'été",
                      "locale": "fr_FR",
                      "scope": "ecommerce"
                    },
                    {
                      "data": "Débardeur",
                      "locale": "fr_FR",
                      "scope": "tablet"
                    }
                  ],
                  "price": [
                    {
                      "data": [
                        {
                          "amount": "15.5",
                          "currency": "EUR"
                        },
                        {
                          "amount": "15",
                          "currency": "USD"
                        }
                      ]
                    }
                  ],
                  "color": [
                    {
                      "data": "black",
                      "linked_data": {
                        "attribute": "color",
                        "code": "black",
                        "labels": {
                          "en_US": "Black",
                          "fr_FR": "Noir"
                        }
                      }
                    }
                  ],
                  "size": [
                    {
                      "data": "m",
                      "linked_data": {
                        "attribute": "size",
                        "code": "m",
                        "labels": {
                          "en_US": "M",
                          "fr_FR": "M"
                        }
                      }
                    }
                  ],
                  "collection": [
                    {
                      "data": [
                        "winter_2016"
                      ],
                      "linked_data": {
                        "winter_2016": {
                          "attribute": "collection",
                          "code": "winter_2016",
                          "labels": {
                            "en_US": "Winter 2016",
                            "fr_FR": "Hiver 2016"
                          }
                        }
                      }
                    }
                  ]
                },
                "created": "2016-06-23T18:24:44+02:00",
                "updated": "2016-06-25T17:56:12+02:00",
                "associations": {
                  "PACK": {
                    "products": [
                      "sunglass"
                    ],
                    "product_models": [],
                    "groups": []
                  }
                },
                "quantified_associations": {
                  "PRODUCT_SET": {
                    "products": [
                      {
                        "identifier": "cap",
                        "quantity": 2
                      },
                      {
                        "identifier": "shoes",
                        "quantity": 1
                      }
                    ],
                    "product_models": [
                      {
                        "identifier": "model-biker-jacket-leather",
                        "quantity": 2
                      }
                    ]
                  }
                },
                "quality_scores": [
                  {
                    "scope": "ecommerce",
                    "locale": "en_US",
                    "data": "A"
                  },
                  {
                    "scope": "ecommerce",
                    "locale": "fr_FR",
                    "data": "B"
                  },
                  {
                    "scope": "tablet",
                    "locale": "en_US",
                    "data": "D"
                  },
                  {
                    "scope": "tablet",
                    "locale": "fr_FR",
                    "data": "E"
                  }
                ],
                "completenesses": [
                  {
                    "scope": "ecommerce",
                    "locale": "en_US",
                    "data": 10
                  },
                  {
                    "scope": "ecommerce",
                    "locale": "fr_FR",
                    "data": 20
                  },
                  {
                    "scope": "tablet",
                    "locale": "en_US",
                    "data": 30
                  },
                  {
                    "scope": "tablet",
                    "locale": "fr_FR",
                    "data": 40
                  }
                ]
              }
            }
          ]
        },
        "ProductUuid": {
          "type": "object",
          "properties": {
            "uuid": {
              "type": "string",
              "description": "Product uuid"
            },
            "enabled": {
              "type": "boolean",
              "description": "Whether the product is enabled",
              "default": true
            },
            "family": {
              "type": "string",
              "description": "<a href='api-reference.html#Family'>Family</a> code from which the product inherits its attributes and attributes requirements.",
              "default": "null only in the case of a non variant product",
              "x-validation-rules": "It is equal to an existing family code. In the case of variant product, the given family should be the same as the product model family."
            },
            "categories": {
              "type": "array",
              "description": "Codes of the <a href='api-reference.html#Category'>categories</a> in which the product is classified",
              "items": {
                "type": "string"
              },
              "x-validation-rules": "Each string of the array is equal to an existing category code"
            },
            "groups": {
              "type": "array",
              "description": "Codes of the groups to which the product belong",
              "items": {
                "type": "string"
              },
              "x-validation-rules": "Each string of the array is equal to an existing group code"
            },
            "parent": {
              "type": "string",
              "description": "Code of the parent <a href='api-reference.html#Productmodel'>product model</a> when the product is a variant (only available since the 2.0). This parent can be modified since the 2.3.",
              "default": "null",
              "x-validation-rules": "It is equal to an existing product model code only if the product is variant otherwise it's equal to null",
              "x-from-version": "2.0"
            },
            "values": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "scope": {
                      "type": "string",
                      "description": "<a href='api-reference.html#Channel'>Channel</a> code of the product value"
                    },
                    "locale": {
                      "type": "string",
                      "description": "<a href='api-reference.html#Locale'>Locale</a> code of the product value"
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Product value. See <a href='/concepts/products.html#the-data-format'>the `data` format</a> section for more details."
                    },
                    "linked_data": {
                      "type": "object",
                      "properties": {
                        "attribute": {
                          "type": "string"
                        },
                        "code": {
                          "type": "string"
                        },
                        "labels": {
                          "type": "object",
                          "properties": {}
                        }
                      },
                      "description": "Object containing labels of attribute options (only available since the 5.0 and when query parameter \"with_attribute_options\" is set to \"true\"). See <a href='/concepts/products.html#the-linked_data-format'>the `linked_data` format</a> section for more details.",
                      "x-read-only": true,
                      "x-from-version": "5.0"
                    }
                  }
                }
              },
              "description": "Product attributes values, see <a href='/concepts/products.html#focus-on-the-product-values'>Product values</a> section for more details",
              "x-validation-rules": "Validation rules detailed in Product values section"
            },
            "associations": {
              "type": "object",
              "properties": {
                "associationTypeCode": {
                  "type": "object",
                  "properties": {
                    "groups": {
                      "type": "array",
                      "description": "Array of groups codes with which the product is in relation",
                      "items": {
                        "type": "string"
                      }
                    },
                    "products": {
                      "type": "array",
                      "description": "Array of product uuids with which the product is in relation",
                      "items": {
                        "type": "string"
                      }
                    },
                    "product_models": {
                      "type": "array",
                      "description": "Array of product model codes with which the product is in relation (only available since the v2.1)",
                      "items": {
                        "type": "string"
                      },
                      "x-from-version": "2.1"
                    }
                  }
                }
              },
              "description": "Several associations related to groups, product models and/or other products, grouped by association types",
              "x-validation-rules": "&bull; The `associationTypeCode` is the code of an existing association type. &#10;&bull; Each string in the array of the property `groups` is the code of an existing group. &#10;&bull; Each string in the array of the property `products` is the uuid of an existing product. &#10;&bull; Each string in the array of the property `product_models` is the code of an existing product model."
            },
            "quantified_associations": {
              "type": "object",
              "properties": {
                "quantifiedAssociationTypeCode": {
                  "type": "object",
                  "properties": {
                    "products": {
                      "type": "array",
                      "description": "Array of objects containing product uuids and quantities with which the product is in relation",
                      "items": {
                        "type": "object",
                        "properties": {
                          "uuid": {
                            "type": "string"
                          },
                          "quantity": {
                            "type": "integer"
                          }
                        }
                      }
                    },
                    "product_models": {
                      "type": "array",
                      "description": "Array of objects containing product model codes and quantities with which the product is in relation",
                      "items": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string"
                          },
                          "quantity": {
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "description": "Several quantified associations related to products and/or product models, grouped by quantified association types (only available since the 5.0)",
              "x-validation-rules": "&bull; The `quantifiedAssociationTypeCode` is the code of an existing association type which provides quantity information. &#10;&bull; Each object in the array of the property `products` contains the uuid of an existing product and the quantity of it.",
              "x-from-version": "5.0"
            },
            "created": {
              "type": "string",
              "description": "Date of creation",
              "format": "dateTime",
              "x-immutable": true,
              "x-read-only": true
            },
            "updated": {
              "type": "string",
              "description": "Date of the last update",
              "format": "dateTime",
              "x-read-only": true
            },
            "metadata": {
              "type": "object",
              "properties": {
                "workflow_status": {
                  "type": "string",
                  "description": "Status of the product regarding the user permissions",
                  "enum": [
                    "read_only",
                    "draft_in_progress",
                    "proposal_waiting_for_approval",
                    "working_copy"
                  ]
                }
              },
              "description": "More information around the product (only available since the v2.0 in the Enterprise Edition)",
              "x-immutable": true,
              "x-read-only": true,
              "x-from-version": "2.0"
            },
            "quality_scores": {
              "type": "object",
              "properties": {},
              "description": "Product quality scores for each channel/locale combination (only available since the 5.0 and when the \"with_quality_scores\" query parameter is set to \"true\")",
              "x-immutable": true,
              "x-read-only": true,
              "x-from-version": "5.0"
            },
            "completenesses": {
              "type": "array",
              "description": "Product completenesses for each channel/locale combination (only available since the 7.0 version, and when the \"with_completenesses\" query parameter is set to \"true\")",
              "items": {
                "type": "object",
                "properties": {
                  "scope": {
                    "type": "string"
                  },
                  "locale": {
                    "type": "string"
                  },
                  "data": {
                    "type": "integer"
                  }
                }
              },
              "x-immutable": true,
              "x-read-only": true,
              "x-from-version": "7.0"
            }
          },
          "example": {
            "uuid": "25566245-55c3-42ce-86d9-8610ac459fa8",
            "enabled": true,
            "family": "tshirt",
            "categories": [
              "summer_collection"
            ],
            "groups": [],
            "values": {
              "sku": [
                {
                  "data": "top"
                }
              ],
              "name": [
                {
                  "data": "Top",
                  "locale": "en_US"
                },
                {
                  "data": "Débardeur",
                  "locale": "fr_FR"
                }
              ],
              "description": [
                {
                  "data": "Summer top",
                  "locale": "en_US",
                  "scope": "ecommerce"
                },
                {
                  "data": "Top",
                  "locale": "en_US",
                  "scope": "tablet"
                },
                {
                  "data": "Débardeur pour l'été",
                  "locale": "fr_FR",
                  "scope": "ecommerce"
                },
                {
                  "data": "Débardeur",
                  "locale": "fr_FR",
                  "scope": "tablet"
                }
              ],
              "price": [
                {
                  "data": [
                    {
                      "amount": "15.5",
                      "currency": "EUR"
                    },
                    {
                      "amount": "15",
                      "currency": "USD"
                    }
                  ]
                }
              ],
              "color": [
                {
                  "data": "black",
                  "linked_data": {
                    "attribute": "color",
                    "code": "black",
                    "labels": {
                      "en_US": "Black",
                      "fr_FR": "Noir"
                    }
                  }
                }
              ],
              "size": [
                {
                  "data": "m",
                  "linked_data": {
                    "attribute": "size",
                    "code": "m",
                    "labels": {
                      "en_US": "M",
                      "fr_FR": "M"
                    }
                  }
                }
              ],
              "collection": [
                {
                  "data": [
                    "winter_2016"
                  ],
                  "linked_data": {
                    "winter_2016": {
                      "attribute": "collection",
                      "code": "winter_2016",
                      "labels": {
                        "en_US": "Winter 2016",
                        "fr_FR": "Hiver 2016"
                      }
                    }
                  }
                }
              ]
            },
            "created": "2016-06-23T18:24:44+02:00",
            "updated": "2016-06-25T17:56:12+02:00",
            "associations": {
              "PACK": {
                "products": [
                  "d055527c-0698-4967-8f16-8a5f23f4e5cf"
                ],
                "product_models": [],
                "groups": []
              }
            },
            "quantified_associations": {
              "PRODUCT_SET": {
                "products": [
                  {
                    "uuid": "fc24e6c3-933c-4a93-8a81-e5c703d134d5",
                    "quantity": 2
                  },
                  {
                    "uuid": "a9b69002-a0b1-4ead-85c2-f8dbf59c6cfc",
                    "quantity": 1
                  }
                ],
                "product_models": [
                  {
                    "identifier": "model-biker-jacket-leather",
                    "quantity": 2
                  }
                ]
              }
            },
            "quality_scores": [
              {
                "scope": "ecommerce",
                "locale": "en_US",
                "data": "A"
              },
              {
                "scope": "ecommerce",
                "locale": "fr_FR",
                "data": "B"
              },
              {
                "scope": "tablet",
                "locale": "en_US",
                "data": "D"
              },
              {
                "scope": "tablet",
                "locale": "fr_FR",
                "data": "E"
              }
            ],
            "completenesses": [
              {
                "scope": "ecommerce",
                "locale": "en_US",
                "data": 10
              },
              {
                "scope": "ecommerce",
                "locale": "fr_FR",
                "data": 20
              },
              {
                "scope": "tablet",
                "locale": "en_US",
                "data": 30
              },
              {
                "scope": "tablet",
                "locale": "fr_FR",
                "data": 40
              }
            ]
          }
        },
        "ProductUuidExamples": {
          "type": "object",
          "x-SaaS": {
            "_links": {
              "self": {
                "href": "https://demo.akeneo.com/api/rest/v1/products-uuid?page=3&limit=3&with_quality_scores=true&with_completenesses=true&with_attribute_options=true"
              },
              "first": {
                "href": "https://demo.akeneo.com/api/rest/v1/products-uuid?page=1&limit=3&with_quality_scores=true&with_completenesses=true&with_attribute_options=true"
              },
              "previous": {
                "href": "https://demo.akeneo.com/api/rest/v1/products-uuid?page=2&limit=3&with_quality_scores=true&with_completenesses=true&with_attribute_options=true"
              },
              "next": {
                "href": "https://demo.akeneo.com/api/rest/v1/products-uuid?page=4&limit=3&with_quality_scores=true&with_completenesses=true&with_attribute_options=true"
              }
            },
            "current_page": 3,
            "_embedded": {
              "items": [
                {
                  "_links": {
                    "self": {
                      "href": "https://demo.akeneo.com/api/rest/v1/product-uuid/25566245-55c3-42ce-86d9-8610ac459fa8"
                    }
                  },
                  "uuid": "25566245-55c3-42ce-86d9-8610ac459fa8",
                  "family": "tshirt",
                  "groups": [],
                  "categories": [
                    "summer_collection"
                  ],
                  "enabled": true,
                  "values": {
                    "sku": [
                      {
                        "data": "top"
                      }
                    ],
                    "name": [
                      {
                        "data": "Top",
                        "locale": "en_US"
                      },
                      {
                        "data": "Débardeur",
                        "locale": "fr_FR"
                      }
                    ],
                    "description": [
                      {
                        "data": "Summer top",
                        "locale": "en_US",
                        "scope": "ecommerce"
                      },
                      {
                        "data": "Top",
                        "locale": "en_US",
                        "scope": "tablet"
                      },
                      {
                        "data": "Débardeur pour l'été",
                        "locale": "fr_FR",
                        "scope": "ecommerce"
                      },
                      {
                        "data": "Débardeur",
                        "locale": "fr_FR",
                        "scope": "tablet"
                      }
                    ],
                    "price": [
                      {
                        "data": [
                          {
                            "amount": "15.5",
                            "currency": "EUR"
                          },
                          {
                            "amount": "15",
                            "currency": "USD"
                          }
                        ]
                      }
                    ],
                    "color": [
                      {
                        "data": "black",
                        "linked_data": {
                          "attribute": "color",
                          "code": "black",
                          "labels": {
                            "en_US": "Black",
                            "fr_FR": "Noir"
                          }
                        }
                      }
                    ],
                    "size": [
                      {
                        "data": "m",
                        "linked_data": {
                          "attribute": "size",
                          "code": "m",
                          "labels": {
                            "en_US": "M",
                            "fr_FR": "M"
                          }
                        }
                      }
                    ],
                    "collection": [
                      {
                        "data": [
                          "winter_2016"
                        ],
                        "linked_data": {
                          "winter_2016": {
                            "attribute": "collection",
                            "code": "winter_2016",
                            "labels": {
                              "en_US": "Winter 2016",
                              "fr_FR": "Hiver 2016"
                            }
                          }
                        }
                      }
                    ]
                  },
                  "created": "2016-06-23T18:24:44+02:00",
                  "updated": "2016-06-25T17:56:12+02:00",
                  "associations": {
                    "PACK": {
                      "products": [
                        "d055527c-0698-4967-8f16-8a5f23f4e5cf"
                      ],
                      "product_models": [],
                      "groups": []
                    }
                  },
                  "quantified_associations": {
                    "PRODUCT_SET": {
                      "products": [
                        {
                          "uuid": "fc24e6c3-933c-4a93-8a81-e5c703d134d5",
                          "quantity": 2
                        },
                        {
                          "uuid": "a9b69002-a0b1-4ead-85c2-f8dbf59c6cfc",
                          "quantity": 1
                        }
                      ],
                      "product_models": [
                        {
                          "identifier": "model-biker-jacket-leather",
                          "quantity": 2
                        }
                      ]
                    }
                  },
                  "quality_scores": [
                    {
                      "scope": "ecommerce",
                      "locale": "en_US",
                      "data": "A"
                    },
                    {
                      "scope": "ecommerce",
                      "locale": "fr_FR",
                      "data": "B"
                    },
                    {
                      "scope": "tablet",
                      "locale": "en_US",
                      "data": "D"
                    },
                    {
                      "scope": "tablet",
                      "locale": "fr_FR",
                      "data": "E"
                    }
                  ],
                  "completenesses": [
                    {
                      "scope": "ecommerce",
                      "locale": "en_US",
                      "data": 20
                    },
                    {
                      "scope": "ecommerce",
                      "locale": "fr_FR",
                      "data": 30
                    },
                    {
                      "scope": "tablet",
                      "locale": "en_US",
                      "data": 55
                    },
                    {
                      "scope": "tablet",
                      "locale": "fr_FR",
                      "data": 70
                    }
                  ]
                },
                {
                  "_links": {
                    "self": {
                      "href": "https://demo.akeneo.com/api/rest/v1/product/fc24e6c3-933c-4a93-8a81-e5c703d134d5"
                    }
                  },
                  "uuid": "fc24e6c3-933c-4a93-8a81-e5c703d134d5",
                  "family": "caps",
                  "groups": [],
                  "categories": [
                    "summer_collection"
                  ],
                  "enabled": true,
                  "values": {
                    "sku": [
                      {
                        "data": "cap"
                      }
                    ],
                    "name": [
                      {
                        "data": "Cap",
                        "locale": "en_US"
                      },
                      {
                        "data": "Casquette",
                        "locale": "fr_FR"
                      }
                    ],
                    "description": [
                      {
                        "data": "Cap unisex",
                        "locale": "en_US",
                        "scope": "ecommerce"
                      },
                      {
                        "data": "Cap unisex",
                        "locale": "en_US",
                        "scope": "tablet"
                      },
                      {
                        "data": "Casquette unisexe",
                        "locale": "fr_FR",
                        "scope": "ecommerce"
                      },
                      {
                        "data": "Casquette unisexe",
                        "locale": "fr_FR",
                        "scope": "tablet"
                      }
                    ],
                    "price": [
                      {
                        "data": [
                          {
                            "amount": "20",
                            "currency": "EUR"
                          },
                          {
                            "amount": "20",
                            "currency": "USD"
                          }
                        ]
                      }
                    ],
                    "color": [
                      {
                        "data": "black",
                        "linked_data": {
                          "attribute": "color",
                          "code": "black",
                          "labels": {
                            "en_US": "Black",
                            "fr_FR": "Noir"
                          }
                        }
                      }
                    ]
                  },
                  "created": "2016-06-23T18:24:44+02:00",
                  "updated": "2016-06-25T17:56:12+02:00",
                  "associations": {
                    "PACK": {
                      "products": [
                        "d055527c-0698-4967-8f16-8a5f23f4e5cf"
                      ],
                      "product_models": [],
                      "groups": []
                    }
                  },
                  "quantified_associations": {},
                  "quality_scores": [
                    {
                      "scope": "ecommerce",
                      "locale": "en_US",
                      "data": "A"
                    },
                    {
                      "scope": "ecommerce",
                      "locale": "fr_FR",
                      "data": "B"
                    },
                    {
                      "scope": "tablet",
                      "locale": "en_US",
                      "data": "D"
                    },
                    {
                      "scope": "tablet",
                      "locale": "fr_FR",
                      "data": "E"
                    }
                  ],
                  "completenesses": [
                    {
                      "scope": "ecommerce",
                      "locale": "en_US",
                      "data": 20
                    },
                    {
                      "scope": "ecommerce",
                      "locale": "fr_FR",
                      "data": 30
                    },
                    {
                      "scope": "tablet",
                      "locale": "en_US",
                      "data": 55
                    },
                    {
                      "scope": "tablet",
                      "locale": "fr_FR",
                      "data": 70
                    }
                  ]
                },
                {
                  "_links": {
                    "self": {
                      "href": "https://demo.akeneo.com/api/rest/v1/product-uuid/fa0b115e-46ec-4527-beab-7207452f1b47"
                    }
                  },
                  "uuid": "fa0b115e-46ec-4527-beab-7207452f1b47",
                  "groups": [],
                  "categories": [
                    "winter_collection"
                  ],
                  "enabled": true,
                  "values": {
                    "sku": [
                      {
                        "data": "sweat"
                      }
                    ]
                  },
                  "created": "2016-06-23T11:24:44+02:00",
                  "updated": "2016-06-23T11:24:44+02:00",
                  "associations": {},
                  "quantified_associations": {},
                  "quality_scores": {},
                  "completenesses": []
                }
              ]
            }
          }
        },
        "ProductUuidList": {
          "allOf": [
            {
              "type": "object",
              "properties": {
                "_links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "object",
                      "properties": {
                        "href": {
                          "type": "string",
                          "description": "URI of the resource"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "description": "Product uuid"
                },
                "enabled": {
                  "type": "boolean",
                  "description": "Whether the product is enabled",
                  "default": true
                },
                "family": {
                  "type": "string",
                  "description": "<a href='api-reference.html#Family'>Family</a> code from which the product inherits its attributes and attributes requirements.",
                  "default": "null only in the case of a non variant product",
                  "x-validation-rules": "It is equal to an existing family code. In the case of variant product, the given family should be the same as the product model family."
                },
                "categories": {
                  "type": "array",
                  "description": "Codes of the <a href='api-reference.html#Category'>categories</a> in which the product is classified",
                  "items": {
                    "type": "string"
                  },
                  "x-validation-rules": "Each string of the array is equal to an existing category code"
                },
                "groups": {
                  "type": "array",
                  "description": "Codes of the groups to which the product belong",
                  "items": {
                    "type": "string"
                  },
                  "x-validation-rules": "Each string of the array is equal to an existing group code"
                },
                "parent": {
                  "type": "string",
                  "description": "Code of the parent <a href='api-reference.html#Productmodel'>product model</a> when the product is a variant (only available since the 2.0). This parent can be modified since the 2.3.",
                  "default": "null",
                  "x-validation-rules": "It is equal to an existing product model code only if the product is variant otherwise it's equal to null",
                  "x-from-version": "2.0"
                },
                "values": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "scope": {
                          "type": "string",
                          "description": "<a href='api-reference.html#Channel'>Channel</a> code of the product value"
                        },
                        "locale": {
                          "type": "string",
                          "description": "<a href='api-reference.html#Locale'>Locale</a> code of the product value"
                        },
                        "data": {
                          "type": "object",
                          "properties": {},
                          "description": "Product value. See <a href='/concepts/products.html#the-data-format'>the `data` format</a> section for more details."
                        },
                        "linked_data": {
                          "type": "object",
                          "properties": {
                            "attribute": {
                              "type": "string"
                            },
                            "code": {
                              "type": "string"
                            },
                            "labels": {
                              "type": "object",
                              "properties": {}
                            }
                          },
                          "description": "Object containing labels of attribute options (only available since the 5.0 and when query parameter \"with_attribute_options\" is set to \"true\"). See <a href='/concepts/products.html#the-linked_data-format'>the `linked_data` format</a> section for more details.",
                          "x-read-only": true,
                          "x-from-version": "5.0"
                        }
                      }
                    }
                  },
                  "description": "Product attributes values, see <a href='/concepts/products.html#focus-on-the-product-values'>Product values</a> section for more details",
                  "x-validation-rules": "Validation rules detailed in Product values section"
                },
                "associations": {
                  "type": "object",
                  "properties": {
                    "associationTypeCode": {
                      "type": "object",
                      "properties": {
                        "groups": {
                          "type": "array",
                          "description": "Array of groups codes with which the product is in relation",
                          "items": {
                            "type": "string"
                          }
                        },
                        "products": {
                          "type": "array",
                          "description": "Array of product uuids with which the product is in relation",
                          "items": {
                            "type": "string"
                          }
                        },
                        "product_models": {
                          "type": "array",
                          "description": "Array of product model codes with which the product is in relation (only available since the v2.1)",
                          "items": {
                            "type": "string"
                          },
                          "x-from-version": "2.1"
                        }
                      }
                    }
                  },
                  "description": "Several associations related to groups, product models and/or other products, grouped by association types",
                  "x-validation-rules": "&bull; The `associationTypeCode` is the code of an existing association type. &#10;&bull; Each string in the array of the property `groups` is the code of an existing group. &#10;&bull; Each string in the array of the property `products` is the uuid of an existing product. &#10;&bull; Each string in the array of the property `product_models` is the code of an existing product model."
                },
                "quantified_associations": {
                  "type": "object",
                  "properties": {
                    "quantifiedAssociationTypeCode": {
                      "type": "object",
                      "properties": {
                        "products": {
                          "type": "array",
                          "description": "Array of objects containing product uuids and quantities with which the product is in relation",
                          "items": {
                            "type": "object",
                            "properties": {
                              "uuid": {
                                "type": "string"
                              },
                              "quantity": {
                                "type": "integer"
                              }
                            }
                          }
                        },
                        "product_models": {
                          "type": "array",
                          "description": "Array of objects containing product model codes and quantities with which the product is in relation",
                          "items": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string"
                              },
                              "quantity": {
                                "type": "integer"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "description": "Several quantified associations related to products and/or product models, grouped by quantified association types (only available since the 5.0)",
                  "x-validation-rules": "&bull; The `quantifiedAssociationTypeCode` is the code of an existing association type which provides quantity information. &#10;&bull; Each object in the array of the property `products` contains the uuid of an existing product and the quantity of it.",
                  "x-from-version": "5.0"
                },
                "created": {
                  "type": "string",
                  "description": "Date of creation",
                  "format": "dateTime",
                  "x-immutable": true,
                  "x-read-only": true
                },
                "updated": {
                  "type": "string",
                  "description": "Date of the last update",
                  "format": "dateTime",
                  "x-read-only": true
                },
                "metadata": {
                  "type": "object",
                  "properties": {
                    "workflow_status": {
                      "type": "string",
                      "description": "Status of the product regarding the user permissions",
                      "enum": [
                        "read_only",
                        "draft_in_progress",
                        "proposal_waiting_for_approval",
                        "working_copy"
                      ]
                    }
                  },
                  "description": "More information around the product (only available since the v2.0 in the Enterprise Edition)",
                  "x-immutable": true,
                  "x-read-only": true,
                  "x-from-version": "2.0"
                },
                "quality_scores": {
                  "type": "object",
                  "properties": {},
                  "description": "Product quality scores for each channel/locale combination (only available since the 5.0 and when the \"with_quality_scores\" query parameter is set to \"true\")",
                  "x-immutable": true,
                  "x-read-only": true,
                  "x-from-version": "5.0"
                },
                "completenesses": {
                  "type": "array",
                  "description": "Product completenesses for each channel/locale combination (only available since the 7.0 version, and when the \"with_completenesses\" query parameter is set to \"true\")",
                  "items": {
                    "type": "object",
                    "properties": {
                      "scope": {
                        "type": "string"
                      },
                      "locale": {
                        "type": "string"
                      },
                      "data": {
                        "type": "integer"
                      }
                    }
                  },
                  "x-immutable": true,
                  "x-read-only": true,
                  "x-from-version": "7.0"
                }
              },
              "example": {
                "uuid": "25566245-55c3-42ce-86d9-8610ac459fa8",
                "enabled": true,
                "family": "tshirt",
                "categories": [
                  "summer_collection"
                ],
                "groups": [],
                "values": {
                  "sku": [
                    {
                      "data": "top"
                    }
                  ],
                  "name": [
                    {
                      "data": "Top",
                      "locale": "en_US"
                    },
                    {
                      "data": "Débardeur",
                      "locale": "fr_FR"
                    }
                  ],
                  "description": [
                    {
                      "data": "Summer top",
                      "locale": "en_US",
                      "scope": "ecommerce"
                    },
                    {
                      "data": "Top",
                      "locale": "en_US",
                      "scope": "tablet"
                    },
                    {
                      "data": "Débardeur pour l'été",
                      "locale": "fr_FR",
                      "scope": "ecommerce"
                    },
                    {
                      "data": "Débardeur",
                      "locale": "fr_FR",
                      "scope": "tablet"
                    }
                  ],
                  "price": [
                    {
                      "data": [
                        {
                          "amount": "15.5",
                          "currency": "EUR"
                        },
                        {
                          "amount": "15",
                          "currency": "USD"
                        }
                      ]
                    }
                  ],
                  "color": [
                    {
                      "data": "black",
                      "linked_data": {
                        "attribute": "color",
                        "code": "black",
                        "labels": {
                          "en_US": "Black",
                          "fr_FR": "Noir"
                        }
                      }
                    }
                  ],
                  "size": [
                    {
                      "data": "m",
                      "linked_data": {
                        "attribute": "size",
                        "code": "m",
                        "labels": {
                          "en_US": "M",
                          "fr_FR": "M"
                        }
                      }
                    }
                  ],
                  "collection": [
                    {
                      "data": [
                        "winter_2016"
                      ],
                      "linked_data": {
                        "winter_2016": {
                          "attribute": "collection",
                          "code": "winter_2016",
                          "labels": {
                            "en_US": "Winter 2016",
                            "fr_FR": "Hiver 2016"
                          }
                        }
                      }
                    }
                  ]
                },
                "created": "2016-06-23T18:24:44+02:00",
                "updated": "2016-06-25T17:56:12+02:00",
                "associations": {
                  "PACK": {
                    "products": [
                      "d055527c-0698-4967-8f16-8a5f23f4e5cf"
                    ],
                    "product_models": [],
                    "groups": []
                  }
                },
                "quantified_associations": {
                  "PRODUCT_SET": {
                    "products": [
                      {
                        "uuid": "fc24e6c3-933c-4a93-8a81-e5c703d134d5",
                        "quantity": 2
                      },
                      {
                        "uuid": "a9b69002-a0b1-4ead-85c2-f8dbf59c6cfc",
                        "quantity": 1
                      }
                    ],
                    "product_models": [
                      {
                        "identifier": "model-biker-jacket-leather",
                        "quantity": 2
                      }
                    ]
                  }
                },
                "quality_scores": [
                  {
                    "scope": "ecommerce",
                    "locale": "en_US",
                    "data": "A"
                  },
                  {
                    "scope": "ecommerce",
                    "locale": "fr_FR",
                    "data": "B"
                  },
                  {
                    "scope": "tablet",
                    "locale": "en_US",
                    "data": "D"
                  },
                  {
                    "scope": "tablet",
                    "locale": "fr_FR",
                    "data": "E"
                  }
                ],
                "completenesses": [
                  {
                    "scope": "ecommerce",
                    "locale": "en_US",
                    "data": 10
                  },
                  {
                    "scope": "ecommerce",
                    "locale": "fr_FR",
                    "data": 20
                  },
                  {
                    "scope": "tablet",
                    "locale": "en_US",
                    "data": 30
                  },
                  {
                    "scope": "tablet",
                    "locale": "fr_FR",
                    "data": 40
                  }
                ]
              }
            }
          ]
        },
        "ProductModel": {
          "required": [
            "code",
            "family_variant"
          ],
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "Product model code",
              "x-immutable": true
            },
            "family": {
              "type": "string",
              "description": "<a href='api-reference.html#Family'>Family</a> code  from which the product inherits its attributes and attributes requirements (since the 3.2)",
              "x-validation-rules": "It is equal to an existing family code",
              "x-immutable": true,
              "x-from-version": "3.2"
            },
            "family_variant": {
              "type": "string",
              "description": "Family variant code from which the product model inherits its attributes and variant attributes",
              "x-validation-rules": "It is equal to an existing family variant code that belong to the family given in the `family` field",
              "x-immutable": true
            },
            "parent": {
              "type": "string",
              "description": "Code of the parent <a href='api-reference.html#Productmodel'>product model</a>. This parent can be modified since the 2.3.",
              "default": "null",
              "x-validation-rules": "&bull; It is equal to an existing product model code&#10;&bull; This product model has the same family variant as the one given in the `family_variant field`",
              "x-from-version": "2.3"
            },
            "categories": {
              "type": "array",
              "description": "Codes of the <a href='api-reference.html#Category'>categories</a> in which the product model is categorized",
              "items": {
                "type": "string"
              },
              "x-validation-rules": "Each string of the array is equal to an existing category code"
            },
            "values": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "scope": {
                      "type": "string",
                      "description": "<a href='api-reference.html#Channel'>Channel</a> code of the product value"
                    },
                    "locale": {
                      "type": "string",
                      "description": "<a href='api-reference.html#Locale'>Locale</a> code of the product value"
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "<a href='api-reference.html#Productuuid'>Product</a> value"
                    }
                  }
                }
              },
              "description": "Product model attributes values, see <a href='/concepts/products.html#focus-on-the-product-values'>Product values</a> section for more details",
              "x-validation-rules": "Validation rules detailed in Product values section"
            },
            "associations": {
              "type": "object",
              "properties": {
                "associationTypeCode": {
                  "type": "object",
                  "properties": {
                    "groups": {
                      "type": "array",
                      "description": "Array of groups codes with which the product is in relation",
                      "items": {
                        "type": "string"
                      }
                    },
                    "products": {
                      "type": "array",
                      "description": "Array of product identifiers with which the product is in relation",
                      "items": {
                        "type": "string"
                      }
                    },
                    "product_models": {
                      "type": "array",
                      "description": "Array of product model codes with which the product is in relation (only available since the v2.1)",
                      "items": {
                        "type": "string"
                      },
                      "x-from-version": "2.1"
                    }
                  }
                }
              },
              "description": "Several associations related to groups, product and/or other product models, grouped by association types",
              "x-validation-rules": "&bull; The `associationTypeCode` is the code of an existing association type. &#10;&bull; Each string in the array of the property `groups` is the code of an existing group. &#10;&bull; Each string in the array of the property `products` is the identifier of an existing product. &#10;&bull; Each string in the array of the property `product_models` is the code of an existing product model."
            },
            "quantified_associations": {
              "type": "object",
              "properties": {
                "quantifiedAssociationTypeCode": {
                  "type": "object",
                  "properties": {
                    "products": {
                      "type": "array",
                      "description": "Array of objects containing product identifiers and quantities with which the product model is in relation",
                      "items": {
                        "type": "object",
                        "properties": {
                          "identifier": {
                            "type": "string"
                          },
                          "quantity": {
                            "type": "integer"
                          }
                        }
                      }
                    },
                    "product_models": {
                      "type": "array",
                      "description": "Array of objects containing product model codes and quantities with which the product model is in relation",
                      "items": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string"
                          },
                          "quantity": {
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "description": "Several quantified associations related to products and/or product models, grouped by quantified association types (only available since the 5.0)",
              "x-validation-rules": "&bull; The `quantifiedAssociationTypeCode` is the code of an existing association type which provides quantity information. &#10;&bull; Each object in the array of the property `products` contains the identifier of an existing product and the quantity of it. &#10;&bull; Each object in the array of the property `product_models` contains the code of an existing product model and the quantity of it.",
              "x-from-version": "5.0"
            },
            "created": {
              "type": "string",
              "description": "Date of creation",
              "format": "dateTime",
              "x-immutable": true,
              "x-read-only": true
            },
            "updated": {
              "type": "string",
              "description": "Date of the last update",
              "format": "dateTime",
              "x-read-only": true
            },
            "metadata": {
              "type": "object",
              "properties": {
                "workflow_status": {
                  "type": "string",
                  "description": "Status of the product model regarding the user permissions",
                  "enum": [
                    "read_only",
                    "draft_in_progress",
                    "proposal_waiting_for_approval",
                    "working_copy"
                  ]
                }
              },
              "description": "More information around the product model (only available since the v2.3 in the Enterprise Edition)",
              "x-immutable": true,
              "x-read-only": true,
              "x-from-version": "2.3"
            },
            "quality_scores": {
              "type": "object",
              "properties": {},
              "description": "Product model quality scores for each channel/locale combination (<strong>only available since the 7.0 version</strong> and when the \"with_quality_scores\" query parameter is set to \"true\")",
              "x-immutable": true,
              "x-read-only": true,
              "x-from-version": "7.0"
            }
          },
          "example": {
            "code": "model-biker-jacket-leather",
            "family": "clothing",
            "family_variant": "clothing_material_size",
            "parent": "model-biker-jacket",
            "categories": [
              "summer_collection"
            ],
            "values": {
              "color": [
                {
                  "data": "antique_white"
                }
              ],
              "material": [
                {
                  "data": "leather"
                }
              ],
              "variation_name": [
                {
                  "locale": "en_US",
                  "data": "Biker jacket leather"
                }
              ],
              "name": [
                {
                  "locale": "en_US",
                  "data": "Biker jacket"
                }
              ],
              "collection": [
                {
                  "data": [
                    "summer_2017"
                  ]
                }
              ],
              "description": [
                {
                  "locale": "en_US",
                  "scope": "ecommerce",
                  "data": "Biker jacket"
                }
              ]
            },
            "associations": {
              "PACK": {
                "products": [
                  "sunglass"
                ],
                "product_models": [],
                "groups": []
              }
            },
            "quantified_associations": {
              "PRODUCT_SET": {
                "products": [
                  {
                    "identifier": "top",
                    "quantity": 2
                  },
                  {
                    "identifier": "cap",
                    "quantity": 1
                  }
                ],
                "product_models": [
                  {
                    "code": "model-biker-jacket-leather",
                    "quantity": 2
                  }
                ]
              }
            },
            "quality_scores": [
              {
                "scope": "ecommerce",
                "locale": "en_US",
                "data": "A"
              },
              {
                "scope": "ecommerce",
                "locale": "fr_FR",
                "data": "B"
              },
              {
                "scope": "tablet",
                "locale": "en_US",
                "data": "D"
              },
              {
                "scope": "tablet",
                "locale": "fr_FR",
                "data": "E"
              }
            ],
            "created": "2017-10-02T15:03:55+02:00",
            "updated": "2017-10-02T15:03:55+02:00"
          }
        },
        "ProductModelList": {
          "allOf": [
            {
              "type": "object",
              "properties": {
                "_links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "object",
                      "properties": {
                        "href": {
                          "type": "string",
                          "description": "URI of the resource"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "required": [
                "code",
                "family_variant"
              ],
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "Product model code",
                  "x-immutable": true
                },
                "family": {
                  "type": "string",
                  "description": "<a href='api-reference.html#Family'>Family</a> code  from which the product inherits its attributes and attributes requirements (since the 3.2)",
                  "x-validation-rules": "It is equal to an existing family code",
                  "x-immutable": true,
                  "x-from-version": "3.2"
                },
                "family_variant": {
                  "type": "string",
                  "description": "Family variant code from which the product model inherits its attributes and variant attributes",
                  "x-validation-rules": "It is equal to an existing family variant code that belong to the family given in the `family` field",
                  "x-immutable": true
                },
                "parent": {
                  "type": "string",
                  "description": "Code of the parent <a href='api-reference.html#Productmodel'>product model</a>. This parent can be modified since the 2.3.",
                  "default": "null",
                  "x-validation-rules": "&bull; It is equal to an existing product model code&#10;&bull; This product model has the same family variant as the one given in the `family_variant field`",
                  "x-from-version": "2.3"
                },
                "categories": {
                  "type": "array",
                  "description": "Codes of the <a href='api-reference.html#Category'>categories</a> in which the product model is categorized",
                  "items": {
                    "type": "string"
                  },
                  "x-validation-rules": "Each string of the array is equal to an existing category code"
                },
                "values": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "scope": {
                          "type": "string",
                          "description": "<a href='api-reference.html#Channel'>Channel</a> code of the product value"
                        },
                        "locale": {
                          "type": "string",
                          "description": "<a href='api-reference.html#Locale'>Locale</a> code of the product value"
                        },
                        "data": {
                          "type": "object",
                          "properties": {},
                          "description": "<a href='api-reference.html#Productuuid'>Product</a> value"
                        }
                      }
                    }
                  },
                  "description": "Product model attributes values, see <a href='/concepts/products.html#focus-on-the-product-values'>Product values</a> section for more details",
                  "x-validation-rules": "Validation rules detailed in Product values section"
                },
                "associations": {
                  "type": "object",
                  "properties": {
                    "associationTypeCode": {
                      "type": "object",
                      "properties": {
                        "groups": {
                          "type": "array",
                          "description": "Array of groups codes with which the product is in relation",
                          "items": {
                            "type": "string"
                          }
                        },
                        "products": {
                          "type": "array",
                          "description": "Array of product identifiers with which the product is in relation",
                          "items": {
                            "type": "string"
                          }
                        },
                        "product_models": {
                          "type": "array",
                          "description": "Array of product model codes with which the product is in relation (only available since the v2.1)",
                          "items": {
                            "type": "string"
                          },
                          "x-from-version": "2.1"
                        }
                      }
                    }
                  },
                  "description": "Several associations related to groups, product and/or other product models, grouped by association types",
                  "x-validation-rules": "&bull; The `associationTypeCode` is the code of an existing association type. &#10;&bull; Each string in the array of the property `groups` is the code of an existing group. &#10;&bull; Each string in the array of the property `products` is the identifier of an existing product. &#10;&bull; Each string in the array of the property `product_models` is the code of an existing product model."
                },
                "quantified_associations": {
                  "type": "object",
                  "properties": {
                    "quantifiedAssociationTypeCode": {
                      "type": "object",
                      "properties": {
                        "products": {
                          "type": "array",
                          "description": "Array of objects containing product identifiers and quantities with which the product model is in relation",
                          "items": {
                            "type": "object",
                            "properties": {
                              "identifier": {
                                "type": "string"
                              },
                              "quantity": {
                                "type": "integer"
                              }
                            }
                          }
                        },
                        "product_models": {
                          "type": "array",
                          "description": "Array of objects containing product model codes and quantities with which the product model is in relation",
                          "items": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string"
                              },
                              "quantity": {
                                "type": "integer"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "description": "Several quantified associations related to products and/or product models, grouped by quantified association types (only available since the 5.0)",
                  "x-validation-rules": "&bull; The `quantifiedAssociationTypeCode` is the code of an existing association type which provides quantity information. &#10;&bull; Each object in the array of the property `products` contains the identifier of an existing product and the quantity of it. &#10;&bull; Each object in the array of the property `product_models` contains the code of an existing product model and the quantity of it.",
                  "x-from-version": "5.0"
                },
                "created": {
                  "type": "string",
                  "description": "Date of creation",
                  "format": "dateTime",
                  "x-immutable": true,
                  "x-read-only": true
                },
                "updated": {
                  "type": "string",
                  "description": "Date of the last update",
                  "format": "dateTime",
                  "x-read-only": true
                },
                "metadata": {
                  "type": "object",
                  "properties": {
                    "workflow_status": {
                      "type": "string",
                      "description": "Status of the product model regarding the user permissions",
                      "enum": [
                        "read_only",
                        "draft_in_progress",
                        "proposal_waiting_for_approval",
                        "working_copy"
                      ]
                    }
                  },
                  "description": "More information around the product model (only available since the v2.3 in the Enterprise Edition)",
                  "x-immutable": true,
                  "x-read-only": true,
                  "x-from-version": "2.3"
                },
                "quality_scores": {
                  "type": "object",
                  "properties": {},
                  "description": "Product model quality scores for each channel/locale combination (<strong>only available since the 7.0 version</strong> and when the \"with_quality_scores\" query parameter is set to \"true\")",
                  "x-immutable": true,
                  "x-read-only": true,
                  "x-from-version": "7.0"
                }
              },
              "example": {
                "code": "model-biker-jacket-leather",
                "family": "clothing",
                "family_variant": "clothing_material_size",
                "parent": "model-biker-jacket",
                "categories": [
                  "summer_collection"
                ],
                "values": {
                  "color": [
                    {
                      "data": "antique_white"
                    }
                  ],
                  "material": [
                    {
                      "data": "leather"
                    }
                  ],
                  "variation_name": [
                    {
                      "locale": "en_US",
                      "data": "Biker jacket leather"
                    }
                  ],
                  "name": [
                    {
                      "locale": "en_US",
                      "data": "Biker jacket"
                    }
                  ],
                  "collection": [
                    {
                      "data": [
                        "summer_2017"
                      ]
                    }
                  ],
                  "description": [
                    {
                      "locale": "en_US",
                      "scope": "ecommerce",
                      "data": "Biker jacket"
                    }
                  ]
                },
                "associations": {
                  "PACK": {
                    "products": [
                      "sunglass"
                    ],
                    "product_models": [],
                    "groups": []
                  }
                },
                "quantified_associations": {
                  "PRODUCT_SET": {
                    "products": [
                      {
                        "identifier": "top",
                        "quantity": 2
                      },
                      {
                        "identifier": "cap",
                        "quantity": 1
                      }
                    ],
                    "product_models": [
                      {
                        "code": "model-biker-jacket-leather",
                        "quantity": 2
                      }
                    ]
                  }
                },
                "quality_scores": [
                  {
                    "scope": "ecommerce",
                    "locale": "en_US",
                    "data": "A"
                  },
                  {
                    "scope": "ecommerce",
                    "locale": "fr_FR",
                    "data": "B"
                  },
                  {
                    "scope": "tablet",
                    "locale": "en_US",
                    "data": "D"
                  },
                  {
                    "scope": "tablet",
                    "locale": "fr_FR",
                    "data": "E"
                  }
                ],
                "created": "2017-10-02T15:03:55+02:00",
                "updated": "2017-10-02T15:03:55+02:00"
              }
            }
          ]
        },
        "PublishedProduct": {
          "required": [
            "identifier"
          ],
          "type": "object",
          "properties": {
            "identifier": {
              "type": "string",
              "description": "Published product identifier, i.e. the value of the only `pim_catalog_identifier` attribute"
            },
            "enabled": {
              "type": "boolean",
              "description": "Whether the published product is enable",
              "default": true
            },
            "family": {
              "type": "string",
              "description": "<a href='api-reference.html#Family'>Family</a> code from which the published product inherits its attributes and attributes requirements",
              "default": "null",
              "x-validation-rules": "It is equal to an existing family code"
            },
            "categories": {
              "type": "array",
              "description": "Codes of the <a href='api-reference.html#Category'>categories</a> in which the published product is classified",
              "items": {
                "type": "string"
              },
              "x-validation-rules": "Each string of the array is equal to an existing category code"
            },
            "groups": {
              "type": "array",
              "description": "Codes of the groups to which the published product belong",
              "items": {
                "type": "string"
              },
              "x-validation-rules": "Each string of the array is equal to an existing group code"
            },
            "values": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "scope": {
                      "type": "string",
                      "description": "<a href='api-reference.html#Channel'>Channel</a> code of the product value"
                    },
                    "locale": {
                      "type": "string",
                      "description": "<a href='api-reference.html#Locale'>Locale</a> code of the product value"
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "<a href='api-reference.html#Productuuid'>Product</a> value"
                    }
                  }
                }
              },
              "description": "Published product attributes values, see <a href='/concepts/products.html#focus-on-the-product-values'>Product values</a> section for more details",
              "x-validation-rules": "Validation rules detailed in Product values section"
            },
            "associations": {
              "type": "object",
              "properties": {
                "associationTypeCode": {
                  "type": "object",
                  "properties": {
                    "groups": {
                      "type": "array",
                      "description": "Array of groups codes with which the published product is in relation",
                      "items": {
                        "type": "string"
                      }
                    },
                    "products": {
                      "type": "array",
                      "description": "Array of published product identifiers with which the published product is in relation",
                      "items": {
                        "type": "string"
                      }
                    },
                    "product_models": {
                      "type": "array",
                      "description": "Array of product model codes with which the product is in relation (only available since the v2.1)",
                      "items": {
                        "type": "string"
                      },
                      "x-from-version": "2.1"
                    }
                  }
                }
              },
              "description": "Several associations related to groups and/or other published products, grouped by association types",
              "x-validation-rules": "&bull; The `associationTypeCode` is the code of an existing association type. &#10;&bull; Each string in the array of the property `groups` is the code of an existing group. &#10;&bull; Each string in the array of the property `products` is the identifier of an existing product. &#10;&bull; Identifiers used in the array of the property `products` cannot be equal to the published product identifier."
            },
            "quantified_associations": {
              "type": "object",
              "properties": {},
              "description": "Warning: associations with quantities are not compatible with the published products. The response will always be empty."
            },
            "created": {
              "type": "string",
              "description": "Date of creation",
              "format": "dateTime",
              "x-immutable": true,
              "x-read-only": true
            },
            "updated": {
              "type": "string",
              "description": "Date of the last update",
              "format": "dateTime",
              "x-read-only": true
            }
          },
          "example": {
            "identifier": "top",
            "enabled": true,
            "family": "tshirt",
            "categories": [
              "summer_collection"
            ],
            "groups": [],
            "values": {
              "name": [
                {
                  "data": "Top",
                  "locale": "en_US"
                },
                {
                  "data": "Débardeur",
                  "locale": "fr_FR"
                }
              ],
              "description": [
                {
                  "data": "Summer top",
                  "locale": "en_US",
                  "scope": "ecommerce"
                },
                {
                  "data": "Top",
                  "locale": "en_US",
                  "scope": "tablet"
                },
                {
                  "data": "Débardeur pour l'été",
                  "locale": "fr_FR",
                  "scope": "ecommerce"
                },
                {
                  "data": "Débardeur",
                  "locale": "fr_FR",
                  "scope": "tablet"
                }
              ],
              "price": [
                {
                  "data": [
                    {
                      "amount": "15.5",
                      "currency": "EUR"
                    },
                    {
                      "amount": "15",
                      "currency": "USD"
                    }
                  ]
                }
              ],
              "color": [
                {
                  "data": "black"
                }
              ],
              "size": [
                {
                  "data": "m"
                }
              ]
            },
            "created": "2016-06-23T18:24:44+02:00",
            "updated": "2016-06-25T17:56:12+02:00",
            "associations": {
              "PACK": {
                "products": [
                  "sunglass"
                ],
                "product_models": [],
                "groups": []
              }
            }
          }
        },
        "PublishedProductList": {
          "allOf": [
            {
              "type": "object",
              "properties": {
                "_links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "object",
                      "properties": {
                        "href": {
                          "type": "string",
                          "description": "URI of the resource"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "required": [
                "identifier"
              ],
              "type": "object",
              "properties": {
                "identifier": {
                  "type": "string",
                  "description": "Published product identifier, i.e. the value of the only `pim_catalog_identifier` attribute"
                },
                "enabled": {
                  "type": "boolean",
                  "description": "Whether the published product is enable",
                  "default": true
                },
                "family": {
                  "type": "string",
                  "description": "<a href='api-reference.html#Family'>Family</a> code from which the published product inherits its attributes and attributes requirements",
                  "default": "null",
                  "x-validation-rules": "It is equal to an existing family code"
                },
                "categories": {
                  "type": "array",
                  "description": "Codes of the <a href='api-reference.html#Category'>categories</a> in which the published product is classified",
                  "items": {
                    "type": "string"
                  },
                  "x-validation-rules": "Each string of the array is equal to an existing category code"
                },
                "groups": {
                  "type": "array",
                  "description": "Codes of the groups to which the published product belong",
                  "items": {
                    "type": "string"
                  },
                  "x-validation-rules": "Each string of the array is equal to an existing group code"
                },
                "values": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "scope": {
                          "type": "string",
                          "description": "<a href='api-reference.html#Channel'>Channel</a> code of the product value"
                        },
                        "locale": {
                          "type": "string",
                          "description": "<a href='api-reference.html#Locale'>Locale</a> code of the product value"
                        },
                        "data": {
                          "type": "object",
                          "properties": {},
                          "description": "<a href='api-reference.html#Productuuid'>Product</a> value"
                        }
                      }
                    }
                  },
                  "description": "Published product attributes values, see <a href='/concepts/products.html#focus-on-the-product-values'>Product values</a> section for more details",
                  "x-validation-rules": "Validation rules detailed in Product values section"
                },
                "associations": {
                  "type": "object",
                  "properties": {
                    "associationTypeCode": {
                      "type": "object",
                      "properties": {
                        "groups": {
                          "type": "array",
                          "description": "Array of groups codes with which the published product is in relation",
                          "items": {
                            "type": "string"
                          }
                        },
                        "products": {
                          "type": "array",
                          "description": "Array of published product identifiers with which the published product is in relation",
                          "items": {
                            "type": "string"
                          }
                        },
                        "product_models": {
                          "type": "array",
                          "description": "Array of product model codes with which the product is in relation (only available since the v2.1)",
                          "items": {
                            "type": "string"
                          },
                          "x-from-version": "2.1"
                        }
                      }
                    }
                  },
                  "description": "Several associations related to groups and/or other published products, grouped by association types",
                  "x-validation-rules": "&bull; The `associationTypeCode` is the code of an existing association type. &#10;&bull; Each string in the array of the property `groups` is the code of an existing group. &#10;&bull; Each string in the array of the property `products` is the identifier of an existing product. &#10;&bull; Identifiers used in the array of the property `products` cannot be equal to the published product identifier."
                },
                "quantified_associations": {
                  "type": "object",
                  "properties": {},
                  "description": "Warning: associations with quantities are not compatible with the published products. The response will always be empty."
                },
                "created": {
                  "type": "string",
                  "description": "Date of creation",
                  "format": "dateTime",
                  "x-immutable": true,
                  "x-read-only": true
                },
                "updated": {
                  "type": "string",
                  "description": "Date of the last update",
                  "format": "dateTime",
                  "x-read-only": true
                }
              },
              "example": {
                "identifier": "top",
                "enabled": true,
                "family": "tshirt",
                "categories": [
                  "summer_collection"
                ],
                "groups": [],
                "values": {
                  "name": [
                    {
                      "data": "Top",
                      "locale": "en_US"
                    },
                    {
                      "data": "Débardeur",
                      "locale": "fr_FR"
                    }
                  ],
                  "description": [
                    {
                      "data": "Summer top",
                      "locale": "en_US",
                      "scope": "ecommerce"
                    },
                    {
                      "data": "Top",
                      "locale": "en_US",
                      "scope": "tablet"
                    },
                    {
                      "data": "Débardeur pour l'été",
                      "locale": "fr_FR",
                      "scope": "ecommerce"
                    },
                    {
                      "data": "Débardeur",
                      "locale": "fr_FR",
                      "scope": "tablet"
                    }
                  ],
                  "price": [
                    {
                      "data": [
                        {
                          "amount": "15.5",
                          "currency": "EUR"
                        },
                        {
                          "amount": "15",
                          "currency": "USD"
                        }
                      ]
                    }
                  ],
                  "color": [
                    {
                      "data": "black"
                    }
                  ],
                  "size": [
                    {
                      "data": "m"
                    }
                  ]
                },
                "created": "2016-06-23T18:24:44+02:00",
                "updated": "2016-06-25T17:56:12+02:00",
                "associations": {
                  "PACK": {
                    "products": [
                      "sunglass"
                    ],
                    "product_models": [],
                    "groups": []
                  }
                }
              }
            }
          ]
        },
        "ReferenceEntity": {
          "allOf": [
            {
              "type": "object",
              "properties": {
                "_links": {
                  "type": "object",
                  "properties": {
                    "image_download": {
                      "type": "object",
                      "properties": {
                        "href": {
                          "type": "string",
                          "description": "URI to download the binaries of the reference entity image file"
                        }
                      }
                    }
                  },
                  "x-read-only": true
                }
              }
            },
            {
              "required": [
                "code"
              ],
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "Reference entity code",
                  "x-immutable": true
                },
                "labels": {
                  "type": "object",
                  "properties": {
                    "localeCode": {
                      "type": "string",
                      "description": "Reference entity label for the locale `localeCode`"
                    }
                  },
                  "description": "Reference entity labels for each locale",
                  "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                },
                "image": {
                  "type": "string",
                  "description": "Code of the reference entity image",
                  "default": "null"
                }
              },
              "example": {
                "code": "brands",
                "labels": {
                  "en_US": "Brands",
                  "fr_FR": "Marques"
                },
                "image": "0/2/d/6/54d81dc888ba1501a8g765f3ab5797569f3bv756c_ref_img.png"
              }
            }
          ]
        },
        "ReferenceEntityList": {
          "allOf": [
            {
              "type": "object",
              "properties": {
                "_links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "object",
                      "properties": {
                        "href": {
                          "type": "string",
                          "description": "URI of the resource"
                        }
                      }
                    },
                    "image_download": {
                      "type": "object",
                      "properties": {
                        "href": {
                          "type": "string",
                          "description": "URI to download the binaries of the reference entity image file"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "required": [
                "code"
              ],
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "Reference entity code",
                  "x-immutable": true
                },
                "labels": {
                  "type": "object",
                  "properties": {
                    "localeCode": {
                      "type": "string",
                      "description": "Reference entity label for the locale `localeCode`"
                    }
                  },
                  "description": "Reference entity labels for each locale",
                  "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                },
                "image": {
                  "type": "string",
                  "description": "Code of the reference entity image",
                  "default": "null"
                }
              },
              "example": {
                "code": "brands",
                "labels": {
                  "en_US": "Brands",
                  "fr_FR": "Marques"
                },
                "image": "0/2/d/6/54d81dc888ba1501a8g765f3ab5797569f3bv756c_ref_img.png"
              }
            }
          ]
        },
        "ReferenceEntityAttribute": {
          "required": [
            "code",
            "type"
          ],
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "Attribute code",
              "x-immutable": true
            },
            "labels": {
              "type": "object",
              "properties": {
                "localeCode": {
                  "type": "string",
                  "description": "Attribute label for the locale `localeCode`"
                }
              },
              "description": "Attribute labels for each locale",
              "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
            },
            "type": {
              "type": "string",
              "description": "Attribute type. See <a href='/concepts/reference-entities.html#reference-entity-attribute'>type</a> section for more details.",
              "enum": [
                "text",
                "image",
                "number",
                "single_option",
                "multiple_options",
                "reference_entity_single_link",
                "reference_entity_multiple_links"
              ],
              "x-immutable": true
            },
            "value_per_locale": {
              "type": "boolean",
              "description": "Whether the attribute is localizable, i.e. can have one value by locale",
              "default": false,
              "x-immutable": true
            },
            "value_per_channel": {
              "type": "boolean",
              "description": "Whether the attribute is scopable, i.e. can have one value by channel",
              "default": false,
              "x-immutable": true
            },
            "is_required_for_completeness": {
              "type": "boolean",
              "description": "Whether the attribute should be part of the record's completeness calculation",
              "default": false
            },
            "max_characters": {
              "type": "integer",
              "description": "Maximum number of characters allowed for the value of the attribute when the attribute type is `text`",
              "x-warning": "Only for `text` attribute type"
            },
            "is_textarea": {
              "type": "boolean",
              "description": "Whether the UI should display a text area instead of a simple field when the attribute type is `text`",
              "default": false,
              "x-warning": "Only for `text` attribute type"
            },
            "is_rich_text_editor": {
              "type": "boolean",
              "description": "Whether the UI should display a rich text editor instead of a simple text area when the attribute type is `text`",
              "x-validation-rules": "Required when the property `is_textarea` is equal to `true`",
              "x-warning": "Only for `text` attribute type"
            },
            "validation_rule": {
              "type": "string",
              "description": "Validation rule type used to validate the attribute value when the attribute type is `text`",
              "default": "none",
              "enum": [
                "email",
                "url",
                "regexp",
                "none"
              ],
              "x-warning": "Only for `text` attribute type"
            },
            "validation_regexp": {
              "type": "string",
              "description": "Regexp expression used to validate the attribute value when the attribute type is `text`",
              "default": "null",
              "x-validation-rules": "Required when the property `validation_rule` is equal to `regexp`",
              "x-warning": "Only for `text` attribute type"
            },
            "allowed_extensions": {
              "type": "array",
              "description": "Extensions allowed when the attribute type is `image`",
              "items": {
                "type": "string"
              },
              "x-warning": "Only for `image` attribute type"
            },
            "max_file_size": {
              "type": "string",
              "description": "Max file size in MB when the attribute type is `image`",
              "default": "null",
              "x-warning": "Only for `image` attribute type"
            },
            "reference_entity_code": {
              "type": "string",
              "description": "Code of the linked reference entity when the attribute type is `reference_entity_single_link` or `reference_entity_multiple_links`",
              "default": "null",
              "x-validation-rules": "Required when the attribute type is either `reference_entity_single_link` or `reference_entity_multiple_links`",
              "x-immutable": true,
              "x-warning": "Only for `reference_entity_single_link` and `reference_entity_multiple_links` attribute type"
            },
            "decimals_allowed": {
              "type": "boolean",
              "description": "Whether decimals are allowed when the attribute type is `number`",
              "default": false,
              "x-warning": "Only for `number` attribute type"
            },
            "min_value": {
              "type": "string",
              "description": "Minimum value allowed when the attribute type is `number`",
              "default": "null",
              "x-validation-rules": "The minimum value must be lower than the maximum value",
              "x-warning": "Only for `number` attribute type"
            },
            "max_value": {
              "type": "string",
              "description": "Maximum value allowed when the attribute type is `number`",
              "default": "null",
              "x-validation-rules": "The maximum value must be greater than the minimum value",
              "x-warning": "Only for `number` attribute type"
            }
          },
          "example": {
            "code": "description",
            "labels": {
              "en_US": "Description",
              "fr_FR": "Description"
            },
            "type": "text",
            "value_per_locale": true,
            "value_per_channel": false,
            "is_required_for_completeness": true,
            "is_textarea": true,
            "is_rich_text_editor": true,
            "validation_rule": "none"
          }
        },
        "ReferenceEntityAttributeList": {
          "type": "array",
          "items": {
            "required": [
              "code",
              "type"
            ],
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "description": "Attribute code",
                "x-immutable": true
              },
              "labels": {
                "type": "object",
                "properties": {
                  "localeCode": {
                    "type": "string",
                    "description": "Attribute label for the locale `localeCode`"
                  }
                },
                "description": "Attribute labels for each locale",
                "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
              },
              "type": {
                "type": "string",
                "description": "Attribute type. See <a href='/concepts/reference-entities.html#reference-entity-attribute'>type</a> section for more details.",
                "enum": [
                  "text",
                  "image",
                  "number",
                  "single_option",
                  "multiple_options",
                  "reference_entity_single_link",
                  "reference_entity_multiple_links"
                ],
                "x-immutable": true
              },
              "value_per_locale": {
                "type": "boolean",
                "description": "Whether the attribute is localizable, i.e. can have one value by locale",
                "default": false,
                "x-immutable": true
              },
              "value_per_channel": {
                "type": "boolean",
                "description": "Whether the attribute is scopable, i.e. can have one value by channel",
                "default": false,
                "x-immutable": true
              },
              "is_required_for_completeness": {
                "type": "boolean",
                "description": "Whether the attribute should be part of the record's completeness calculation",
                "default": false
              },
              "max_characters": {
                "type": "integer",
                "description": "Maximum number of characters allowed for the value of the attribute when the attribute type is `text`",
                "x-warning": "Only for `text` attribute type"
              },
              "is_textarea": {
                "type": "boolean",
                "description": "Whether the UI should display a text area instead of a simple field when the attribute type is `text`",
                "default": false,
                "x-warning": "Only for `text` attribute type"
              },
              "is_rich_text_editor": {
                "type": "boolean",
                "description": "Whether the UI should display a rich text editor instead of a simple text area when the attribute type is `text`",
                "x-validation-rules": "Required when the property `is_textarea` is equal to `true`",
                "x-warning": "Only for `text` attribute type"
              },
              "validation_rule": {
                "type": "string",
                "description": "Validation rule type used to validate the attribute value when the attribute type is `text`",
                "default": "none",
                "enum": [
                  "email",
                  "url",
                  "regexp",
                  "none"
                ],
                "x-warning": "Only for `text` attribute type"
              },
              "validation_regexp": {
                "type": "string",
                "description": "Regexp expression used to validate the attribute value when the attribute type is `text`",
                "default": "null",
                "x-validation-rules": "Required when the property `validation_rule` is equal to `regexp`",
                "x-warning": "Only for `text` attribute type"
              },
              "allowed_extensions": {
                "type": "array",
                "description": "Extensions allowed when the attribute type is `image`",
                "items": {
                  "type": "string"
                },
                "x-warning": "Only for `image` attribute type"
              },
              "max_file_size": {
                "type": "string",
                "description": "Max file size in MB when the attribute type is `image`",
                "default": "null",
                "x-warning": "Only for `image` attribute type"
              },
              "reference_entity_code": {
                "type": "string",
                "description": "Code of the linked reference entity when the attribute type is `reference_entity_single_link` or `reference_entity_multiple_links`",
                "default": "null",
                "x-validation-rules": "Required when the attribute type is either `reference_entity_single_link` or `reference_entity_multiple_links`",
                "x-immutable": true,
                "x-warning": "Only for `reference_entity_single_link` and `reference_entity_multiple_links` attribute type"
              },
              "decimals_allowed": {
                "type": "boolean",
                "description": "Whether decimals are allowed when the attribute type is `number`",
                "default": false,
                "x-warning": "Only for `number` attribute type"
              },
              "min_value": {
                "type": "string",
                "description": "Minimum value allowed when the attribute type is `number`",
                "default": "null",
                "x-validation-rules": "The minimum value must be lower than the maximum value",
                "x-warning": "Only for `number` attribute type"
              },
              "max_value": {
                "type": "string",
                "description": "Maximum value allowed when the attribute type is `number`",
                "default": "null",
                "x-validation-rules": "The maximum value must be greater than the minimum value",
                "x-warning": "Only for `number` attribute type"
              }
            },
            "example": {
              "code": "description",
              "labels": {
                "en_US": "Description",
                "fr_FR": "Description"
              },
              "type": "text",
              "value_per_locale": true,
              "value_per_channel": false,
              "is_required_for_completeness": true,
              "max_characters": null,
              "is_textarea": true,
              "is_rich_text_editor": true,
              "validation_rule": "none",
              "validation_regexp": null
            }
          }
        },
        "ReferenceEntityAttributeOption": {
          "required": [
            "code"
          ],
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "Attribute's option code",
              "x-immutable": true
            },
            "labels": {
              "type": "object",
              "properties": {
                "localeCode": {
                  "type": "string",
                  "description": "Attribute label for the locale `localeCode`"
                }
              },
              "description": "Attribute labels for each locale",
              "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
            }
          },
          "example": {
            "code": "global_nomad",
            "labels": {
              "en_US": "Global Nomad",
              "fr_FR": "Nomade du Monde"
            }
          }
        },
        "ReferenceEntityAttributeOptionList": {
          "type": "array",
          "items": {
            "required": [
              "code"
            ],
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "description": "Attribute's option code",
                "x-immutable": true
              },
              "labels": {
                "type": "object",
                "properties": {
                  "localeCode": {
                    "type": "string",
                    "description": "Attribute label for the locale `localeCode`"
                  }
                },
                "description": "Attribute labels for each locale",
                "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
              }
            },
            "example": {
              "code": "global_nomad",
              "labels": {
                "en_US": "Global Nomad",
                "fr_FR": "Nomade du Monde"
              }
            }
          }
        },
        "ReferenceEntityRecord": {
          "required": [
            "code"
          ],
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "Code of the record",
              "x-immutable": true
            },
            "values": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "channel": {
                      "type": "string",
                      "description": "Channel code of the reference entity record value"
                    },
                    "locale": {
                      "type": "string",
                      "description": "Locale code of the reference entity record value"
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "description": "Reference entity record value. See <a href='/concepts/reference-entities.html#the-data-format'>the `data` format</a> section for more details."
                    }
                  }
                }
              },
              "description": "Record attributes values, see <a href='/concepts/reference-entities.html#focus-on-the-reference-entity-record-values'>Reference entity record values</a> section for more details",
              "x-validation-rules": "Validation rules detailed in Reference entity record values section"
            },
            "created": {
              "type": "string",
              "description": "Date of creation.",
              "format": "dateTime",
              "default": "null",
              "x-immutable": true,
              "x-read-only": true,
              "x-from-version": "5.0"
            },
            "updated": {
              "type": "string",
              "description": "Date of the last update.",
              "format": "dateTime",
              "default": "null",
              "x-read-only": true,
              "x-from-version": "5.0"
            }
          },
          "example": {
            "code": "kartell",
            "values": {
              "label": [
                {
                  "locale": "en_US",
                  "data": "Kartell"
                }
              ],
              "image": [
                {
                  "data": "0/c/b/0/0cb0c0e115dedba676f8d1ad8343ec207ab54c7b_image.jpg"
                }
              ],
              "description": [
                {
                  "locale": "en_US",
                  "data": "Kartell, the Italian furniture company that sells modern and remarkable pieces of furnitures."
                },
                {
                  "locale": "fr_FR",
                  "data": "Kartell, l'éditeur de meuble italien spécialisé dans la signature de belle pièces au design contemporain."
                }
              ],
              "country": [
                {
                  "data": "italy"
                }
              ],
              "collection_overview": [
                {
                  "data": "5/1/d/8/51d81dc778ba1501a8f998f3ab5797569f3b9e25_img.png"
                }
              ],
              "creation_year": [
                {
                  "data": "1949"
                }
              ]
            },
            "created": "2021-01-01T01:23:34+00:00",
            "updated": "2021-02-03T23:45:60+00:00"
          }
        },
        "ReferenceEntityRecordList": {
          "allOf": [
            {
              "type": "object",
              "properties": {
                "_links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "object",
                      "properties": {
                        "href": {
                          "type": "string",
                          "description": "URI of the resource"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "required": [
                "code"
              ],
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "Code of the record",
                  "x-immutable": true
                },
                "values": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "channel": {
                          "type": "string",
                          "description": "Channel code of the reference entity record value"
                        },
                        "locale": {
                          "type": "string",
                          "description": "Locale code of the reference entity record value"
                        },
                        "data": {
                          "type": "object",
                          "properties": {},
                          "description": "Reference entity record value. See <a href='/concepts/reference-entities.html#the-data-format'>the `data` format</a> section for more details."
                        }
                      }
                    }
                  },
                  "description": "Record attributes values, see <a href='/concepts/reference-entities.html#focus-on-the-reference-entity-record-values'>Reference entity record values</a> section for more details",
                  "x-validation-rules": "Validation rules detailed in Reference entity record values section"
                },
                "created": {
                  "type": "string",
                  "description": "Date of creation.",
                  "format": "dateTime",
                  "default": "null",
                  "x-immutable": true,
                  "x-read-only": true,
                  "x-from-version": "5.0"
                },
                "updated": {
                  "type": "string",
                  "description": "Date of the last update.",
                  "format": "dateTime",
                  "default": "null",
                  "x-read-only": true,
                  "x-from-version": "5.0"
                }
              },
              "example": {
                "code": "kartell",
                "values": {
                  "label": [
                    {
                      "locale": "en_US",
                      "data": "Kartell"
                    }
                  ],
                  "image": [
                    {
                      "data": "0/c/b/0/0cb0c0e115dedba676f8d1ad8343ec207ab54c7b_image.jpg"
                    }
                  ],
                  "description": [
                    {
                      "locale": "en_US",
                      "data": "Kartell, the Italian furniture company that sells modern and remarkable pieces of furnitures."
                    },
                    {
                      "locale": "fr_FR",
                      "data": "Kartell, l'éditeur de meuble italien spécialisé dans la signature de belle pièces au design contemporain."
                    }
                  ],
                  "country": [
                    {
                      "data": "italy"
                    }
                  ],
                  "collection_overview": [
                    {
                      "data": "5/1/d/8/51d81dc778ba1501a8f998f3ab5797569f3b9e25_img.png"
                    }
                  ],
                  "creation_year": [
                    {
                      "data": "1949"
                    }
                  ]
                },
                "created": "2021-01-01T01:23:34+00:00",
                "updated": "2021-02-03T23:45:60+00:00"
              }
            }
          ]
        },
        "Category": {
          "required": [
            "code"
          ],
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "Category code",
              "x-immutable": true
            },
            "parent": {
              "type": "string",
              "description": "Category code of the parent's category",
              "default": "null",
              "x-validation-rules": "&bull; It is either equal to `null` or to an existing category code. &#10;&bull; If equal to an existing category code, it cannot reference itself."
            },
            "updated": {
              "type": "string",
              "description": "Date of the last update",
              "format": "dateTime",
              "x-read-only": true
            },
            "position": {
              "type": "integer",
              "description": "Position of the category in its level, start from 1 (only available since the 7.0 version and when query parameter \"with_position\" is set to \"true\")",
              "x-read-only": true
            },
            "labels": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Category labels for each locale",
              "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
            },
            "values": {
              "type": "object",
              "properties": {
                "additionalProperties|attributeUuid|channelCode|localeCode": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {},
                        "description": "Attribute value"
                      },
                      "type": {
                        "type": "string",
                        "description": "The attribute type"
                      },
                      "locale": {
                        "type": "string",
                        "description": "<a href='api-reference.html#Locale'>Locale</a> code of the attribute value"
                      },
                      "channel": {
                        "type": "string",
                        "description": "<a href='api-reference.html#Channel'>Channel</a> code of the attribute value"
                      },
                      "attribute_code": {
                        "type": "string",
                        "description": "The attribute code with its uuid (additionalProperties|attributeUuid)"
                      }
                    }
                  }
                }
              },
              "description": "Attribute values",
              "x-read-only": true
            }
          },
          "example": {
            "code": "winter_collection",
            "updated": "2021-05-22T12:48:00+02:00",
            "position": 1,
            "labels": {
              "en_US": "Winter collection",
              "fr_FR": "Collection hiver"
            },
            "values": {
              "description|96b88bf4-c2b7-4b64-a1f9-5d4876c02c26|ecommerce|en_US": {
                "data": "<p>Winter collection description</p>\n",
                "type": "textarea",
                "channel": "ecommerce",
                "locale": "en_US",
                "attribute_code": "description|96b88bf4-c2b7-4b64-a1f9-5d4876c02c26"
              }
            }
          }
        },
        "CategoryList": {
          "allOf": [
            {
              "type": "object",
              "properties": {
                "_links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "object",
                      "properties": {
                        "href": {
                          "type": "string",
                          "description": "URI of the resource"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "required": [
                "code"
              ],
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "Category code",
                  "x-immutable": true
                },
                "parent": {
                  "type": "string",
                  "description": "Category code of the parent's category",
                  "default": "null",
                  "x-validation-rules": "&bull; It is either equal to `null` or to an existing category code. &#10;&bull; If equal to an existing category code, it cannot reference itself."
                },
                "updated": {
                  "type": "string",
                  "description": "Date of the last update",
                  "format": "dateTime",
                  "x-read-only": true
                },
                "position": {
                  "type": "integer",
                  "description": "Position of the category in its level, start from 1 (only available since the 7.0 version and when query parameter \"with_position\" is set to \"true\")",
                  "x-read-only": true
                },
                "labels": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Category labels for each locale",
                  "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                },
                "values": {
                  "type": "object",
                  "properties": {
                    "additionalProperties|attributeUuid|channelCode|localeCode": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "object",
                            "properties": {},
                            "description": "Attribute value"
                          },
                          "type": {
                            "type": "string",
                            "description": "The attribute type"
                          },
                          "locale": {
                            "type": "string",
                            "description": "<a href='api-reference.html#Locale'>Locale</a> code of the attribute value"
                          },
                          "channel": {
                            "type": "string",
                            "description": "<a href='api-reference.html#Channel'>Channel</a> code of the attribute value"
                          },
                          "attribute_code": {
                            "type": "string",
                            "description": "The attribute code with its uuid (additionalProperties|attributeUuid)"
                          }
                        }
                      }
                    }
                  },
                  "description": "Attribute values",
                  "x-read-only": true
                }
              },
              "example": {
                "code": "winter_collection",
                "updated": "2021-05-22T12:48:00+02:00",
                "position": 1,
                "labels": {
                  "en_US": "Winter collection",
                  "fr_FR": "Collection hiver"
                },
                "values": {
                  "description|96b88bf4-c2b7-4b64-a1f9-5d4876c02c26|ecommerce|en_US": {
                    "data": "<p>Winter collection description</p>\n",
                    "type": "textarea",
                    "channel": "ecommerce",
                    "locale": "en_US",
                    "attribute_code": "description|96b88bf4-c2b7-4b64-a1f9-5d4876c02c26"
                  }
                }
              }
            }
          ]
        },
        "MeasureFamily": {
          "required": [
            "code"
          ],
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "Measure family code",
              "x-immutable": true
            },
            "standard": {
              "type": "string",
              "description": "Measure family standard",
              "x-immutable": true
            },
            "units": {
              "type": "array",
              "description": "Family units",
              "items": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "description": "Measure code",
                    "x-immutable": true
                  },
                  "convert": {
                    "type": "object",
                    "properties": {},
                    "description": "Mathematic operation to convert the unit into the standard unit"
                  },
                  "symbol": {
                    "type": "string",
                    "description": "Measure symbol",
                    "x-immutable": true
                  }
                }
              }
            }
          },
          "example": {
            "code": "Area",
            "standard": "SQUARE_METER",
            "units": [
              {
                "code": "SQUARE_MILLIMETER",
                "convert": {
                  "mul": "0.001"
                },
                "symbol": "mm²"
              },
              {
                "code": "SQUARE_CENTIMETER",
                "convert": {
                  "mul": "0.001"
                },
                "symbol": "cm²"
              }
            ]
          }
        },
        "MeasureFamilyList": {
          "allOf": [
            {
              "type": "object",
              "properties": {
                "_links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "object",
                      "properties": {
                        "href": {
                          "type": "string",
                          "description": "URI of the resource"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "required": [
                "code"
              ],
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "Measure family code",
                  "x-immutable": true
                },
                "standard": {
                  "type": "string",
                  "description": "Measure family standard",
                  "x-immutable": true
                },
                "units": {
                  "type": "array",
                  "description": "Family units",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Measure code",
                        "x-immutable": true
                      },
                      "convert": {
                        "type": "object",
                        "properties": {},
                        "description": "Mathematic operation to convert the unit into the standard unit"
                      },
                      "symbol": {
                        "type": "string",
                        "description": "Measure symbol",
                        "x-immutable": true
                      }
                    }
                  }
                }
              },
              "example": {
                "code": "Area",
                "standard": "SQUARE_METER",
                "units": [
                  {
                    "code": "SQUARE_MILLIMETER",
                    "convert": {
                      "mul": "0.001"
                    },
                    "symbol": "mm²"
                  },
                  {
                    "code": "SQUARE_CENTIMETER",
                    "convert": {
                      "mul": "0.001"
                    },
                    "symbol": "cm²"
                  }
                ]
              }
            }
          ]
        },
        "MeasurementFamily": {
          "required": [
            "code",
            "standard_unit_code",
            "units"
          ],
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "Measurement family code",
              "x-immutable": true
            },
            "labels": {
              "type": "object",
              "properties": {
                "localeCode": {
                  "type": "string",
                  "description": "Measurement family label for the locale `localeCode`"
                }
              },
              "description": "Measurement family labels for each locale",
              "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
            },
            "standard_unit_code": {
              "type": "string",
              "description": "Unit code used as the standard unit for this measurement family",
              "x-validation-rules": "The unit code exists in the list of the property `units`",
              "x-immutable": true
            },
            "units": {
              "type": "object",
              "properties": {
                "unitCode": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Measurement unit code. More details <a href='/concepts/target-market-settings.html#focus-on-the-units'>here</a>.",
                      "x-immutable": true
                    },
                    "labels": {
                      "type": "object",
                      "properties": {
                        "localeCode": {
                          "type": "string",
                          "description": "Unit label for the locale `localeCode`"
                        }
                      },
                      "description": "Unit labels for each locale. More details <a href='/concepts/target-market-settings.html#focus-on-the-units'>here</a>.",
                      "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                    },
                    "convert_from_standard": {
                      "type": "array",
                      "description": "Calculation to convert the unit from the standard unit. More details <a href='/concepts/target-market-settings.html#focus-on-the-units'>here</a>.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "operator": {
                            "type": "string",
                            "description": "Operator for a conversion operation to convert the unit in the standard unit",
                            "enum": [
                              "mul",
                              "div",
                              "add",
                              "sub"
                            ],
                            "x-validation-rules": "The operator is one of the following values"
                          },
                          "value": {
                            "type": "string",
                            "description": "Value for a conversion operation to convert the unit in the standard unit"
                          }
                        }
                      },
                      "x-validation-rules": "&bull; The conversion operations can't be updated when a product attribute is linked to this measurement family &#10;&bull; At least one conversion operation per unit is required"
                    },
                    "symbol": {
                      "type": "string",
                      "description": "Measurement unit symbol. More details <a href='/concepts/target-market-settings.html#focus-on-the-units'>here</a>."
                    }
                  }
                }
              },
              "description": "Measurement units for this family with their conversion operations. More details <a href='/concepts/target-market-settings.html#focus-on-the-units'>here</a>.",
              "x-validation-rules": "A unit can't be added when a product attribute is linked to this measurement family"
            }
          },
          "example": {
            "code": "AREA",
            "labels": {
              "en_US": "Area",
              "fr_FR": "Surface"
            },
            "standard_unit_code": "SQUARE_METER",
            "units": {
              "SQUARE_MILLIMETER": {
                "code": "SQUARE_MILLIMETER",
                "labels": {
                  "en_US": "Square millimeter",
                  "fr_FR": "Millimètre carré"
                },
                "convert_from_standard": [
                  {
                    "operator": "mul",
                    "value": "0.000001"
                  }
                ],
                "symbol": "mm²"
              },
              "SQUARE_CENTIMETER": {
                "code": "SQUARE_CENTIMETER",
                "labels": {
                  "en_US": "Square centimeter",
                  "fr_FR": "Centimètre carré"
                },
                "convert_from_standard": [
                  {
                    "operator": "mul",
                    "value": "0.0001"
                  }
                ],
                "symbol": "cm²"
              },
              "SQUARE_METER": {
                "code": "SQUARE_METER",
                "labels": {
                  "en_US": "Square meter",
                  "fr_FR": "Mètre carré"
                },
                "convert_from_standard": [
                  {
                    "operator": "mul",
                    "value": "1"
                  }
                ],
                "symbol": "m²"
              }
            }
          }
        },
        "MeasurementFamilyList": {
          "required": [
            "code",
            "standard_unit_code",
            "units"
          ],
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "Measurement family code",
              "x-immutable": true
            },
            "labels": {
              "type": "object",
              "properties": {
                "localeCode": {
                  "type": "string",
                  "description": "Measurement family label for the locale `localeCode`"
                }
              },
              "description": "Measurement family labels for each locale",
              "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
            },
            "standard_unit_code": {
              "type": "string",
              "description": "Unit code used as the standard unit for this measurement family",
              "x-validation-rules": "The unit code exists in the list of the property `units`",
              "x-immutable": true
            },
            "units": {
              "type": "object",
              "properties": {
                "unitCode": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Measurement unit code. More details <a href='/concepts/target-market-settings.html#focus-on-the-units'>here</a>.",
                      "x-immutable": true
                    },
                    "labels": {
                      "type": "object",
                      "properties": {
                        "localeCode": {
                          "type": "string",
                          "description": "Unit label for the locale `localeCode`"
                        }
                      },
                      "description": "Unit labels for each locale. More details <a href='/concepts/target-market-settings.html#focus-on-the-units'>here</a>.",
                      "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                    },
                    "convert_from_standard": {
                      "type": "array",
                      "description": "Calculation to convert the unit from the standard unit. More details <a href='/concepts/target-market-settings.html#focus-on-the-units'>here</a>.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "operator": {
                            "type": "string",
                            "description": "Operator for a conversion operation to convert the unit in the standard unit",
                            "enum": [
                              "mul",
                              "div",
                              "add",
                              "sub"
                            ],
                            "x-validation-rules": "The operator is one of the following values"
                          },
                          "value": {
                            "type": "string",
                            "description": "Value for a conversion operation to convert the unit in the standard unit"
                          }
                        }
                      },
                      "x-validation-rules": "&bull; The conversion operations can't be updated when a product attribute is linked to this measurement family &#10;&bull; At least one conversion operation per unit is required"
                    },
                    "symbol": {
                      "type": "string",
                      "description": "Measurement unit symbol. More details <a href='/concepts/target-market-settings.html#focus-on-the-units'>here</a>."
                    }
                  }
                }
              },
              "description": "Measurement units for this family with their conversion operations. More details <a href='/concepts/target-market-settings.html#focus-on-the-units'>here</a>.",
              "x-validation-rules": "A unit can't be added when a product attribute is linked to this measurement family"
            }
          },
          "example": {
            "code": "AREA",
            "labels": {
              "en_US": "Area",
              "fr_FR": "Surface"
            },
            "standard_unit_code": "SQUARE_METER",
            "units": {
              "SQUARE_MILLIMETER": {
                "code": "SQUARE_MILLIMETER",
                "labels": {
                  "en_US": "Square millimeter",
                  "fr_FR": "Millimètre carré"
                },
                "convert_from_standard": [
                  {
                    "operator": "mul",
                    "value": "0.000001"
                  }
                ],
                "symbol": "mm²"
              },
              "SQUARE_CENTIMETER": {
                "code": "SQUARE_CENTIMETER",
                "labels": {
                  "en_US": "Square centimeter",
                  "fr_FR": "Centimètre carré"
                },
                "convert_from_standard": [
                  {
                    "operator": "mul",
                    "value": "0.0001"
                  }
                ],
                "symbol": "cm²"
              },
              "SQUARE_METER": {
                "code": "SQUARE_METER",
                "labels": {
                  "en_US": "Square meter",
                  "fr_FR": "Mètre carré"
                },
                "convert_from_standard": [
                  {
                    "operator": "mul",
                    "value": "1"
                  }
                ],
                "symbol": "m²"
              }
            }
          }
        },
        "Family": {
          "required": [
            "attribute_as_label",
            "code"
          ],
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "Family code",
              "x-immutable": true
            },
            "attribute_as_label": {
              "type": "string",
              "description": "Attribute code used as label",
              "x-validation-rules": "&bull; It is equal to an existing attribute code &#10;&bull; This attribute code is in the array of the property `attributes` &#10;&bull; The type of this attribute is either `pim_catalog_identifier` or `pim_catalog_text`"
            },
            "attribute_as_image": {
              "type": "string",
              "description": "Attribute code used as the main picture in the user interface (only since v2.0)",
              "default": "null",
              "x-validation-rules": "&bull; It is equal to an existing attribute code &#10;&bull; This attribute code is in the array of the property `attributes` &#10;&bull; The type of this attribute is `pim_catalog_image`. Since v2.1, you can also use a `pim_assets_collection` attribute type",
              "x-from-version": "2.0"
            },
            "attributes": {
              "type": "array",
              "description": "Attributes codes that compose the family",
              "items": {
                "type": "string"
              },
              "x-validation-rules": "Each string of the array is an existing attribute code"
            },
            "attribute_requirements": {
              "type": "object",
              "properties": {
                "channelCode": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "Attributes codes of the family that are required for the completeness calculation for the channel `channelCode`"
                  }
                }
              },
              "description": "Attributes codes of the family that are required for the completeness calculation for each channel",
              "x-validation-rules": "&bull; Each string of these arrays is an existing attribute code &#10;&bull; These attribute codes are in the array of the property `attributes` &#10;&bull; The `channelCode` is the code of an existing and activated channel"
            },
            "labels": {
              "type": "object",
              "properties": {
                "localeCode": {
                  "type": "string",
                  "description": "Family label for the locale `localeCode`"
                }
              },
              "description": "Family labels for each locale",
              "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
            }
          },
          "example": {
            "code": "caps",
            "attributes": [
              "sku",
              "name",
              "description",
              "price",
              "color",
              "picture"
            ],
            "attribute_as_label": "name",
            "attribute_as_image": "picture",
            "attribute_requirements": {
              "ecommerce": [
                "sku",
                "name",
                "description",
                "price",
                "color"
              ],
              "tablet": [
                "sku",
                "name",
                "description",
                "price"
              ]
            },
            "labels": {
              "en_US": "Caps",
              "fr_FR": "Casquettes"
            }
          }
        },
        "FamilyList": {
          "allOf": [
            {
              "type": "object",
              "properties": {
                "_links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "object",
                      "properties": {
                        "href": {
                          "type": "string",
                          "description": "URI of the resource"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "required": [
                "attribute_as_label",
                "code"
              ],
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "Family code",
                  "x-immutable": true
                },
                "attribute_as_label": {
                  "type": "string",
                  "description": "Attribute code used as label",
                  "x-validation-rules": "&bull; It is equal to an existing attribute code &#10;&bull; This attribute code is in the array of the property `attributes` &#10;&bull; The type of this attribute is either `pim_catalog_identifier` or `pim_catalog_text`"
                },
                "attribute_as_image": {
                  "type": "string",
                  "description": "Attribute code used as the main picture in the user interface (only since v2.0)",
                  "default": "null",
                  "x-validation-rules": "&bull; It is equal to an existing attribute code &#10;&bull; This attribute code is in the array of the property `attributes` &#10;&bull; The type of this attribute is `pim_catalog_image`. Since v2.1, you can also use a `pim_assets_collection` attribute type",
                  "x-from-version": "2.0"
                },
                "attributes": {
                  "type": "array",
                  "description": "Attributes codes that compose the family",
                  "items": {
                    "type": "string"
                  },
                  "x-validation-rules": "Each string of the array is an existing attribute code"
                },
                "attribute_requirements": {
                  "type": "object",
                  "properties": {
                    "channelCode": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "Attributes codes of the family that are required for the completeness calculation for the channel `channelCode`"
                      }
                    }
                  },
                  "description": "Attributes codes of the family that are required for the completeness calculation for each channel",
                  "x-validation-rules": "&bull; Each string of these arrays is an existing attribute code &#10;&bull; These attribute codes are in the array of the property `attributes` &#10;&bull; The `channelCode` is the code of an existing and activated channel"
                },
                "labels": {
                  "type": "object",
                  "properties": {
                    "localeCode": {
                      "type": "string",
                      "description": "Family label for the locale `localeCode`"
                    }
                  },
                  "description": "Family labels for each locale",
                  "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                }
              },
              "example": {
                "code": "caps",
                "attributes": [
                  "sku",
                  "name",
                  "description",
                  "price",
                  "color",
                  "picture"
                ],
                "attribute_as_label": "name",
                "attribute_as_image": "picture",
                "attribute_requirements": {
                  "ecommerce": [
                    "sku",
                    "name",
                    "description",
                    "price",
                    "color"
                  ],
                  "tablet": [
                    "sku",
                    "name",
                    "description",
                    "price"
                  ]
                },
                "labels": {
                  "en_US": "Caps",
                  "fr_FR": "Casquettes"
                }
              }
            }
          ]
        },
        "FamilyVariant": {
          "required": [
            "code",
            "variant_attribute_sets"
          ],
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "Family variant code",
              "x-immutable": true
            },
            "variant_attribute_sets": {
              "type": "array",
              "description": "Attributes distribution according to the enrichment level",
              "items": {
                "required": [
                  "axes",
                  "level"
                ],
                "type": "object",
                "properties": {
                  "level": {
                    "type": "integer",
                    "description": "Enrichment level",
                    "x-validation-rules": "&bull; Number representing the level of the attribute set. &#10;&bull; It should be equal to 1 or 2. &#10;&bull; If you specify the level 2, you have to specify the level 1 as well.",
                    "x-immutable": true
                  },
                  "axes": {
                    "type": "array",
                    "description": "Codes of attributes used as variant axes",
                    "items": {
                      "type": "string"
                    },
                    "x-validation-rules": "&bull; Should be an array of maximum 5 existing attribute codes &#10;&bull; These attributes should belong to the family of the family variant &#10;&bull; Only the following attribute types are allowed: `simple select`, `multi select`, `reference data`, `metric`, `boolean` &#10;&bull; Attributes cannot be scopable, nor localizable nor locale specific &#10;&bull; Attributes used as axes in one level cannot be used as axes or as attributes in the other level",
                    "x-immutable": true
                  },
                  "attributes": {
                    "type": "array",
                    "description": "Codes of attributes bind to this enrichment level",
                    "items": {
                      "type": "string"
                    },
                    "x-validation-rules": "&bull; Should be an array of existing attribute codes &#10;&bull; These attributes should belong to the family of the family variant &#10;&bull; Attributes used as attribute in one level cannot be used as axes or as attributes in the other level &#10;&bull; Attributes that are `unique value` or `identifier` are automatically distributed to the lower level."
                  }
                },
                "description": "Enrichment level"
              }
            },
            "labels": {
              "type": "object",
              "properties": {
                "localeCode": {
                  "type": "string",
                  "description": "Family variant label for the locale `localeCode`"
                }
              },
              "description": "Family variant labels for each locale",
              "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
            }
          },
          "example": {
            "code": "shoesVariant",
            "labels": {
              "en_US": "Shoes variant",
              "fr_FR": "Variante de chaussures"
            },
            "variant_attribute_sets": [
              {
                "level": 1,
                "attributes": [
                  "color",
                  "material"
                ],
                "axes": [
                  "color"
                ]
              },
              {
                "level": 2,
                "attributes": [
                  "sku",
                  "size"
                ],
                "axes": [
                  "size"
                ]
              }
            ]
          }
        },
        "FamilyVariantList": {
          "allOf": [
            {
              "type": "object",
              "properties": {
                "_links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "object",
                      "properties": {
                        "href": {
                          "type": "string",
                          "description": "URI of the resource"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "required": [
                "code",
                "variant_attribute_sets"
              ],
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "Family variant code",
                  "x-immutable": true
                },
                "variant_attribute_sets": {
                  "type": "array",
                  "description": "Attributes distribution according to the enrichment level",
                  "items": {
                    "required": [
                      "axes",
                      "level"
                    ],
                    "type": "object",
                    "properties": {
                      "level": {
                        "type": "integer",
                        "description": "Enrichment level",
                        "x-validation-rules": "&bull; Number representing the level of the attribute set. &#10;&bull; It should be equal to 1 or 2. &#10;&bull; If you specify the level 2, you have to specify the level 1 as well.",
                        "x-immutable": true
                      },
                      "axes": {
                        "type": "array",
                        "description": "Codes of attributes used as variant axes",
                        "items": {
                          "type": "string"
                        },
                        "x-validation-rules": "&bull; Should be an array of maximum 5 existing attribute codes &#10;&bull; These attributes should belong to the family of the family variant &#10;&bull; Only the following attribute types are allowed: `simple select`, `multi select`, `reference data`, `metric`, `boolean` &#10;&bull; Attributes cannot be scopable, nor localizable nor locale specific &#10;&bull; Attributes used as axes in one level cannot be used as axes or as attributes in the other level",
                        "x-immutable": true
                      },
                      "attributes": {
                        "type": "array",
                        "description": "Codes of attributes bind to this enrichment level",
                        "items": {
                          "type": "string"
                        },
                        "x-validation-rules": "&bull; Should be an array of existing attribute codes &#10;&bull; These attributes should belong to the family of the family variant &#10;&bull; Attributes used as attribute in one level cannot be used as axes or as attributes in the other level &#10;&bull; Attributes that are `unique value` or `identifier` are automatically distributed to the lower level."
                      }
                    },
                    "description": "Enrichment level"
                  }
                },
                "labels": {
                  "type": "object",
                  "properties": {
                    "localeCode": {
                      "type": "string",
                      "description": "Family variant label for the locale `localeCode`"
                    }
                  },
                  "description": "Family variant labels for each locale",
                  "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                }
              },
              "example": {
                "code": "shoesVariant",
                "labels": {
                  "en_US": "Shoes variant",
                  "fr_FR": "Variante de chaussures"
                },
                "variant_attribute_sets": [
                  {
                    "level": 1,
                    "attributes": [
                      "color",
                      "material"
                    ],
                    "axes": [
                      "color"
                    ]
                  },
                  {
                    "level": 2,
                    "attributes": [
                      "sku",
                      "size"
                    ],
                    "axes": [
                      "size"
                    ]
                  }
                ]
              }
            }
          ]
        },
        "Attribute": {
          "required": [
            "code",
            "group",
            "type"
          ],
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "Attribute code",
              "x-immutable": true
            },
            "type": {
              "type": "string",
              "description": "Attribute type. See <a href='/concepts/catalog-structure.html#attribute'>type</a> section for more details.",
              "enum": [
                "pim_catalog_identifier",
                "pim_catalog_metric",
                "pim_catalog_number",
                "pim_catalog_reference_data_multi_select",
                "pim_catalog_reference_data_simple_select",
                "pim_catalog_simpleselect",
                "pim_catalog_multiselect",
                "pim_catalog_date",
                "pim_catalog_textarea",
                "pim_catalog_text",
                "pim_catalog_file",
                "pim_catalog_image",
                "pim_catalog_price_collection",
                "pim_catalog_boolean",
                "akeneo_reference_entity",
                "akeneo_reference_entity_collection",
                "pim_catalog_asset_collection"
              ],
              "x-validation-rules": "The type is one of the following values",
              "x-immutable": true
            },
            "labels": {
              "type": "object",
              "properties": {
                "localeCode": {
                  "type": "string",
                  "description": "Attribute label for the locale `localeCode`"
                }
              },
              "description": "Attribute labels for each locale",
              "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
            },
            "group": {
              "type": "string",
              "description": "Attribute group",
              "x-validation-rules": "It is the code of an existing group"
            },
            "group_labels": {
              "type": "object",
              "properties": {
                "localeCode": {
                  "type": "string",
                  "description": "Group label for the locale `localeCode`"
                }
              },
              "description": "Group labels for each locale",
              "x-validation-rules": "The `localeCode` is the code of an existing and activated locale",
              "x-read-only": true
            },
            "sort_order": {
              "type": "integer",
              "description": "Order of the attribute in its group",
              "x-validation-rules": "It is a positive integer"
            },
            "localizable": {
              "type": "boolean",
              "description": "Whether the attribute is localizable, i.e. can have one value by locale",
              "default": false,
              "x-immutable": true
            },
            "scopable": {
              "type": "boolean",
              "description": "Whether the attribute is scopable, i.e. can have one value by channel",
              "default": false,
              "x-immutable": true
            },
            "available_locales": {
              "type": "array",
              "description": "To make the attribute locale specfic, specify here for which locales it is specific",
              "items": {
                "type": "string"
              },
              "x-validation-rules": "Each string of the array is an existing and activated locale"
            },
            "unique": {
              "type": "boolean",
              "description": "Whether two values for the attribute cannot be the same",
              "x-immutable": true
            },
            "useable_as_grid_filter": {
              "type": "boolean",
              "description": "Whether the attribute can be used as a filter for the product grid in the PIM user interface"
            },
            "max_characters": {
              "type": "integer",
              "description": "Number maximum of characters allowed for the value of the attribute when the attribute type is `pim_catalog_text`, `pim_catalog_textarea` or `pim_catalog_identifier`",
              "x-warning": "Only for `pim_catalog_text`, `pim_catalog_textarea` or `pim_catalog_identifier` attribute types"
            },
            "validation_rule": {
              "type": "string",
              "description": "Validation rule type used to validate any attribute value when the attribute type is `pim_catalog_text` or `pim_catalog_identifier`",
              "x-validation-rules": "Equal to `regexp` when the attribute type is equal to `pim_catalog_identifier`",
              "x-warning": "Only for `pim_catalog_text` or `pim_catalog_identifier` attribute types"
            },
            "validation_regexp": {
              "type": "string",
              "description": "Regexp expression used to validate any attribute value when the attribute type is `pim_catalog_text` or `pim_catalog_identifier`",
              "x-validation-rules": "Required when the property `validation_rule` is equal to `regexp`",
              "x-warning": "Only for `pim_catalog_text` or `pim_catalog_identifier` attribute types"
            },
            "wysiwyg_enabled": {
              "type": "boolean",
              "description": "Whether the WYSIWYG interface is shown when the attribute type is `pim_catalog_textarea`",
              "x-warning": "Only for `pim_catalog_textarea` attribute type"
            },
            "number_min": {
              "type": "string",
              "description": "Minimum integer value allowed when the attribute type is `pim_catalog_metric`, `pim_catalog_price` or `pim_catalog_number`",
              "x-warning": "Only for `pim_catalog_metric`, `pim_catalog_price_collection` or `pim_catalog_number` attribute types"
            },
            "number_max": {
              "type": "string",
              "description": "Maximum integer value allowed when the attribute type is `pim_catalog_metric`, `pim_catalog_price` or `pim_catalog_number`",
              "x-warning": "Only for `pim_catalog_metric`, `pim_catalog_price_collection` or `pim_catalog_number` attribute types"
            },
            "decimals_allowed": {
              "type": "boolean",
              "description": "Whether decimals are allowed when the attribute type is `pim_catalog_metric`, `pim_catalog_price` or `pim_catalog_number`",
              "x-warning": "Only for `pim_catalog_metric`, `pim_catalog_price_collection` or `pim_catalog_number` attribute types"
            },
            "negative_allowed": {
              "type": "boolean",
              "description": "Whether negative values are allowed when the attribute type is `pim_catalog_metric` or `pim_catalog_number`",
              "x-warning": "Only for `pim_catalog_metric` or `pim_catalog_number` attribute types"
            },
            "metric_family": {
              "type": "string",
              "description": "Metric family when the attribute type is `pim_catalog_metric`",
              "x-validation-rules": "Required for `pim_catalog_metric` attribute type",
              "x-immutable": true,
              "x-warning": "Only for `pim_catalog_metric` attribute type"
            },
            "default_metric_unit": {
              "type": "string",
              "description": "Default metric unit when the attribute type is `pim_catalog_metric`",
              "x-validation-rules": "Required for `pim_catalog_metric` attribute type",
              "x-warning": "Only for `pim_catalog_metric` attribute type"
            },
            "date_min": {
              "type": "string",
              "description": "Minimum date allowed when the attribute type is `pim_catalog_date`",
              "format": "date-time",
              "x-validation-rules": "The datetime format follows the ISO-8601 norm",
              "x-warning": "Only for `pim_catalog_date` attribute type"
            },
            "date_max": {
              "type": "string",
              "description": "Maximum date allowed when the attribute type is `pim_catalog_date`",
              "format": "date-time",
              "x-validation-rules": "The datetime format follows the ISO-8601 norm",
              "x-warning": "Only for `pim_catalog_date` attribute type"
            },
            "allowed_extensions": {
              "type": "array",
              "description": "Extensions allowed when the attribute type is `pim_catalog_file` or `pim_catalog_image`",
              "items": {
                "type": "string"
              },
              "x-warning": "Only for `pim_catalog_file` or `pim_catalog_image` attribute types"
            },
            "max_file_size": {
              "type": "string",
              "description": "Max file size in MB when the attribute type is `pim_catalog_file` or `pim_catalog_image`",
              "x-warning": "Only for `pim_catalog_file` or `pim_catalog_image` attribute types"
            },
            "reference_data_name": {
              "type": "string",
              "description": "Reference entity code when the attribute type is `akeneo_reference_entity` or `akeneo_reference_entity_collection` OR Asset family code when the attribute type is `pim_catalog_asset_collection`",
              "x-validation-rules": "Required only for `akeneo_reference_entity` or `akeneo_reference_entity_collection` or `pim_catalog_asset_collection` attribute types",
              "x-warning": "Only for `akeneo_reference_entity` or `akeneo_reference_entity_collection` or `pim_catalog_asset_collection` attribute types"
            },
            "default_value": {
              "type": "boolean",
              "description": "Default value for a Yes/No attribute, applied when creating a new product or product model (only available since the 5.0)",
              "x-warning": "Only for `pim_catalog_boolean` attribute type",
              "x-from-version": "5.0"
            },
            "table_configuration": {
              "type": "array",
              "description": "Configuration of the Table attribute (columns)",
              "items": {
                "required": [
                  "code",
                  "data_type"
                ],
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "description": "Column code"
                  },
                  "data_type": {
                    "type": "string",
                    "description": "Column data type",
                    "enum": [
                      "select",
                      "text",
                      "number",
                      "boolean"
                    ]
                  },
                  "validations": {
                    "type": "object",
                    "properties": {
                      "min": {
                        "type": "number",
                        "description": "minimum value of a numeric cell",
                        "x-validation-rules": "only for `number` data type columns"
                      },
                      "max": {
                        "type": "number",
                        "description": "maximum value of a numeric cell",
                        "x-validation-rules": "only for `number` data type columns"
                      },
                      "decimals_allowed": {
                        "type": "boolean",
                        "description": "whether the value of a numeric cell can hold a decimal part",
                        "x-validation-rules": "only for `number` data type columns"
                      },
                      "max_length": {
                        "type": "number",
                        "description": "maximum length of a text cell",
                        "x-validation-rules": "only for `text` data type columns"
                      }
                    },
                    "description": "User defined validation constraints on the cell content"
                  },
                  "labels": {
                    "type": "object",
                    "properties": {
                      "localeCode": {
                        "type": "string",
                        "description": "Column label for the locale `localeCode`"
                      }
                    },
                    "description": "Column labels for each locale",
                    "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                  },
                  "is_required_for_completeness": {
                    "type": "boolean",
                    "description": "Defines if the column should be entirely filled for the attribute to be considered complete",
                    "default": false,
                    "x-warning": "This value is always true for the first column in a table configuration"
                  }
                }
              },
              "x-validation-rules": "Required only for `pim_catalog_table` attribute type",
              "x-warning": "Only for `pim_catalog_table` attribute type"
            }
          },
          "example": {
            "code": "release_date",
            "type": "pim_catalog_date",
            "group": "marketing",
            "group_labels": {
              "en_US": "Marketing",
              "fr_FR": "Marketing"
            },
            "unique": false,
            "useable_as_grid_filter": true,
            "allowed_extensions": [],
            "available_locales": [],
            "date_min": "2017-06-28T08:00:00",
            "date_max": "2017-08-08T22:00:00",
            "sort_order": 1,
            "localizable": false,
            "scopable": false,
            "labels": {
              "en_US": "Sale date",
              "fr_FR": "Date des soldes"
            }
          }
        },
        "AttributeList": {
          "allOf": [
            {
              "type": "object",
              "properties": {
                "_links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "object",
                      "properties": {
                        "href": {
                          "type": "string",
                          "description": "URI of the resource"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "required": [
                "code",
                "group",
                "type"
              ],
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "Attribute code",
                  "x-immutable": true
                },
                "type": {
                  "type": "string",
                  "description": "Attribute type. See <a href='/concepts/catalog-structure.html#attribute'>type</a> section for more details.",
                  "enum": [
                    "pim_catalog_identifier",
                    "pim_catalog_metric",
                    "pim_catalog_number",
                    "pim_catalog_reference_data_multi_select",
                    "pim_catalog_reference_data_simple_select",
                    "pim_catalog_simpleselect",
                    "pim_catalog_multiselect",
                    "pim_catalog_date",
                    "pim_catalog_textarea",
                    "pim_catalog_text",
                    "pim_catalog_file",
                    "pim_catalog_image",
                    "pim_catalog_price_collection",
                    "pim_catalog_boolean",
                    "akeneo_reference_entity",
                    "akeneo_reference_entity_collection",
                    "pim_catalog_asset_collection"
                  ],
                  "x-validation-rules": "The type is one of the following values",
                  "x-immutable": true
                },
                "labels": {
                  "type": "object",
                  "properties": {
                    "localeCode": {
                      "type": "string",
                      "description": "Attribute label for the locale `localeCode`"
                    }
                  },
                  "description": "Attribute labels for each locale",
                  "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                },
                "group": {
                  "type": "string",
                  "description": "Attribute group",
                  "x-validation-rules": "It is the code of an existing group"
                },
                "group_labels": {
                  "type": "object",
                  "properties": {
                    "localeCode": {
                      "type": "string",
                      "description": "Group label for the locale `localeCode`"
                    }
                  },
                  "description": "Group labels for each locale",
                  "x-validation-rules": "The `localeCode` is the code of an existing and activated locale",
                  "x-read-only": true
                },
                "sort_order": {
                  "type": "integer",
                  "description": "Order of the attribute in its group",
                  "x-validation-rules": "It is a positive integer"
                },
                "localizable": {
                  "type": "boolean",
                  "description": "Whether the attribute is localizable, i.e. can have one value by locale",
                  "default": false,
                  "x-immutable": true
                },
                "scopable": {
                  "type": "boolean",
                  "description": "Whether the attribute is scopable, i.e. can have one value by channel",
                  "default": false,
                  "x-immutable": true
                },
                "available_locales": {
                  "type": "array",
                  "description": "To make the attribute locale specfic, specify here for which locales it is specific",
                  "items": {
                    "type": "string"
                  },
                  "x-validation-rules": "Each string of the array is an existing and activated locale"
                },
                "unique": {
                  "type": "boolean",
                  "description": "Whether two values for the attribute cannot be the same",
                  "x-immutable": true
                },
                "useable_as_grid_filter": {
                  "type": "boolean",
                  "description": "Whether the attribute can be used as a filter for the product grid in the PIM user interface"
                },
                "max_characters": {
                  "type": "integer",
                  "description": "Number maximum of characters allowed for the value of the attribute when the attribute type is `pim_catalog_text`, `pim_catalog_textarea` or `pim_catalog_identifier`",
                  "x-warning": "Only for `pim_catalog_text`, `pim_catalog_textarea` or `pim_catalog_identifier` attribute types"
                },
                "validation_rule": {
                  "type": "string",
                  "description": "Validation rule type used to validate any attribute value when the attribute type is `pim_catalog_text` or `pim_catalog_identifier`",
                  "x-validation-rules": "Equal to `regexp` when the attribute type is equal to `pim_catalog_identifier`",
                  "x-warning": "Only for `pim_catalog_text` or `pim_catalog_identifier` attribute types"
                },
                "validation_regexp": {
                  "type": "string",
                  "description": "Regexp expression used to validate any attribute value when the attribute type is `pim_catalog_text` or `pim_catalog_identifier`",
                  "x-validation-rules": "Required when the property `validation_rule` is equal to `regexp`",
                  "x-warning": "Only for `pim_catalog_text` or `pim_catalog_identifier` attribute types"
                },
                "wysiwyg_enabled": {
                  "type": "boolean",
                  "description": "Whether the WYSIWYG interface is shown when the attribute type is `pim_catalog_textarea`",
                  "x-warning": "Only for `pim_catalog_textarea` attribute type"
                },
                "number_min": {
                  "type": "string",
                  "description": "Minimum integer value allowed when the attribute type is `pim_catalog_metric`, `pim_catalog_price` or `pim_catalog_number`",
                  "x-warning": "Only for `pim_catalog_metric`, `pim_catalog_price_collection` or `pim_catalog_number` attribute types"
                },
                "number_max": {
                  "type": "string",
                  "description": "Maximum integer value allowed when the attribute type is `pim_catalog_metric`, `pim_catalog_price` or `pim_catalog_number`",
                  "x-warning": "Only for `pim_catalog_metric`, `pim_catalog_price_collection` or `pim_catalog_number` attribute types"
                },
                "decimals_allowed": {
                  "type": "boolean",
                  "description": "Whether decimals are allowed when the attribute type is `pim_catalog_metric`, `pim_catalog_price` or `pim_catalog_number`",
                  "x-warning": "Only for `pim_catalog_metric`, `pim_catalog_price_collection` or `pim_catalog_number` attribute types"
                },
                "negative_allowed": {
                  "type": "boolean",
                  "description": "Whether negative values are allowed when the attribute type is `pim_catalog_metric` or `pim_catalog_number`",
                  "x-warning": "Only for `pim_catalog_metric` or `pim_catalog_number` attribute types"
                },
                "metric_family": {
                  "type": "string",
                  "description": "Metric family when the attribute type is `pim_catalog_metric`",
                  "x-validation-rules": "Required for `pim_catalog_metric` attribute type",
                  "x-immutable": true,
                  "x-warning": "Only for `pim_catalog_metric` attribute type"
                },
                "default_metric_unit": {
                  "type": "string",
                  "description": "Default metric unit when the attribute type is `pim_catalog_metric`",
                  "x-validation-rules": "Required for `pim_catalog_metric` attribute type",
                  "x-warning": "Only for `pim_catalog_metric` attribute type"
                },
                "date_min": {
                  "type": "string",
                  "description": "Minimum date allowed when the attribute type is `pim_catalog_date`",
                  "format": "date-time",
                  "x-validation-rules": "The datetime format follows the ISO-8601 norm",
                  "x-warning": "Only for `pim_catalog_date` attribute type"
                },
                "date_max": {
                  "type": "string",
                  "description": "Maximum date allowed when the attribute type is `pim_catalog_date`",
                  "format": "date-time",
                  "x-validation-rules": "The datetime format follows the ISO-8601 norm",
                  "x-warning": "Only for `pim_catalog_date` attribute type"
                },
                "allowed_extensions": {
                  "type": "array",
                  "description": "Extensions allowed when the attribute type is `pim_catalog_file` or `pim_catalog_image`",
                  "items": {
                    "type": "string"
                  },
                  "x-warning": "Only for `pim_catalog_file` or `pim_catalog_image` attribute types"
                },
                "max_file_size": {
                  "type": "string",
                  "description": "Max file size in MB when the attribute type is `pim_catalog_file` or `pim_catalog_image`",
                  "x-warning": "Only for `pim_catalog_file` or `pim_catalog_image` attribute types"
                },
                "reference_data_name": {
                  "type": "string",
                  "description": "Reference entity code when the attribute type is `akeneo_reference_entity` or `akeneo_reference_entity_collection` OR Asset family code when the attribute type is `pim_catalog_asset_collection`",
                  "x-validation-rules": "Required only for `akeneo_reference_entity` or `akeneo_reference_entity_collection` or `pim_catalog_asset_collection` attribute types",
                  "x-warning": "Only for `akeneo_reference_entity` or `akeneo_reference_entity_collection` or `pim_catalog_asset_collection` attribute types"
                },
                "default_value": {
                  "type": "boolean",
                  "description": "Default value for a Yes/No attribute, applied when creating a new product or product model (only available since the 5.0)",
                  "x-warning": "Only for `pim_catalog_boolean` attribute type",
                  "x-from-version": "5.0"
                },
                "table_configuration": {
                  "type": "array",
                  "description": "Configuration of the Table attribute (columns)",
                  "items": {
                    "required": [
                      "code",
                      "data_type"
                    ],
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Column code"
                      },
                      "data_type": {
                        "type": "string",
                        "description": "Column data type",
                        "enum": [
                          "select",
                          "text",
                          "number",
                          "boolean"
                        ]
                      },
                      "validations": {
                        "type": "object",
                        "properties": {
                          "min": {
                            "type": "number",
                            "description": "minimum value of a numeric cell",
                            "x-validation-rules": "only for `number` data type columns"
                          },
                          "max": {
                            "type": "number",
                            "description": "maximum value of a numeric cell",
                            "x-validation-rules": "only for `number` data type columns"
                          },
                          "decimals_allowed": {
                            "type": "boolean",
                            "description": "whether the value of a numeric cell can hold a decimal part",
                            "x-validation-rules": "only for `number` data type columns"
                          },
                          "max_length": {
                            "type": "number",
                            "description": "maximum length of a text cell",
                            "x-validation-rules": "only for `text` data type columns"
                          }
                        },
                        "description": "User defined validation constraints on the cell content"
                      },
                      "labels": {
                        "type": "object",
                        "properties": {
                          "localeCode": {
                            "type": "string",
                            "description": "Column label for the locale `localeCode`"
                          }
                        },
                        "description": "Column labels for each locale",
                        "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                      },
                      "is_required_for_completeness": {
                        "type": "boolean",
                        "description": "Defines if the column should be entirely filled for the attribute to be considered complete",
                        "default": false,
                        "x-warning": "This value is always true for the first column in a table configuration"
                      }
                    }
                  },
                  "x-validation-rules": "Required only for `pim_catalog_table` attribute type",
                  "x-warning": "Only for `pim_catalog_table` attribute type"
                }
              },
              "example": {
                "code": "release_date",
                "type": "pim_catalog_date",
                "group": "marketing",
                "group_labels": {
                  "en_US": "Marketing",
                  "fr_FR": "Marketing"
                },
                "unique": false,
                "useable_as_grid_filter": true,
                "allowed_extensions": [],
                "available_locales": [],
                "date_min": "2017-06-28T08:00:00",
                "date_max": "2017-08-08T22:00:00",
                "sort_order": 1,
                "localizable": false,
                "scopable": false,
                "labels": {
                  "en_US": "Sale date",
                  "fr_FR": "Date des soldes"
                }
              }
            }
          ]
        },
        "AttributeOption": {
          "required": [
            "code"
          ],
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "Code of option"
            },
            "attribute": {
              "type": "string",
              "description": "Code of attribute related to the attribute option",
              "x-validation-rules": "It is the same attribute code as the one given as path parameter"
            },
            "sort_order": {
              "type": "integer",
              "description": "Order of attribute option",
              "x-validation-rules": "It is a positive integer"
            },
            "labels": {
              "type": "object",
              "properties": {
                "localeCode": {
                  "type": "string",
                  "description": "Attribute option label for the locale `localeCode`"
                }
              },
              "description": "Attribute option labels for each locale",
              "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
            }
          },
          "example": {
            "code": "black",
            "attribute": "a_simple_select",
            "sort_order": 2,
            "labels": {
              "en_US": "Black",
              "fr_FR": "Noir"
            }
          }
        },
        "AttributeOptionList": {
          "allOf": [
            {
              "type": "object",
              "properties": {
                "_links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "object",
                      "properties": {
                        "href": {
                          "type": "string",
                          "description": "URI of the resource"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "required": [
                "code"
              ],
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "Code of option"
                },
                "attribute": {
                  "type": "string",
                  "description": "Code of attribute related to the attribute option",
                  "x-validation-rules": "It is the same attribute code as the one given as path parameter"
                },
                "sort_order": {
                  "type": "integer",
                  "description": "Order of attribute option",
                  "x-validation-rules": "It is a positive integer"
                },
                "labels": {
                  "type": "object",
                  "properties": {
                    "localeCode": {
                      "type": "string",
                      "description": "Attribute option label for the locale `localeCode`"
                    }
                  },
                  "description": "Attribute option labels for each locale",
                  "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                }
              },
              "example": {
                "code": "black",
                "attribute": "a_simple_select",
                "sort_order": 2,
                "labels": {
                  "en_US": "Black",
                  "fr_FR": "Noir"
                }
              }
            }
          ]
        },
        "AttributeGroup": {
          "required": [
            "code"
          ],
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "Attribute group code",
              "x-immutable": true
            },
            "sort_order": {
              "type": "integer",
              "description": "Attribute group order among other attribute groups",
              "x-validation-rules": "It is a positive integer"
            },
            "attributes": {
              "type": "array",
              "description": "Attribute codes that compose the attribute group",
              "items": {
                "type": "string"
              },
              "x-validation-rules": "Each string of the array is an existing attribute code, an attribute can only be in one attribute group"
            },
            "labels": {
              "type": "object",
              "properties": {
                "localeCode": {
                  "type": "string",
                  "description": "Attribute group label for the locale `localeCode`"
                }
              },
              "description": "Attribute group labels for each locale",
              "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
            }
          },
          "example": {
            "code": "marketing",
            "sort_order": 4,
            "attributes": [
              "sku",
              "name",
              "description",
              "response_time",
              "release_date",
              "price"
            ],
            "labels": {
              "en_US": "Marketing",
              "fr_FR": "Marketing"
            }
          }
        },
        "AttributeGroupList": {
          "allOf": [
            {
              "type": "object",
              "properties": {
                "_links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "object",
                      "properties": {
                        "href": {
                          "type": "string",
                          "description": "URI of the resource"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "required": [
                "code"
              ],
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "Attribute group code",
                  "x-immutable": true
                },
                "sort_order": {
                  "type": "integer",
                  "description": "Attribute group order among other attribute groups",
                  "x-validation-rules": "It is a positive integer"
                },
                "attributes": {
                  "type": "array",
                  "description": "Attribute codes that compose the attribute group",
                  "items": {
                    "type": "string"
                  },
                  "x-validation-rules": "Each string of the array is an existing attribute code, an attribute can only be in one attribute group"
                },
                "labels": {
                  "type": "object",
                  "properties": {
                    "localeCode": {
                      "type": "string",
                      "description": "Attribute group label for the locale `localeCode`"
                    }
                  },
                  "description": "Attribute group labels for each locale",
                  "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                }
              },
              "example": {
                "code": "marketing",
                "sort_order": 4,
                "attributes": [
                  "sku",
                  "name",
                  "description",
                  "response_time",
                  "release_date",
                  "price"
                ],
                "labels": {
                  "en_US": "Marketing",
                  "fr_FR": "Marketing"
                }
              }
            }
          ]
        },
        "MediaFile": {
          "allOf": [
            {
              "type": "object",
              "properties": {
                "_links": {
                  "type": "object",
                  "properties": {
                    "download": {
                      "type": "object",
                      "properties": {
                        "href": {
                          "type": "string",
                          "description": "URI to download the binaries of the media file"
                        }
                      }
                    }
                  },
                  "x-read-only": true
                }
              }
            },
            {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "Media file code",
                  "x-immutable": true
                },
                "original_filename": {
                  "type": "string",
                  "description": "Original filename of the media file"
                },
                "mime_type": {
                  "type": "string",
                  "description": "Mime type of the media file",
                  "x-read-only": true
                },
                "size": {
                  "type": "integer",
                  "description": "Size of the media file",
                  "x-read-only": true
                },
                "extension": {
                  "type": "string",
                  "description": "Extension of the media file",
                  "x-read-only": true
                }
              },
              "example": {
                "code": "7/5/8/e/758e39d48ea7b42a55091434fd3d8b6cf3189b7f_10806799_1356.jpg",
                "original_filename": "10806799-1356.jpg",
                "mime_type": "image/jpeg",
                "size": 16070,
                "extension": "jpg"
              }
            }
          ]
        },
        "MediaFileList": {
          "allOf": [
            {
              "type": "object",
              "properties": {
                "_links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "object",
                      "properties": {
                        "href": {
                          "type": "string",
                          "description": "URI to get the metadata of the media file"
                        }
                      }
                    },
                    "download": {
                      "type": "object",
                      "properties": {
                        "href": {
                          "type": "string",
                          "description": "URI to download the binaries of the media file"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "Media file code",
                  "x-immutable": true
                },
                "original_filename": {
                  "type": "string",
                  "description": "Original filename of the media file"
                },
                "mime_type": {
                  "type": "string",
                  "description": "Mime type of the media file",
                  "x-read-only": true
                },
                "size": {
                  "type": "integer",
                  "description": "Size of the media file",
                  "x-read-only": true
                },
                "extension": {
                  "type": "string",
                  "description": "Extension of the media file",
                  "x-read-only": true
                }
              },
              "example": {
                "code": "7/5/8/e/758e39d48ea7b42a55091434fd3d8b6cf3189b7f_10806799_1356.jpg",
                "original_filename": "10806799-1356.jpg",
                "mime_type": "image/jpeg",
                "size": 16070,
                "extension": "jpg"
              }
            }
          ]
        },
        "Locale": {
          "required": [
            "code"
          ],
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "Locale code",
              "x-immutable": true
            },
            "enabled": {
              "type": "boolean",
              "description": "Whether the locale is enabled",
              "default": false
            }
          },
          "example": {
            "code": "en_US",
            "enable": true
          }
        },
        "LocaleList": {
          "allOf": [
            {
              "type": "object",
              "properties": {
                "_links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "object",
                      "properties": {
                        "href": {
                          "type": "string",
                          "description": "URI of the resource"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "required": [
                "code"
              ],
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "Locale code",
                  "x-immutable": true
                },
                "enabled": {
                  "type": "boolean",
                  "description": "Whether the locale is enabled",
                  "default": false
                }
              },
              "example": {
                "code": "en_US",
                "enable": true
              }
            }
          ]
        },
        "Channel": {
          "required": [
            "category_tree",
            "code",
            "currencies",
            "locales"
          ],
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "Channel code",
              "x-immutable": true
            },
            "locales": {
              "type": "array",
              "description": "Codes of activated locales for the channel",
              "items": {
                "type": "string"
              },
              "x-validation-rules": "&bull; Each string of the array is an existing locale code &#10;&bull; At least one locale in the array"
            },
            "currencies": {
              "type": "array",
              "description": "Codes of activated currencies for the channel",
              "items": {
                "type": "string"
              },
              "x-validation-rules": "&bull; Each string of the array is an existing currency code &#10;&bull; At least one currency in the array"
            },
            "category_tree": {
              "type": "string",
              "description": "Code of the category tree linked to the channel",
              "x-validation-rules": "It is the code of an existing category code that is a tree (a category without parent)"
            },
            "conversion_units": {
              "type": "object",
              "properties": {
                "attributeCode": {
                  "type": "string",
                  "description": "Conversion unit code used to convert the values of the attribute `attributeCode` when exporting via the channel"
                }
              },
              "description": "Units to which the given metric attributes should be converted when exporting products",
              "x-validation-rules": "&bull; The `attributeCode` is the code of an existing attribute whose type is `pim_catalog_metric` &#10;&bull; The strings are existing unit codes."
            },
            "labels": {
              "type": "object",
              "properties": {
                "localeCode": {
                  "type": "string",
                  "description": "Channel label for the locale `localeCode`"
                }
              },
              "description": "Channel labels for each locale",
              "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
            }
          },
          "example": {
            "code": "ecommerce",
            "currencies": [
              "USD",
              "EUR"
            ],
            "locales": [
              "de_DE",
              "en_US",
              "fr_FR"
            ],
            "category_tree": "master",
            "conversion_units": {
              "weight": "KILOGRAM"
            },
            "labels": {
              "en_US": "Ecommerce",
              "de_DE": "Ecommerce",
              "fr_FR": "Ecommerce"
            }
          }
        },
        "ChannelList": {
          "allOf": [
            {
              "type": "object",
              "properties": {
                "_links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "object",
                      "properties": {
                        "href": {
                          "type": "string",
                          "description": "URI of the resource"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "required": [
                "category_tree",
                "code",
                "currencies",
                "locales"
              ],
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "Channel code",
                  "x-immutable": true
                },
                "locales": {
                  "type": "array",
                  "description": "Codes of activated locales for the channel",
                  "items": {
                    "type": "string"
                  },
                  "x-validation-rules": "&bull; Each string of the array is an existing locale code &#10;&bull; At least one locale in the array"
                },
                "currencies": {
                  "type": "array",
                  "description": "Codes of activated currencies for the channel",
                  "items": {
                    "type": "string"
                  },
                  "x-validation-rules": "&bull; Each string of the array is an existing currency code &#10;&bull; At least one currency in the array"
                },
                "category_tree": {
                  "type": "string",
                  "description": "Code of the category tree linked to the channel",
                  "x-validation-rules": "It is the code of an existing category code that is a tree (a category without parent)"
                },
                "conversion_units": {
                  "type": "object",
                  "properties": {
                    "attributeCode": {
                      "type": "string",
                      "description": "Conversion unit code used to convert the values of the attribute `attributeCode` when exporting via the channel"
                    }
                  },
                  "description": "Units to which the given metric attributes should be converted when exporting products",
                  "x-validation-rules": "&bull; The `attributeCode` is the code of an existing attribute whose type is `pim_catalog_metric` &#10;&bull; The strings are existing unit codes."
                },
                "labels": {
                  "type": "object",
                  "properties": {
                    "localeCode": {
                      "type": "string",
                      "description": "Channel label for the locale `localeCode`"
                    }
                  },
                  "description": "Channel labels for each locale",
                  "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                }
              },
              "example": {
                "code": "ecommerce",
                "currencies": [
                  "USD",
                  "EUR"
                ],
                "locales": [
                  "de_DE",
                  "en_US",
                  "fr_FR"
                ],
                "category_tree": "master",
                "conversion_units": {
                  "weight": "KILOGRAM"
                },
                "labels": {
                  "en_US": "Ecommerce",
                  "de_DE": "Ecommerce",
                  "fr_FR": "Ecommerce"
                }
              }
            }
          ]
        },
        "AssociationType": {
          "required": [
            "code"
          ],
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "Association type code",
              "x-immutable": true
            },
            "labels": {
              "type": "object",
              "properties": {
                "localeCode": {
                  "type": "string",
                  "description": "Association type label for the locale `localeCode`"
                }
              },
              "description": "Association type labels for each locale",
              "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
            },
            "is_quantified": {
              "type": "boolean",
              "description": "When true, the association is a quantified association (Only available in the PIM Serenity version.)",
              "default": false,
              "x-immutable": true
            },
            "is_two_way": {
              "type": "boolean",
              "description": "When true, the association is a two-way association (Only available in the PIM Serenity version.)",
              "default": false,
              "x-immutable": true
            }
          },
          "example": {
            "code": "upsell",
            "labels": {
              "en_US": "Upsell",
              "fr_FR": "Vente incitative"
            },
            "is_quantified": false,
            "is_two_way": false
          }
        },
        "AssociationTypeList": {
          "allOf": [
            {
              "type": "object",
              "properties": {
                "_links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "object",
                      "properties": {
                        "href": {
                          "type": "string",
                          "description": "URI of the resource"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "required": [
                "code"
              ],
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "Association type code",
                  "x-immutable": true
                },
                "labels": {
                  "type": "object",
                  "properties": {
                    "localeCode": {
                      "type": "string",
                      "description": "Association type label for the locale `localeCode`"
                    }
                  },
                  "description": "Association type labels for each locale",
                  "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                },
                "is_quantified": {
                  "type": "boolean",
                  "description": "When true, the association is a quantified association (Only available in the PIM Serenity version.)",
                  "default": false,
                  "x-immutable": true
                },
                "is_two_way": {
                  "type": "boolean",
                  "description": "When true, the association is a two-way association (Only available in the PIM Serenity version.)",
                  "default": false,
                  "x-immutable": true
                }
              },
              "example": {
                "code": "upsell",
                "labels": {
                  "en_US": "Upsell",
                  "fr_FR": "Vente incitative"
                },
                "is_quantified": false,
                "is_two_way": false
              }
            }
          ]
        },
        "Currency": {
          "required": [
            "code"
          ],
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "Currency code",
              "x-immutable": true
            },
            "enabled": {
              "type": "boolean",
              "description": "Whether the currency is enabled"
            }
          },
          "example": {
            "code": "EUR",
            "enabled": true
          }
        },
        "CurrencyList": {
          "allOf": [
            {
              "type": "object",
              "properties": {
                "_links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "object",
                      "properties": {
                        "href": {
                          "type": "string",
                          "description": "URI of the resource"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "required": [
                "code"
              ],
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "Currency code",
                  "x-immutable": true
                },
                "enabled": {
                  "type": "boolean",
                  "description": "Whether the currency is enabled"
                }
              },
              "example": {
                "code": "EUR",
                "enabled": true
              }
            }
          ]
        },
        "AssetFamilyList": {
          "allOf": [
            {
              "type": "object",
              "properties": {
                "_links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "object",
                      "properties": {
                        "href": {
                          "type": "string",
                          "description": "URI of the resource"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "required": [
                "code"
              ],
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "Asset family code",
                  "x-immutable": true
                },
                "labels": {
                  "type": "object",
                  "properties": {
                    "localeCode": {
                      "type": "string",
                      "description": "Asset family label for the locale `localeCode`"
                    }
                  },
                  "description": "Asset family labels for each locale",
                  "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                },
                "attribute_as_main_media": {
                  "type": "string",
                  "description": "Attribute code that is used as the main media of the asset family.",
                  "default": "First media file or media link attribute that was created",
                  "x-validation-rules": "It should be the code of an attribute that belongs to this family, and it must be a media file or a media link attribute type."
                },
                "naming_convention": {
                  "type": "object",
                  "properties": {
                    "source": {
                      "type": "object",
                      "properties": {},
                      "description": "The string on which the naming convention should be applied. More details <a href='/concepts/asset-manager.html#source'>here</a>."
                    },
                    "pattern": {
                      "type": "string",
                      "description": "The regular expression that should be applied on the source. More details <a href='/concepts/asset-manager.html#pattern'>here</a>."
                    },
                    "abort_asset_creation_on_error": {
                      "type": "boolean",
                      "description": "Whether the asset should be created if the naming convention failed to apply. More details <a href='/concepts/asset-manager.html#abort-asset-creation-on-error'>here</a>."
                    }
                  },
                  "description": "The naming convention ran over the asset code or the main media filename upon each asset creation, in order to automatically set several values in asset attributes. To learn more and see the format of this property, take a look at <a href='/concepts/asset-manager.html#focus-on-the-naming-convention'>here</a>.",
                  "x-validation-rules": "To know more about the validation of this property, take a look at our naming convention format."
                },
                "product_link_rules": {
                  "type": "array",
                  "description": "The rules that will be run after the asset creation, in order to automatically link the assets of this family to a set of products. To understand the format of this property, see <a href='/concepts/asset-manager.html#focus-on-the-product-link-rule'>here</a>.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "product_selections": {
                        "type": "array",
                        "description": "The product selection to which the assets of the asset family to be automatically linked. More details <a href='/concepts/asset-manager.html#product-selection'>here</a>.",
                        "items": {
                          "required": [
                            "field",
                            "operator",
                            "value"
                          ],
                          "type": "object",
                          "properties": {
                            "field": {
                              "type": "string"
                            },
                            "operator": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            },
                            "locale": {
                              "type": "string"
                            },
                            "channel": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "assign_assets_to": {
                        "type": "array",
                        "description": "The product value in which your assets will be assigned. More details <a href='/concepts/asset-manager.html#product-value-assignment'>here</a>.",
                        "items": {
                          "required": [
                            "attribute",
                            "mode"
                          ],
                          "type": "object",
                          "properties": {
                            "attribute": {
                              "type": "string"
                            },
                            "locale": {
                              "type": "string"
                            },
                            "channel": {
                              "type": "string"
                            },
                            "mode": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-validation-rules": "To know more about the validation of this property, take a look at our product link rule format."
                },
                "transformations": {
                  "type": "array",
                  "description": "The transformations to perform on source files in order to generate new files into your asset attributes (only available since v4.0). To understand the format of this property, see <a href='/concepts/asset-manager.html#focus-on-the-transformations'>here</a>.",
                  "items": {
                    "required": [
                      "label",
                      "operations",
                      "source",
                      "target"
                    ],
                    "type": "object",
                    "properties": {
                      "label": {
                        "type": "string",
                        "description": "The name of the transformation"
                      },
                      "filename_suffix": {
                        "type": "string",
                        "description": "The suffix that will be appended to the source filename to generate the target filename. More details <a href='/concepts/asset-manager.html#target-filename'>here</a>."
                      },
                      "filename_prefix": {
                        "type": "string",
                        "description": "The prefix that will be prepended to the source filename to generate the target filename. More details <a href='/concepts/asset-manager.html#target-filename'>here</a>."
                      },
                      "source": {
                        "required": [
                          "attribute",
                          "channel",
                          "locale"
                        ],
                        "type": "object",
                        "properties": {
                          "attribute": {
                            "type": "string"
                          },
                          "channel": {
                            "type": "string"
                          },
                          "locale": {
                            "type": "string"
                          }
                        },
                        "description": "The attribute value in which is stored the media file you want to use as the source file for your transformation. More details <a href='/concepts/asset-manager.html#source-file'>here</a>."
                      },
                      "target": {
                        "required": [
                          "attribute",
                          "channel",
                          "locale"
                        ],
                        "type": "object",
                        "properties": {
                          "attribute": {
                            "type": "string"
                          },
                          "channel": {
                            "type": "string"
                          },
                          "locale": {
                            "type": "string"
                          }
                        },
                        "description": "The attribute value in which the PIM will generate the new transformed file, aka the target file. More details <a href='/concepts/asset-manager.html#target-file'>here</a>."
                      },
                      "operations": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "parameters": {
                            "type": "object",
                            "properties": {
                              "colorspace": {
                                "type": "string"
                              },
                              "width": {
                                "type": "integer"
                              },
                              "height": {
                                "type": "integer"
                              },
                              "ratio": {
                                "type": "integer"
                              },
                              "resolution-unit": {
                                "type": "string"
                              },
                              "resolution-x": {
                                "type": "integer"
                              },
                              "resolution-y": {
                                "type": "integer"
                              },
                              "quality": {
                                "type": "integer"
                              }
                            }
                          }
                        },
                        "description": "The transformations that should be applied to your source file to generate the target file. More details <a href='/concepts/asset-manager.html#transformation-operations'>here</a>.",
                        "x-validation-rules": "Should contain at least one operation"
                      }
                    }
                  },
                  "x-validation-rules": "To know more about the validation of this property, take a look at our transformation format.",
                  "x-from-version": "4.0"
                }
              },
              "example": {
                "code": "model_pictures",
                "labels": {
                  "en_US": "Model pictures",
                  "fr_FR": "Photographies en pied"
                },
                "attribute_as_main_media": "main_image",
                "naming_convention": {
                  "source": {
                    "property": "code"
                  },
                  "pattern": "/(?P<product_ref>.*)-.*/",
                  "abort_asset_creation_on_error": true
                },
                "product_link_rules": [
                  {
                    "product_selections": [
                      {
                        "field": "sku",
                        "operator": "EQUALS",
                        "value": "{{product_ref}}"
                      }
                    ],
                    "assign_assets_to": [
                      {
                        "attribute": "model_pictures",
                        "mode": "replace"
                      }
                    ]
                  }
                ],
                "transformations": [
                  {
                    "label": "Thumbnail plus black and white transformation",
                    "filename_suffix": "_thumbnailBW",
                    "source": {
                      "attribute": "main_image"
                    },
                    "target": {
                      "attribute": "thumbnail"
                    },
                    "operations": [
                      {
                        "type": "thumbnail",
                        "parameters": {
                          "width": 150,
                          "height": 150
                        }
                      },
                      {
                        "type": "colorspace",
                        "parameters": {
                          "colorspace": "grey"
                        }
                      }
                    ]
                  }
                ]
              }
            }
          ]
        },
        "AssetFamilyItemList": {
          "type": "object",
          "properties": {
            "_links": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "object",
                  "properties": {
                    "href": {
                      "type": "string",
                      "description": "URI of the resource"
                    }
                  }
                }
              }
            }
          }
        },
        "AssetAttributeList": {
          "type": "array",
          "items": {
            "required": [
              "code",
              "media_type",
              "type"
            ],
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "description": "Attribute code",
                "x-immutable": true
              },
              "labels": {
                "type": "object",
                "properties": {
                  "localeCode": {
                    "type": "string",
                    "description": "Attribute label for the locale `localeCode`"
                  }
                },
                "description": "Attribute labels for each locale",
                "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
              },
              "type": {
                "type": "string",
                "description": "Attribute type. See <a href='/concepts/asset-manager.html#asset-attribute'>type</a> section for more details.",
                "enum": [
                  "text",
                  "media_link",
                  "number",
                  "media_file",
                  "single_option",
                  "multiple_options",
                  "reference_entity_single_link",
                  "reference_entity_multiple_links",
                  "boolean"
                ],
                "x-immutable": true
              },
              "value_per_locale": {
                "type": "boolean",
                "description": "Whether the attribute is localizable, i.e. can have one value by locale",
                "default": false,
                "x-immutable": true
              },
              "value_per_channel": {
                "type": "boolean",
                "description": "Whether the attribute is scopable, i.e. can have one value by channel",
                "default": false,
                "x-immutable": true
              },
              "is_required_for_completeness": {
                "type": "boolean",
                "description": "Whether the attribute should be part of the record's completeness calculation",
                "default": false
              },
              "is_read_only": {
                "type": "boolean",
                "description": "Whether the attribute should be in read only mode only in the UI, but you can still update it with the API",
                "default": false
              },
              "max_characters": {
                "type": "integer",
                "description": "Maximum number of characters allowed for the value of the attribute when the attribute type is `text`",
                "x-warning": "Only for `text` attribute type"
              },
              "is_textarea": {
                "type": "boolean",
                "description": "Whether the UI should display a text area instead of a simple field when the attribute type is `text`",
                "default": false,
                "x-warning": "Only for `text` attribute type"
              },
              "is_rich_text_editor": {
                "type": "boolean",
                "description": "Whether the UI should display a rich text editor instead of a simple text area when the attribute type is `text`",
                "x-validation-rules": "Required when the property `is_textarea` is equal to `true`",
                "x-warning": "Only for `text` attribute type"
              },
              "validation_rule": {
                "type": "string",
                "description": "Validation rule type used to validate the attribute value when the attribute type is `text`",
                "default": "none",
                "enum": [
                  "email",
                  "url",
                  "regexp",
                  "none"
                ],
                "x-warning": "Only for `text` attribute type"
              },
              "validation_regexp": {
                "type": "string",
                "description": "Regexp expression used to validate the attribute value when the attribute type is `text`",
                "default": "null",
                "x-validation-rules": "Required when the property `validation_rule` is equal to `regexp`",
                "x-warning": "Only for `text` attribute type"
              },
              "allowed_extensions": {
                "type": "array",
                "description": "Extensions allowed when the attribute type is `media_file`",
                "items": {
                  "type": "string"
                },
                "x-warning": "Only for `media_file` attribute type"
              },
              "max_file_size": {
                "type": "string",
                "description": "Max file size in MB when the attribute type is `media_file`",
                "default": "null",
                "x-warning": "Only for `media_file` attribute type"
              },
              "decimals_allowed": {
                "type": "boolean",
                "description": "Whether decimals are allowed when the attribute type is `number`",
                "default": false,
                "x-warning": "Only for `number` attribute type"
              },
              "min_value": {
                "type": "string",
                "description": "Minimum value allowed when the attribute type is `number`",
                "default": "null",
                "x-validation-rules": "The minimum value must be lower than the maximum value",
                "x-warning": "Only for `number` attribute type"
              },
              "max_value": {
                "type": "string",
                "description": "Maximum value allowed when the attribute type is `number`",
                "default": "null",
                "x-validation-rules": "The maximum value must be greater than the minimum value",
                "x-warning": "Only for `number` attribute type"
              },
              "media_type": {
                "type": "string",
                "description": "For the `media_link` attribute type, it is the type of the media behind the url, to allow its preview in the PIM. For the `media_file` attribute type, it is the type of the file.",
                "enum": [
                  "image",
                  "pdf",
                  "youtube",
                  "vimeo",
                  "other"
                ],
                "x-warning": "Only required for `media_link` and `media_file` attribute types"
              },
              "prefix": {
                "type": "string",
                "description": "Prefix of the `media_link` attribute type. The common url root that prefixes the link to the media",
                "default": "null",
                "x-warning": "Only for `media_link` attribute type"
              },
              "suffix": {
                "type": "string",
                "description": "Suffix of the `media_link` attribute type. The common url suffix for the media",
                "default": "null",
                "x-warning": "Only for `media_link` attribute type"
              }
            },
            "example": {
              "code": "model_is_wearing_size",
              "labels": {
                "en_US": "Model is wearing size",
                "fr_FR": "Le mannequin porte la taille"
              },
              "type": "single_option",
              "value_per_locale": false,
              "value_per_channel": false,
              "is_required_for_completeness": true
            }
          }
        },
        "AssetAttributeOptionList": {
          "type": "array",
          "items": {
            "required": [
              "code"
            ],
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "description": "Attribute's option code",
                "x-immutable": true
              },
              "labels": {
                "type": "object",
                "properties": {
                  "localeCode": {
                    "type": "string",
                    "description": "Attribute label for the locale `localeCode`"
                  }
                },
                "description": "Attribute labels for each locale",
                "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
              }
            },
            "example": {
              "code": "small",
              "labels": {
                "en_US": "S",
                "fr_FR": "S"
              }
            }
          }
        },
        "AssetList": {
          "allOf": [
            {
              "type": "object",
              "properties": {
                "_links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "object",
                      "properties": {
                        "href": {
                          "type": "string",
                          "description": "URI of the resource"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "required": [
                "code"
              ],
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "Code of the asset",
                  "x-immutable": true
                },
                "values": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "channel": {
                          "type": "string",
                          "description": "Channel code of the asset attribute value"
                        },
                        "locale": {
                          "type": "string",
                          "description": "Locale code of the asset attribute value"
                        },
                        "data": {
                          "type": "object",
                          "properties": {},
                          "description": "Asset attribute value. See <a href='/concepts/asset-manager.html#the-data-format'>the `data` format</a> section for more details."
                        }
                      }
                    }
                  },
                  "description": "Asset attributes values, see the <a href='/concepts/asset-manager.html#focus-on-the-asset-values'>Focus on the asset values</a> section for more details.",
                  "x-validation-rules": "Validation rules detailed in Asset attribute values section"
                },
                "created": {
                  "type": "string",
                  "description": "Date of creation",
                  "format": "dateTime",
                  "x-immutable": true,
                  "x-read-only": true,
                  "x-from-version": "6.0"
                },
                "updated": {
                  "type": "string",
                  "description": "Date of the last update",
                  "format": "dateTime",
                  "x-read-only": true,
                  "x-from-version": "6.0"
                }
              },
              "example": {
                "code": "sku_54628_picture1",
                "values": {
                  "media_preview": [
                    {
                      "data": "sku_54628_picture1.jpg"
                    }
                  ],
                  "model_wears_size": [
                    {
                      "data": "s"
                    }
                  ],
                  "photographer": [
                    {
                      "data": "ben_levy"
                    }
                  ],
                  "main_colors": [
                    {
                      "data": [
                        "red",
                        "purple"
                      ]
                    }
                  ],
                  "end_of_use_date": [
                    {
                      "data": "02/03/2021"
                    }
                  ]
                },
                "created": "2021-05-31T09:23:34+00:00",
                "updated": "2021-05-31T09:23:34+00:00"
              }
            }
          ]
        },
        "AssetItemList": {
          "type": "object",
          "properties": {
            "_links": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "object",
                  "properties": {
                    "href": {
                      "type": "string",
                      "description": "URI of the resource"
                    }
                  }
                }
              }
            }
          }
        },
        "AppCatalogList": {
          "allOf": [
            {
              "type": "object",
              "properties": {
                "_links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "object",
                      "properties": {
                        "href": {
                          "type": "string",
                          "description": "URI of the resource"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Catalog id",
                  "x-immutable": true
                },
                "name": {
                  "type": "string",
                  "description": "Catalog name"
                },
                "enabled": {
                  "type": "boolean",
                  "description": "Whether the catalog is enabled or not",
                  "default": false
                }
              },
              "example": {
                "id": "12351d98-200e-4bbc-aa19-7fdda1bd14f2",
                "name": "My app catalog",
                "enabled": false
              }
            }
          ]
        },
        "Error": {
          "type": "object",
          "properties": {
            "code": {
              "type": "integer",
              "description": "HTTP status code"
            },
            "message": {
              "type": "string",
              "description": "Message explaining the error"
            }
          }
        },
        "ErrorByLine": {
          "type": "object",
          "properties": {
            "line": {
              "type": "integer",
              "description": "Line number"
            },
            "identifier": {
              "type": "string",
              "description": "Resource identifier, only filled when the resource is a product"
            },
            "code": {
              "type": "string",
              "description": "Resource code, only filled when the resource is not a product"
            },
            "status_code": {
              "type": "integer",
              "description": "HTTP status code, see <a href=\"/documentation/responses.html#client-errors\">Client errors</a> to understand the meaning of each code"
            },
            "message": {
              "type": "string",
              "description": "Message explaining the error"
            }
          }
        },
        "ErrorByLineProductUuid": {
          "type": "object",
          "properties": {
            "line": {
              "type": "integer",
              "description": "Line number"
            },
            "uuid": {
              "type": "string",
              "description": "Product uuid"
            },
            "status_code": {
              "type": "integer",
              "description": "HTTP status code, see <a href=\"/documentation/responses.html#client-errors\">Client errors</a> to understand the meaning of each code"
            },
            "message": {
              "type": "string",
              "description": "Message explaining the error"
            }
          }
        },
        "ErrorByObject": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "description": "Resource code"
              },
              "status_code": {
                "type": "integer",
                "description": "HTTP status code, see <a href=\"/documentation/responses.html#client-errors\">Client errors</a> to understand the meaning of each code"
              },
              "message": {
                "type": "string",
                "description": "Message explaining the error"
              }
            }
          }
        },
        "Pagination": {
          "type": "object",
          "properties": {
            "_links": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "object",
                  "properties": {
                    "href": {
                      "type": "string",
                      "description": "URI of the current page of resources"
                    }
                  }
                },
                "first": {
                  "type": "object",
                  "properties": {
                    "href": {
                      "type": "string",
                      "description": "URI of the first page of resources"
                    }
                  }
                },
                "previous": {
                  "type": "object",
                  "properties": {
                    "href": {
                      "type": "string",
                      "description": "URI of the previous page of resources"
                    }
                  }
                },
                "next": {
                  "type": "object",
                  "properties": {
                    "href": {
                      "type": "string",
                      "description": "URI of the next page of resources"
                    }
                  }
                }
              }
            },
            "current_page": {
              "type": "integer",
              "description": "Current page number"
            }
          }
        },
        "SearchAfterPagination": {
          "type": "object",
          "properties": {
            "_links": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "object",
                  "properties": {
                    "href": {
                      "type": "string",
                      "description": "URI of the current page of resources"
                    }
                  }
                },
                "first": {
                  "type": "object",
                  "properties": {
                    "href": {
                      "type": "string",
                      "description": "URI of the first page of resources"
                    }
                  }
                },
                "next": {
                  "type": "object",
                  "properties": {
                    "href": {
                      "type": "string",
                      "description": "URI of the next page of resources"
                    }
                  }
                }
              }
            }
          }
        },
        "ItemList": {
          "type": "object",
          "properties": {
            "_links": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "object",
                  "properties": {
                    "href": {
                      "type": "string",
                      "description": "URI of the resource"
                    }
                  }
                }
              }
            }
          }
        },
        "MediaFileItemList": {
          "type": "object",
          "properties": {
            "_links": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "object",
                  "properties": {
                    "href": {
                      "type": "string",
                      "description": "URI to get the metadata of the media file"
                    }
                  }
                },
                "download": {
                  "type": "object",
                  "properties": {
                    "href": {
                      "type": "string",
                      "description": "URI to download the binaries of the media file"
                    }
                  }
                }
              }
            }
          }
        },
        "ReferenceEntityItemList": {
          "type": "object",
          "properties": {
            "_links": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "object",
                  "properties": {
                    "href": {
                      "type": "string",
                      "description": "URI of the resource"
                    }
                  }
                },
                "image_download": {
                  "type": "object",
                  "properties": {
                    "href": {
                      "type": "string",
                      "description": "URI to download the binaries of the reference entity image file"
                    }
                  }
                }
              }
            }
          }
        },
        "ReferenceEntityRecordItemList": {
          "type": "object",
          "properties": {
            "_links": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "object",
                  "properties": {
                    "href": {
                      "type": "string",
                      "description": "URI of the resource"
                    }
                  }
                }
              }
            }
          }
        },
        "DeprecatedAsset": {
          "required": [
            "code"
          ],
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "PAM asset code",
              "x-immutable": true
            },
            "categories": {
              "type": "array",
              "description": "Codes of the PAM asset categories in which the asset is classified",
              "items": {
                "type": "string"
              },
              "x-validation-rules": "Each string of the array is equal to an existing asset category code"
            },
            "description": {
              "type": "string",
              "description": "Description of the PAM asset",
              "default": "null"
            },
            "localizable": {
              "type": "boolean",
              "description": "Whether the asset is localized or not, meaning if you want to have different reference files for each of your locale",
              "default": false,
              "x-immutable": true
            },
            "tags": {
              "type": "array",
              "description": "Tags of the PAM asset",
              "items": {
                "type": "string"
              }
            },
            "end_of_use": {
              "type": "string",
              "description": "Date on which the PAM asset expire",
              "format": "dateTime",
              "default": "null",
              "x-validation-rules": "The date follows the ISO 8601 format"
            },
            "variation_files": {
              "type": "array",
              "description": "Variations of the PAM asset",
              "items": {
                "type": "object",
                "properties": {
                  "_link": {
                    "type": "object",
                    "properties": {
                      "self": {
                        "type": "object",
                        "properties": {
                          "href": {
                            "type": "string",
                            "description": "URI of the variation entity"
                          }
                        }
                      },
                      "download": {
                        "type": "object",
                        "properties": {
                          "href": {
                            "type": "string",
                            "description": "URI to download the variation file"
                          }
                        }
                      }
                    },
                    "description": "Links to get and download the variation file"
                  },
                  "locale": {
                    "type": "string",
                    "description": "Locale code of the variation"
                  },
                  "scope": {
                    "type": "string",
                    "description": "Channel code of the variation"
                  },
                  "code": {
                    "type": "string",
                    "description": "Code of the variation"
                  }
                }
              },
              "x-read-only": true
            },
            "reference_files": {
              "type": "array",
              "description": "Reference files of the PAM asset",
              "items": {
                "type": "object",
                "properties": {
                  "_link": {
                    "type": "object",
                    "properties": {
                      "self": {
                        "type": "object",
                        "properties": {
                          "href": {
                            "type": "string",
                            "description": "URI of the reference file entity"
                          }
                        }
                      },
                      "download": {
                        "type": "object",
                        "properties": {
                          "href": {
                            "type": "string",
                            "description": "URI to download the reference file"
                          }
                        }
                      }
                    },
                    "description": "Links to get and download the reference file"
                  },
                  "locale": {
                    "type": "string",
                    "description": "Locale code of the reference file"
                  },
                  "code": {
                    "type": "string",
                    "description": "Code of the reference file"
                  }
                }
              },
              "x-read-only": true
            }
          },
          "example": {
            "code": "tshirt_artemis_main_picture",
            "categories": [
              "tshirts_assets"
            ],
            "description": "The main picture of the Artemis t-shirt",
            "localizable": false,
            "tags": [
              "tshirts",
              "red",
              "summer"
            ],
            "end_of_use": "2019-09-01T00:00:00+0200",
            "variation_files": [
              {
                "_link": {
                  "download": {
                    "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/ecommerce/no_locale/download"
                  },
                  "self": {
                    "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/ecommerce/no_locale"
                  }
                },
                "scope": "e_commerce",
                "code": "7/5/8/e/758e39d48va7b42a55001434fd3d7b6cf3189b7f_tshirt_artemis_main_picture_ecommerce.jpg"
              },
              {
                "_link": {
                  "download": {
                    "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/print/no_locale/download"
                  },
                  "self": {
                    "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/print/no_locale"
                  }
                },
                "scope": "print",
                "code": "7/5/8/e/759e39d48va7b42a55002434fd3d7b6cf3189b7f_tshirt_artemis_main_picture_print.jpg"
              }
            ],
            "reference_files": [
              {
                "_link": {
                  "download": {
                    "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/reference-files/no_locale/download"
                  },
                  "self": {
                    "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/reference-files/no_locale"
                  }
                },
                "code": "7/5/8/e/759e39d48va7b42a55002434fd3d7b6cf3189b7f_tshirt_artemis_main_picture.jpg"
              }
            ]
          }
        },
        "DeprecatedAssetList": {
          "allOf": [
            {
              "type": "object",
              "properties": {
                "_links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "object",
                      "properties": {
                        "href": {
                          "type": "string",
                          "description": "URI of the resource"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "required": [
                "code"
              ],
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "PAM asset code",
                  "x-immutable": true
                },
                "categories": {
                  "type": "array",
                  "description": "Codes of the PAM asset categories in which the asset is classified",
                  "items": {
                    "type": "string"
                  },
                  "x-validation-rules": "Each string of the array is equal to an existing asset category code"
                },
                "description": {
                  "type": "string",
                  "description": "Description of the PAM asset",
                  "default": "null"
                },
                "localizable": {
                  "type": "boolean",
                  "description": "Whether the asset is localized or not, meaning if you want to have different reference files for each of your locale",
                  "default": false,
                  "x-immutable": true
                },
                "tags": {
                  "type": "array",
                  "description": "Tags of the PAM asset",
                  "items": {
                    "type": "string"
                  }
                },
                "end_of_use": {
                  "type": "string",
                  "description": "Date on which the PAM asset expire",
                  "format": "dateTime",
                  "default": "null",
                  "x-validation-rules": "The date follows the ISO 8601 format"
                },
                "variation_files": {
                  "type": "array",
                  "description": "Variations of the PAM asset",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_link": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the variation entity"
                              }
                            }
                          },
                          "download": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI to download the variation file"
                              }
                            }
                          }
                        },
                        "description": "Links to get and download the variation file"
                      },
                      "locale": {
                        "type": "string",
                        "description": "Locale code of the variation"
                      },
                      "scope": {
                        "type": "string",
                        "description": "Channel code of the variation"
                      },
                      "code": {
                        "type": "string",
                        "description": "Code of the variation"
                      }
                    }
                  },
                  "x-read-only": true
                },
                "reference_files": {
                  "type": "array",
                  "description": "Reference files of the PAM asset",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_link": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the reference file entity"
                              }
                            }
                          },
                          "download": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI to download the reference file"
                              }
                            }
                          }
                        },
                        "description": "Links to get and download the reference file"
                      },
                      "locale": {
                        "type": "string",
                        "description": "Locale code of the reference file"
                      },
                      "code": {
                        "type": "string",
                        "description": "Code of the reference file"
                      }
                    }
                  },
                  "x-read-only": true
                }
              },
              "example": {
                "code": "tshirt_artemis_main_picture",
                "categories": [
                  "tshirts_assets"
                ],
                "description": "The main picture of the Artemis t-shirt",
                "localizable": false,
                "tags": [
                  "tshirts",
                  "red",
                  "summer"
                ],
                "end_of_use": "2019-09-01T00:00:00+0200",
                "variation_files": [
                  {
                    "_link": {
                      "download": {
                        "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/ecommerce/no_locale/download"
                      },
                      "self": {
                        "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/ecommerce/no_locale"
                      }
                    },
                    "scope": "e_commerce",
                    "code": "7/5/8/e/758e39d48va7b42a55001434fd3d7b6cf3189b7f_tshirt_artemis_main_picture_ecommerce.jpg"
                  },
                  {
                    "_link": {
                      "download": {
                        "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/print/no_locale/download"
                      },
                      "self": {
                        "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/print/no_locale"
                      }
                    },
                    "scope": "print",
                    "code": "7/5/8/e/759e39d48va7b42a55002434fd3d7b6cf3189b7f_tshirt_artemis_main_picture_print.jpg"
                  }
                ],
                "reference_files": [
                  {
                    "_link": {
                      "download": {
                        "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/reference-files/no_locale/download"
                      },
                      "self": {
                        "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/reference-files/no_locale"
                      }
                    },
                    "code": "7/5/8/e/759e39d48va7b42a55002434fd3d7b6cf3189b7f_tshirt_artemis_main_picture.jpg"
                  }
                ]
              }
            }
          ]
        },
        "DeprecatedAssetReferenceFile": {
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "Code of the PAM asset reference file",
              "x-immutable": true
            },
            "locale": {
              "type": "string",
              "description": "Locale of the PAM asset reference file, equal to `null` if the asset is not localizable"
            },
            "_link": {
              "type": "object",
              "properties": {
                "download": {
                  "type": "object",
                  "properties": {
                    "href": {
                      "type": "string",
                      "description": "URI to download the reference file"
                    }
                  }
                }
              },
              "description": "Links to get and download the reference file"
            }
          },
          "example": {
            "code": "7/5/8/e/759e39d48va7b42a55002434fd3d7b6cf3189b7f_tshirt_artemis_main_picture.jpg",
            "_link": {
              "download": {
                "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/reference-files/no_locale/download"
              }
            }
          }
        },
        "DeprecatedAssetVariationFile": {
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "Code of the PAM asset variation file",
              "x-immutable": true
            },
            "locale": {
              "type": "string",
              "description": "Locale of the PAM asset variation file, equal to `null` if the asset is not localizable"
            },
            "scope": {
              "type": "string",
              "description": "Channel of the PAM asset variation file"
            },
            "_link": {
              "type": "object",
              "properties": {
                "download": {
                  "type": "object",
                  "properties": {
                    "href": {
                      "type": "string",
                      "description": "URI to download the variation file"
                    }
                  }
                }
              },
              "description": "Links to get and download the reference file"
            }
          },
          "example": {
            "code": "7/5/8/e/758e39d48va7b42a55001434fd3d7b6cf3189b7f_tshirt_artemis_main_picture_ecommerce.jpg",
            "scope": "ecommerce",
            "_link": {
              "download": {
                "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/ecommerce/no_locale/download"
              }
            }
          }
        },
        "DeprecatedAssetCategory": {
          "required": [
            "code"
          ],
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "PAM asset category code",
              "x-immutable": true
            },
            "parent": {
              "type": "string",
              "description": "PAM ssset category code of the parent's asset category",
              "default": "null",
              "x-validation-rules": "&bull; It is either equal to `null` or to an existing asset category code. &#10;&bull; If equal to an existing asset category code, it cannot reference itself."
            },
            "labels": {
              "type": "object",
              "properties": {
                "localeCode": {
                  "type": "string",
                  "description": "PAM asset category label for the locale `localeCode`"
                }
              },
              "description": "PAM asset category labels for each locale",
              "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
            }
          },
          "example": {
            "code": "front_views",
            "parent": "pictures",
            "labels": {
              "en_US": "Front views",
              "fr_FR": "Vues de face"
            }
          }
        },
        "DeprecatedAssetCategoryList": {
          "allOf": [
            {
              "type": "object",
              "properties": {
                "_links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "object",
                      "properties": {
                        "href": {
                          "type": "string",
                          "description": "URI of the resource"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "required": [
                "code"
              ],
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "PAM asset category code",
                  "x-immutable": true
                },
                "parent": {
                  "type": "string",
                  "description": "PAM ssset category code of the parent's asset category",
                  "default": "null",
                  "x-validation-rules": "&bull; It is either equal to `null` or to an existing asset category code. &#10;&bull; If equal to an existing asset category code, it cannot reference itself."
                },
                "labels": {
                  "type": "object",
                  "properties": {
                    "localeCode": {
                      "type": "string",
                      "description": "PAM asset category label for the locale `localeCode`"
                    }
                  },
                  "description": "PAM asset category labels for each locale",
                  "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                }
              },
              "example": {
                "code": "front_views",
                "parent": "pictures",
                "labels": {
                  "en_US": "Front views",
                  "fr_FR": "Vues de face"
                }
              }
            }
          ]
        },
        "DeprecatedAssetTag": {
          "required": [
            "code"
          ],
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "PAM asset tag code",
              "x-immutable": true
            }
          },
          "example": {
            "code": "tshirt"
          }
        },
        "DeprecatedAssetTagList": {
          "allOf": [
            {
              "type": "object",
              "properties": {
                "_links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "object",
                      "properties": {
                        "href": {
                          "type": "string",
                          "description": "URI of the resource"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "required": [
                "code"
              ],
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "PAM asset tag code",
                  "x-immutable": true
                }
              },
              "example": {
                "code": "tshirt"
              }
            }
          ]
        },
        "DeprecatedAssetReferenceFileUploadWarning": {
          "type": "object",
          "properties": {
            "message": {
              "type": "string",
              "description": "Message explaining the warning"
            },
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "channel": {
                    "type": "string",
                    "description": "Channel for which the variation file generation failed"
                  },
                  "locale": {
                    "type": "string",
                    "description": "Locale for which the variation file generation failed"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining why the variation file generation failed"
                  }
                }
              }
            }
          }
        }
      },
      "responses": {
        "400Error": {
          "description": "Bad request",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              }
            },
            "code": {
              "example": 400
            },
            "message": {
              "example": "Invalid JSON message received"
            }
          },
          "x-details": "Can be caused by a malformed JSON request"
        },
        "401Error": {
          "description": "Authentication required",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              }
            },
            "code": {
              "example": 401
            },
            "message": {
              "example": "Authentication is required"
            }
          },
          "x-details": "Can be caused by a missing or expired token"
        },
        "403CatalogError": {
          "description": "Access forbidden",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              }
            },
            "code": {
              "example": 403
            },
            "message": {
              "example": "Access forbidden. You are not allowed to list catalogs."
            }
          },
          "x-details": "The app does not have the permission to execute this request"
        },
        "403Error": {
          "description": "Access forbidden",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              }
            },
            "code": {
              "example": 403
            },
            "message": {
              "example": "Access forbidden. You are not allowed to list categories."
            }
          },
          "x-details": "The user does not have the permission to execute this request"
        },
        "404CatalogError": {
          "description": "Catalog not found",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              }
            },
            "code": {
              "example": 404
            },
            "message": {
              "example": "Catalog \"65f5a521-e65c-4d7b-8be8-1f267fa2729c\" does not exist or you can't access it."
            }
          },
          "x-details": "The catalog id given in the URI does not exist"
        },
        "404Error": {
          "description": "Resource not found",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              }
            },
            "code": {
              "example": 404
            },
            "message": {
              "example": "Resource `my_resource_code` does not exist."
            }
          },
          "x-details": "The resource code given in the URI does not correspond to any existing PIM resource"
        },
        "406Error": {
          "description": "Not Acceptable",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              }
            },
            "code": {
              "example": 406
            },
            "message": {
              "example": "`xxx’ in `Accept` header is not valid. Only `application/json` is allowed."
            }
          },
          "x-details": "The `Accept` header is not `application/json` but it should"
        },
        "413Error": {
          "description": "Request Entity Too Large",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              }
            },
            "code": {
              "example": 413
            },
            "message": {
              "example": "Too many resources to process, 100 is the maximum allowed."
            }
          },
          "x-details": "There are too many resources to process (max 100) or the line of JSON is too long (max 1 000 000 characters)"
        },
        "415Error": {
          "description": "Unsupported Media type",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              }
            },
            "code": {
              "example": 415
            },
            "message": {
              "example": "`xxx’ in `Content-Type’ header is not valid.  Only `application/json’ is allowed."
            }
          },
          "x-details": "The `Content-Type` header has to be `application/json`"
        },
        "415ErrorMultipart": {
          "description": "Unsupported Media type",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              }
            },
            "code": {
              "example": 415
            },
            "message": {
              "example": "`xxx’ in `Content-Type’ header is not valid.  Only `multipart/form-data’ is allowed."
            }
          },
          "x-details": "The `Content-Type` header has to be `multipart/form-data`"
        },
        "415ErrorStream": {
          "description": "Unsupported Media type",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              }
            },
            "code": {
              "example": 415
            },
            "message": {
              "example": "`xxx’ in `Content-Type’ header is not valid.  Only `application/vnd.akeneo.collection+json’ is allowed."
            }
          },
          "x-details": "The `Content-Type` header has to be `application/vnd.akeneo.collection+json`"
        },
        "422Error": {
          "description": "Unprocessable entity",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              }
            },
            "code": {
              "example": 422
            },
            "message": {
              "example": "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
            },
            "_links": {
              "example": {
                "documentation": {
                  "href": "http://api.akeneo.com/api-reference.html"
                }
              }
            }
          },
          "x-details": "The validation of the entity given in the body of the request failed"
        },
        "AssetMediaFileUploaded": {
          "description": "Created",
          "headers": {
            "Asset-media-file-code": {
              "description": "Code of the media file",
              "schema": {
                "type": "string"
              }
            },
            "Location": {
              "description": "URI of the created resource",
              "schema": {
                "type": "string"
              }
            }
          },
          "content": {},
          "x-details": "Means that the media file creation was successful"
        },
        "Created": {
          "description": "Created",
          "headers": {
            "Location": {
              "description": "URI of the created resource",
              "schema": {
                "type": "string"
              }
            }
          },
          "content": {},
          "x-details": "Means that the creation was successful"
        },
        "DeprecatedAssetReferenceFileUploaded": {
          "description": "Uploaded",
          "headers": {
            "Location": {
              "description": "URI of the created resource",
              "schema": {
                "type": "string"
              }
            }
          },
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "description": "Message explaining the warning"
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "channel": {
                          "type": "string",
                          "description": "Channel for which the variation file generation failed"
                        },
                        "locale": {
                          "type": "string",
                          "description": "Locale for which the variation file generation failed"
                        },
                        "message": {
                          "type": "string",
                          "description": "Message explaining why the variation file generation failed"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "x-details": "Means that the reference file upload was successful. Beware that even if the reference file upload is complete, some variation files generations could have failed. If so, you will see a warning message in the response body.",
          "x-no-entity": true
        },
        "NoContent": {
          "description": "No content to return",
          "headers": {
            "Location": {
              "description": "URI of the updated resource",
              "schema": {
                "type": "string"
              }
            }
          },
          "content": {},
          "x-details": "Means that the update was successful"
        },
        "ReferenceEntityMediaFileUploaded": {
          "description": "Created",
          "headers": {
            "Reference-entities-media-file-code": {
              "description": "Code of the media file",
              "schema": {
                "type": "string"
              }
            },
            "Location": {
              "description": "URI of the created resource",
              "schema": {
                "type": "string"
              }
            }
          },
          "content": {},
          "x-details": "Means that the media file creation was successful"
        },
        "Submitted": {
          "description": "Submitted",
          "headers": {
            "Location": {
              "description": "URI of the created resource",
              "schema": {
                "type": "string"
              }
            }
          },
          "content": {},
          "x-details": "Means that the draft submission was successful"
        }
      },
      "parameters": {
        "pagination_type": {
          "name": "pagination_type",
          "in": "query",
          "description": "Pagination method type, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
          "schema": {
            "type": "string",
            "default": "page",
            "enum": [
              "page",
              "search_after"
            ],
            "x-validation-rules": "One of the following values"
          },
          "x-validation-rules": "One of the following values"
        },
        "page": {
          "name": "page",
          "in": "query",
          "description": "Number of the page to retrieve when using the `page` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html#pagination\">Pagination</a> section",
          "schema": {
            "type": "integer",
            "default": 1
          }
        },
        "search_after": {
          "name": "search_after",
          "in": "query",
          "description": "Cursor when using the `search_after` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
          "schema": {
            "type": "string",
            "default": "cursor to the first page"
          }
        },
        "limit": {
          "name": "limit",
          "in": "query",
          "description": "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
          "schema": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "default": 10
          }
        },
        "code": {
          "name": "code",
          "in": "path",
          "description": "Code of the resource",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        "uuid": {
          "name": "uuid",
          "in": "path",
          "description": "Uuid of the resource",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        "reference_entity_code": {
          "name": "reference_entity_code",
          "in": "path",
          "description": "Code of the reference entity",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        "asset_family_code": {
          "name": "asset_family_code",
          "in": "path",
          "description": "Code of the asset family",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        "attribute_code": {
          "name": "attribute_code",
          "in": "path",
          "description": "Code of the attribute",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        "asset_code": {
          "name": "asset_code",
          "in": "path",
          "description": "Code of the asset",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        "channel_code": {
          "name": "channel_code",
          "in": "path",
          "description": "Code of the channel",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        "locale_code": {
          "name": "locale_code",
          "in": "path",
          "description": "Code of the locale if the asset is localizable or equal to `no-locale` if the asset is not localizable",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        "family_code": {
          "name": "family_code",
          "in": "path",
          "description": "Code of the family",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        "with_count": {
          "name": "with_count",
          "in": "query",
          "description": "Return the count of items in the response. Be carefull with that, on a big catalog, it can decrease performance in a significative way",
          "schema": {
            "type": "boolean",
            "default": false
          }
        },
        "with_attribute_options": {
          "name": "with_attribute_options",
          "in": "query",
          "description": "Return labels of attribute options in the response. (Only available since the 5.0 version)",
          "schema": {
            "type": "boolean",
            "default": false,
            "x-from-version": "5.0"
          },
          "x-from-version": "5.0"
        },
        "with_table_select_options": {
          "name": "with_table_select_options",
          "in": "query",
          "description": "Return the options of 'select' column types (of a table attribute) in the response. (Only available since the 7.0 version)",
          "schema": {
            "type": "boolean",
            "default": false,
            "x-from-version": "7.0"
          },
          "x-from-version": "7.0"
        },
        "with_quality_scores__products": {
          "name": "with_quality_scores",
          "in": "query",
          "description": "Return product quality scores in the response. (Only available since the 5.0 version)",
          "schema": {
            "type": "boolean",
            "default": false,
            "x-from-version": "5.0"
          },
          "x-from-version": "5.0"
        },
        "with_quality_scores__product_models": {
          "name": "with_quality_scores",
          "in": "query",
          "description": "Return product model quality scores in the response. <strong>(Only available since the 6.0 version)</strong>",
          "schema": {
            "type": "boolean",
            "x-from-version": "6.0"
          },
          "x-from-version": "6.0"
        },
        "with_completenesses": {
          "name": "with_completenesses",
          "in": "query",
          "description": "Return product completenesses in the response. (Only available since the 6.0 version)",
          "schema": {
            "type": "boolean",
            "default": false,
            "x-from-version": "6.0"
          },
          "x-from-version": "6.0"
        },
        "with_position": {
          "name": "with_position",
          "in": "query",
          "description": "Return information about category position into its category tree (only available since the 7.0 version)",
          "schema": {
            "type": "boolean",
            "x-from-version": "7.0"
          },
          "x-from-version": "7.0"
        },
        "updated_before": {
          "name": "updated_before",
          "in": "query",
          "description": "Filter products that have been updated BEFORE the provided date (Only available on Catalogs endpoints)",
          "schema": {
            "type": "string",
            "format": "date",
            "x-from-version": "SaaS"
          },
          "x-from-version": "SaaS"
        },
        "updated_after": {
          "name": "updated_after",
          "in": "query",
          "description": "Filter products that have been updated AFTER the provided date (Only available on Catalogs endpoints)",
          "schema": {
            "type": "string",
            "format": "date",
            "x-from-version": "SaaS"
          },
          "x-from-version": "SaaS"
        },
        "with_enriched_attributes": {
          "name": "with_enriched_attributes",
          "in": "query",
          "description": "Return attribute values of the category (only available on SaaS platforms)",
          "schema": {
            "type": "boolean",
            "x-from-version": "SaaS"
          },
          "x-from-version": "SaaS"
        },
        "with_enriched_attributes_coming_soon": {
          "name": "with_enriched_attributes",
          "in": "query",
          "description": "Return attribute values of the category (only available on SaaS platforms) <strong>[COMING SOON]<strong>",
          "schema": {
            "type": "boolean",
            "x-from-version": "SaaS"
          },
          "x-from-version": "SaaS"
        }
      }
    }
  }